import os
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import minimize
from numpy.polynomial.polynomial import polyval, polyder

lec_list_oneMEVopt = {
    '0.10': [-2.241713349852539, -0.24569396477133967],
    '0.15': [-3.071160103716932, -0.06780166792113267],
    '0.20': [-4.040317747286132, 0.22336628400193362],
    '0.25': [-5.148615964424001, 0.6418627575363183],
    '0.30': [-6.396653671611328, 1.207229180756135],
    '0.35': [-7.7840500433007795, 1.929044130968416],
    '0.40': [-9.310284894570248, 2.827620414818295],
    '0.45': [-10.976382994715028, 3.9102053241603847],
    '0.50': [-12.781292360262205, 5.208152933930167],
    '0.55': [-14.72614191422407, 6.695893252149921],
    '0.60': [-16.809452231875916, 8.449610181550119],
    '0.65': [-19.032172290830918, 10.460918170074276],
    '0.70': [-21.393484854440914, 12.715103143793295],
    '0.75': [-23.895741635404175, 15.28124179705932],
    '0.80': [-26.535099029892574, 18.129402255937986],
    '0.85': [-29.315055618403697, 21.110777779186705],
    '0.90': [-32.23368625650024, 24.811331646829313],
    '0.95': [-35.29201267388672, 28.556473213232344],
    '1.00': [-38.487548474358775, 32.88675978078561],
    '1.05': [-41.82448197237221, 37.18182654521661],
    '1.10': [-45.29844044685785, 42.563973127132414],
    '1.15': [-48.91247325111309, 48.0290012696559],
    '1.20': [-52.66811542305018, 53.9782103635785],
    '1.25': [-56.5590095512287, 60.365289914660195],
    '1.30': [-60.59167601428699, 67.24958664961711],
    '1.35': [-64.76195112247063, 74.7305044428001],
    '1.40': [-69.07288801806678, 82.72226549846859],
    '1.45': [-73.5229991204783, 91.23085929287275],
    '1.50': [-78.10941443906269, 100.40194950602833],
    '1.55': [-82.8376801686698, 110.27729118706151],
    '1.60': [-87.70187974527865, 120.7308018335645],
    '1.65': [-92.71051776501592, 131.91760944729117],
    '1.70': [-97.85495024904827, 143.6517754321499],
    '1.75': [-103.13585979326862, 156.4125102835575],
    '1.80': [-108.56079499288674, 169.39198842372255],
    '1.85': [-114.12497186109528, 184.1939644541464],
    '1.90': [-119.82399700307546, 199.25958573485778],
    '1.95': [-125.66490273845393, 215.36946631824233],
    '2.00': [-131.64811012515355, 232.28678410831856],
    '2.05': [-137.77069472280215, 250.41612122065087],
    '2.10': [-144.01858521350738, 255.65600692664455],
    '2.15': [-150.4193093360257, 288.35072339492694],
    '2.20': [-156.951738116609, 308.14575940583416],
    '2.25': [-163.62289182855804, 332.65301896098657],
    '2.30': [-170.44108103789853, 356.71533762799464],
    '2.35': [-177.39864013544124, 381.78177399075315],
    '2.40': [-184.49557241016748, 391.62301366354393],
    '2.45': [-191.7318811477288, 435.7998867514885],
    '2.50': [-199.09298014510415, 460.1504088638299],
    '2.55': [-206.6049784945809, 485.8214808789162],
    '2.60': [-214.25093312816216, 527.2585900399029],
    '2.65': [-222.04383010878155, 558.1888066284839],
    '2.70': [-229.96767794171546, 597.7644066437779],
    '2.75': [-238.03031440636883, 634.9285914413944],
    '2.80': [-246.25277581036121, 675.2831705527178],
    '2.85': [-254.58744889353292, 712.9749622772458],
    '2.90': [-263.07332137309277, 759.5331550233102],
    '2.95': [-271.69172904503455, 804.3351878899255],
    '3.00': [-280.44887734968853, 853.3416954563234],
    '3.05': [-289.3553528948012, 902.0600991087048],
    '3.10': [-298.40120672822417, 957.643233654882],
    '3.15': [-307.57893192594634, 1010.7324489701904],
    '3.20': [-316.89558730419924, 1068.897171518097],
    '3.25': [-326.3551500285391, 1130.2536297653742],
    '3.30': [-335.95181262927014, 1184.9143497055159],
    '3.35': [-345.68750509890083, 1263.3303912448123],
    '3.40': [-355.5643931751449, 1333.9715699025678],
    '3.45': [-365.5759621402045, 1393.1947631327914],
    '3.50': [-375.73101101051077, 1476.393965532213],
    '3.55': [-386.0251977113146, 1566.9390862602397],
    '3.60': [-396.45610101477814, 1643.415504661974],
    '3.65': [-407.0260095908083, 1739.507401826987],
    '3.70': [-417.734919051065, 1801.8097113140495],
    '3.75': [-428.5828250051266, 1930.1261600319046],
    '3.80': [-439.5724052117476, 2026.4468064997752],
    '3.85': [-450.69560882257315, 2140.0086710637593],
    '3.90': [-461.9689337019155, 2244.5585955303422],
    '3.95': [-473.3758782527628, 2367.7141410375266],
    '4.00': [-484.9160236577233, 2493.307704302547],
    '4.05': [-496.6010594015245, 2525.0002007697344],
    '4.10': [-508.43141067971504, 2759.455556383797],
    '4.15': [-520.3884658417015, 2899.9968046907384],
    '4.20': [-532.4875845782938, 3003.70732196558],
    '4.25': [-544.7323063569539, 3202.4658014423994],
    '4.30': [-557.1060883878584, 3321.7158956392054],
    '4.35': [-569.629091492088, 3483.5810812080285],
    '4.40': [-582.2842451131987, 3708.369390612675],
    '4.45': [-595.0892292967396, 3849.6856207695746],
    '4.50': [-608.0187914245165, 4090.154079813979],
    '4.55': [-621.0871304100367, 4280.123677728194],
    '4.60': [-634.2942392990549, 4504.403433468597],
    '4.65': [-647.6638081759495, 4716.269816698713],
    '4.70': [-661.1529604544477, 4929.657942871455],
    '4.75': [-674.7851473892981, 4967.530728516833],
    '4.80': [-688.5606160021888, 5455.255073805364],
    '4.85': [-702.4710521661735, 5675.8949933889535],
    '4.90': [-716.5205685854651, 5890.455735825737],
    '4.95': [-730.7091633429301, 6254.118384556076],
    '5.00': [-745.0368345189374, 6557.178965283885],
    '5.05': [-759.5035801913579, 6929.894304470142],
    '5.10': [-774.1093984355654, 7266.275006825581],
    '5.15': [-788.8542873244365, 7584.459179623853],
    '5.20': [-803.7382449283486, 7841.887032943189],
    '5.25': [-818.7612693151834, 8349.645910713225],
    '5.30': [-833.9233585503243, 8745.569394456239],
    '5.35': [-849.2245106966567, 9170.93938709418],
    '5.40': [-864.6647238145688, 9177.40475360211],
    '5.45': [-880.2386313028419, 10007.599876135591],
    '5.50': [-895.9568649391804, 10589.15958095068],
    '5.55': [-911.8197095642024, 10962.69375602344],
    '5.60': [-927.8161471223641, 11649.057915324445],
    '5.65': [-943.9401317468887, 12175.72603542247],
    '5.70': [-960.2261739922623, 12748.312515175456],
    '5.75': [-976.6516610698718, 12940.786696281431],
    '5.80': [-993.2165960597363, 14017.48595234578],
    '5.85': [-1009.8840643246214, 14683.113351230124],
    '5.90': [-1026.7210351988947, 15364.282408262588],
    '5.95': [-1043.6908934314458, 16104.349278664924],
    '6.00': [-1060.7933275848507, 16781.34388115216],
    '6.05': [-1078.054290201966, 17668.68778765861],
    '6.10': [-1095.4346902833322, 18428.847108108377],
    '6.15': [-1112.9674694786463, 19133.88263855518],
    '6.20': [-1130.6326070212613, 20293.278184467847],
    '6.25': [-1148.4087939145263, 20667.855538402855],
    '6.30': [-1166.3941760356104, 21853.08697589395],
    '6.35': [-1184.4621874713675, 23402.399425899384],
    '6.40': [-1202.690754863689, 24338.226254953704],
    '6.45': [-1221.0436944110072, 25470.413809121743],
    '6.50': [-1239.5580749420865, 25611.5485914641],
    '6.55': [-1258.188940474616, 28202.10015820703],
    '6.60': [-1276.9741465236802, 29032.238960048155],
    '6.65': [-1295.8749244361325, 30189.741089317053],
    '6.70': [-1314.9783039657389, 31923.32230717716],
    '6.75': [-1334.1489845619922, 33460.63797443802],
    '6.80': [-1353.4826943267028, 35026.99641639878],
    '6.85': [-1372.9637705989896, 36697.09757897393],
    '6.90': [-1392.5671353159662, 38952.574417777236],
    '6.95': [-1412.2920694174602, 40089.79431130463],
    '7.00': [-1432.2337468523494, 42881.222283674295],
    '7.05': [-1452.2451602467368, 43932.67912807587],
    '7.10': [-1472.4174903723479, 47048.76029244798],
    '7.15': [-1492.7380260802631, 48228.57779475267],
    '7.20': [-1513.174904333614, 51252.23036450703],
    '7.25': [-1533.769196502277, 53717.854231213765],
    '7.30': [-1554.5689558497754, 56067.87010401913],
    '7.35': [-1575.3563353612108, 58730.33205892598],
    '7.40': [-1596.3583878583372, 60695.41149600043],
    '7.45': [-1617.5092693396284, 60542.98193195747],
    '7.50': [-1638.799393027514, 66938.61575810623],
    '7.55': [-1660.299474046081, 70609.96130114186],
    '7.60': [-1681.7769030664722, 74741.51935323304],
    '7.65': [-1703.4844928480422, 77816.52811378888],
    '7.70': [-1725.3208279758642, 81013.57548678745],
    '7.75': [-1747.3067696170208, 84760.30971278471],
    '7.80': [-1769.3350734128544, 85670.35364247231],
    '7.85': [-1791.6745816924315, 94048.0229269554],
    '7.90': [-1814.0779802883728, 97080.11907713732],
    '7.95': [-1836.6094490271873, 103162.99253223822],
    '8.00': [-1859.2911947148484, 109364.48920183828],
    '8.05': [-1882.192316717482, 112798.59338529922],
    '8.10': [-1905.0492390275288, 120247.3952557208],
    '8.15': [-1928.1367054282755, 116368.1026097815],
    '8.20': [-1951.3749996134175, 127789.04168193937],
    '8.25': [-1974.7525351000006, 133544.97838286828],
    '8.30': [-1998.3543755518874, 141038.8738020222],
    '8.35': [-2021.91303642119, 152322.4957395722],
    '8.40': [-2045.7081541411353, 157450.76348026047],
    '8.45': [-2069.629929586313, 167102.38142946348],
    '8.50': [-2093.716116354316, 168267.2212592723],
    '8.55': [-2117.9032078477176, 183952.3194092704],
    '8.60': [-2142.2289526536383, 176856.7967405334],
    '8.65': [-2166.7196916650173, 197948.02389779233],
    '8.70': [-2191.296383777192, 206939.47843606496],
    '8.75': [-2216.105420523033, 222340.62703177085],
    '8.80': [-2241.0001094707727, 233286.80375319172],
    '8.85': [-2266.0543978618553, 243718.9963263235],
    '8.90': [-2291.2341524853646, 256547.80293468013],
    '8.95': [-2316.5529952419047, 265674.2573305992],
    '9.00': [-2342.0109252596644, 284551.8590283541],
    '9.05': [-2367.6079416641223, 289430.5348056311],
    '9.10': [-2393.3440435780512, 309627.0630166979],
    '9.15': [-2419.219230121521, 311255.46793141833],
    '9.20': [-2445.226070665665, 345503.467857891],
    '9.25': [-2471.3793446482605, 341692.6354408342],
    '9.30': [-2497.6792886892717, 379611.78003355203],
    '9.35': [-2524.110804897473, 374915.1583100813],
    '9.40': [-2550.6659034525373, 398498.56223092065],
    '9.45': [-2577.383247230127, 422749.18968259083],
    '9.50': [-2604.1765430238506, 457523.2039577933],
    '9.55': [-2631.2196699758256, 462433.63668152184],
    '9.60': [-2658.3707203232952, 478855.0125263103],
    '9.65': [-2685.6123974084326, 505715.8636087981],
    '9.70': [-2712.9926526116615, 541370.1760344201],
    '9.75': [-2740.5780692562025, 561057.3098265716],
    '9.80': [-2768.269765667835, 579154.9627222668],
    '9.85': [-2796.0752286305615, 613609.7298907933],
    '9.90': [-2824.0365771854636, 642409.6178257633],
    '9.95': [-2852.1456568979634, 681575.9380672561]
}

# values fitted with ABC/A3.py and A2.py


def return_val(lamb, data, var, polord=3, plot=False):

    L = C = D = AB = ABC = ABCD = ABCDE = ABCDEF = []

    if (data == "C1_D4"):
        L = [
            0.05, 0.1, 0.16, 0.2, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,
            0.7, 0.75, 0.8, 0.9, 0.95, 1, 1.05, 1.1, 1.2, 1.5, 2, 3, 4, 6, 10
        ]
        Cc = [
            -1.55166500, -2.24166300, -3.44040000, -4.04022700, -6.39651000,
            -7.80830000, -9.31007578, -10.97613646, -12.78163000, -14.72581116,
            -16.80907468, -19.03174482, -21.39405000, -23.89403709,
            -26.53580000, -32.23375000, -35.29122000, -38.48853000,
            -41.82441000, -45.29949000, -52.66596000, -78.11106000,
            -131.64598000, -280.45691000, -484.92093000, -1060.79670000,
            -2880.38650000
        ]
        Dd = [
            -0.3242536172, -0.2456829375, 0.01905070914, 0.223247243,
            1.206821045, 1.980641612, 2.82776987, 3.913090514, 5.208937347,
            6.717922122, 8.468271689, 10.46300555, 12.73444559, 15.27607615,
            18.13745202, 24.81264259, 28.66447948, 32.91101433, 37.52681162,
            42.57038705, 53.97051096, 100.476136, 232.4126443, 854.1074995,
            2495.364191, 16915.63021, 756723.2201
        ]
        AB = [
            9.68, 6.8, 5.25, 4.85, 4.06, 3.81, 3.64, 3.49, 3.37, 3.27, 3.19,
            3.16, 3.05, 3, 2.96, 2.88, 2.85, 2.82, 2.79, 2.77, 2.72, 2.63,
            2.54, 2.45, 2.41, 2.36, None
        ]
        ABC = [
            9.07, 6.46, 5.09, 4.67, 3.92, 3.69, 3.49, 3.34, 3.22, 3.11, 3.02,
            2.95, 2.88, 2.82, 2.77, 2.69, 2.65, 2.62, 2.59, 2.56, 2.51, 2.4,
            2.3, None, None, None, None
        ]
        ABCD = [
            8.28, 5.97, 4.87, 4.53, 4.02, 3.89, 3.75, 3.64, 3.55, 3.47, 3.39,
            3.32, 3.25, 3.19, 3.13, 3.02, 2.97, 2.93, 2.88, 2.84, 2.76, 2.58,
            2.37, 2.15, 2.04, 1.94, None
        ]
        ABCDE = [
            7.61, 5.54, 4.67, 4.44, 4.27, 4.27, 4.18, 4.1, 4.02, 3.93, 3.84,
            3.75, 3.67, 3.58, 3.5, 3.36, 3.29, 3.23, 3.17, 3.12, None, 2.76,
            2.49, 2.2, 2.08, None, None
        ]
        ABCDEF = [
            7.06, 5.18, 4.5, 4.4, 4.64, 4.74, 4.66, 4.59, 4.49, 4.37, 4.26,
            4.15, 4.04, 3.93, 3.84, 3.66, 3.58, 3.5, 3.43, 3.36, 3.24, 2.95,
            2.63, None, None, None, None
        ]

    if (data == "C1_D4_opt"):
        L = np.array(list(lec_list_oneMEVopt.keys())).astype(float)
        Cc = np.array(list(lec_list_oneMEVopt.values()))[:, 0].astype(float)
        Dd = np.array(list(lec_list_oneMEVopt.values()))[:, 1].astype(float)

    elif (data == "C1_D3"):
        L = [
            0.05, 0.1, 0.16, 0.2, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,
            0.7, 0.75, 0.8, 0.9, 0.95, 1, 1.05, 1.1, 1.2, 1.5, 2, 3, 4, 6, 10
        ]

        Cc = [
            -1.55166500, -2.24166300, -3.44040000, -4.04022700, -6.39651000,
            -7.80830000, -9.31007578, -10.97613646, -12.78163000, -14.72581116,
            -16.80907468, -19.03174482, -21.39405000, -23.89403709,
            -26.53580000, -32.23375000, -35.29122000, -38.48853000,
            -41.82441000, -45.29949000, -52.66596000, -78.11106000,
            -131.64598000, -280.45691000, -484.92093000, -1060.79670000,
            -2880.38650000
        ]
        Dd = [
            0.1329927285, 0.3701120098, 1.138524898, 1.249910638, 2.799024416,
            3.936630847, 5.177438097, 6.72964684, 8.552092744, 10.66423485,
            13.08996044, 15.85408, 18.9824788, 22.49131818, 26.42858035,
            35.64420878, 40.98921369, 46.87432648, 53.32423158, 60.37950916,
            76.44622944, 143.6179272, 346.2149284, 1468.17912, 5254.800421,
            61617.93639, 12838191.7
        ]
        AB = [
            9.68, 6.8, 5.25, 4.85, 4.06, 3.81, 3.64, 3.49, 3.37, 3.27, 3.19,
            3.16, 3.05, 3, 2.96, 2.88, 2.85, 2.82, 2.79, 2.77, 2.72, 2.63,
            2.54, 2.45, 2.41, 2.36, None
        ]
        ABC = [
            10.33, 7.38, 6.08, 5.36, 4.51, 4.26, 4.04, 3.87, 3.74, 3.62, 3.53,
            3.44, 3.37, 3.31, 3.26, 3.17, 3.13, 3.09, 3.06, 3.03, 2.98, 2.87,
            2.76, 2.66, 2.60, 2.56, None
        ]
        ABCD = [
            10.62, 7.93, 7.33, 6.18, 5.38, 5.12, 4.86, 4.66, 4.49, 4.34, 4.2,
            4.08, 3.97, 3.87, 3.79, 3.63, 3.56, 3.5, 3.44, 3.39, 3.29, 3.07,
            2.84, 2.6, None, None, None
        ]
        ABCDE = [
            10.94, 8.78, 9.01, 7.31, 6.36, 6.03, 5.68, 5.41, 5.18, 4.97, 4.78,
            4.62, 4.47, 4.34, 4.22, 4.01, 3.92, 3.83, 3.75, 3.68, 3.55, 3.26,
            2.95, 2.67, None, None, None
        ]
        ABCDEF = [
            11.45, 10.05, 10.66, 8.5, 7.26, 6.83, 6.39, 6.05, 5.75, 5.49, 5.27,
            5.06, 4.89, 4.73, 4.58, 4.33, 4.22, 4.12, 4.03, 3.94, 3.79, 3.45,
            3.11, 2.88, None, None, None
        ]

    elif (data == "C1_D15"):
        L = [
            0.05, 0.1, 0.16, 0.2, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,
            0.7, 0.75, 0.8, 0.9, 0.95, 1, 1.05, 1.1, 1.2, 1.5, 2, 3, 4, 6, 10
        ]
        Cc = [
            -1.55166500, -2.24166300, -3.44040000, -4.04022700, -6.39651000,
            -7.80830000, -9.31007578, -10.97613646, -12.78163000, -14.72581116,
            -16.80907468, -19.03174482, -21.39405000, -23.89403709,
            -26.53580000, -32.23375000, -35.29122000, -38.48853000,
            -41.82441000, -45.29949000, -52.66596000, -78.11106000,
            -131.64598000, -280.45691000, -484.92093000, -1060.79670000,
            -2880.38650000
        ]
        Dd = [
            1.002392192, 1.722987346, 3.504987582, 4.04790139, 7.943051578,
            10.80228028, 13.97486057, 18.01307982, 22.87440111, 28.67426894,
            35.55626025, 43.68943032, 53.2646948, 64.44890335, 77.59752149,
            110.6592829, 131.2985101, 155.2739701, 183.0258812, 215.1438822,
            295.1204267, 735.7354446, 3201.198262, 64382.48444, 1658016.226,
            1972633871, None
        ]
        AB = [
            9.68, 6.8, 5.25, 4.85, 4.06, 3.81, 3.64, 3.49, 3.37, 3.27, 3.19,
            3.16, 3.05, 3, 2.96, 2.88, 2.85, 2.82, 2.79, 2.77, 2.72, 2.63,
            2.54, 2.45, 2.41, 2.36, None
        ]
        ABC = [
            None, None, None, 8.27, 7.07, 6.76, 6.46, 6.25, 6.09, 5.95, 5.84,
            5.74, 5.66, 5.59, 5.53, 5.43, 5.39, 5.35, 5.32, 5.29, 5.23, 5.11,
            5.00, 4.88, 4.84, None, None
        ]
        ABCD = [
            None, None, None, 14.95, 10.47, 9.6, 8.71, 8.17, 7.75, 7.41, 7.13,
            6.9, 6.71, 6.54, 6.39, 6.15, 6.04, 5.96, 5.88, 5.8, 5.68, 5.4,
            5.15, None, None, None, None
        ]
        ABCDE = [
            None, None, None, 14.44, 11.16, 10.22, 9.41, 8.83, 8.36, 7.98,
            7.65, 7.38, 7.15, 6.94, 6.77, 6.48, 6.36, 6.26, 6.17, 6.09, 5.93,
            5.61, 5.37, None, None, None, None
        ]

    elif (data == "nuclear"):
        L = [
            0.16, 0.2, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75,
            0.8, 0.85, 0.9, 0.95, 1, 1.05, 1.1, 1.2, 1.5, 2, 3, 4, 6, 10
        ]
        Cc = [
            -5.23609711, -6.21155090, -9.04089890, -10.66481819, -12.42824554,
            -14.33104515, -16.37322998, -18.55475197, -20.87557983,
            -23.33569527, -25.93508911, -28.67371368, -31.55156555,
            -34.56868362, -37.72501221, -41.02048416, -44.45520020,
            -48.02915573, -51.74223328, -59.58599854, -86.45745087,
            -142.37614441, -295.95935059, -505.20166016, -1090.66113281,
            -2929.47631836
        ]
        Dd = [
            -0.2508527567, -0.01411577035, 0.9058334635, 1.562725218,
            2.36543082, 3.3244409, 4.450396189, 5.753778748, 7.245120228,
            8.935015304, 10.83416803, 12.95315533, 15.30282946, 17.89442822,
            20.7388847, 23.84721094, 27.23128363, 30.90286676, 34.87341855,
            43.76101396, 78.9169705, 172.7038298, 559.0134636, 1397.569451,
            6311.303676, 89436.18522
        ]

    elif (data == "unitarity"):
        L = [
            0.05, 0.1, 0.16, 0.2, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65,
            0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.05, 1.1, 1.2, 1.5, 2, 3, 4, 6,
            10
        ]
        Cc = [
            -0.07525112, -0.20872309, -0.72289535, -1.12549815, -2.47325034,
            -3.42836099, -4.48771144, -5.66495695, -6.98468235, -8.44796140,
            -10.05115409, -11.80058087, -13.68878974, -15.69305510,
            -17.85363976, -20.15208451, -22.58965285, -25.18813501,
            -30.74383329, -33.78677037, -40.15070955, -62.81802345,
            -111.61487253, -251.19187583, -446.06292972, -1004.42147643,
            -2786.87308821
        ]
        Dd = [
            -0.6718489361, -1.138950403, -1.440950698, -1.682214684,
            -2.196869695, -2.163255055, -2.084315563, -1.927048614,
            -1.617072038, -1.133654812, -0.4706700477, 0.4102884562,
            1.501701299, 2.727553437, 4.259185312, 6.041821303, 8.09760687,
            10.55607482, 16.11517017, 19.74434205, 27.25605369, 62.09939789,
            167.5600148, 720.9964392, 2255.255789, 19497.37226, 1333896.806
        ]

    else:
        print(data + " is not a valid set of data.")
        print(" >> you can use C1_D4 C1_D3 C1_D15 nuclear or unitarity")
        return 1

    X = np.array(L)[:-1].astype(np.double)

    if (var == "AB"):
        Y = np.array(AB).astype(np.double)
    elif (var == "ABC"):
        Y = np.array(ABC).astype(np.double)
    elif (var == "ABCD"):
        Y = np.array(ABCD).astype(np.double)
    elif (var == "ABCDE"):
        Y = np.array(ABCDE).astype(np.double)
    elif (var == "ABCDEF"):
        Y = np.array(ABCDEF).astype(np.double)
    elif (var == "C"):
        Y = np.array(Cc)[:-1].astype(np.double)
    elif (var == "D"):
        Y = np.array(Dd)[:-1].astype(np.double)
    else:
        print(str(var) + " is not a valid observable or lec.")
        print(" >> You can ask for C D AB ABC ABCD ABCDE or ABCDEF")
        return 1

    mask = np.isfinite(Y)
    if len(Y) == 0:
        print("Sorry, we dont have the data you are looking for.")
        return 1

    def residt(pars):
        return ((Y - polyval(X, pars))**2).sum()

    def constrt(pars):
        return np.sign(Y[-1]) * polyval(lamb, polyder(pars, m=2))

    con1t = {'type': 'ineq', 'fun': constrt}
    rest = minimize(
        residt,
        np.random.rand(polord),
        method='cobyla',
        options={'maxiter': 50000},
        constraints=con1t)
    fitdat = polyval(lamb, rest.x)

    plt.ylim([np.min(Y[mask]), np.max(Y[mask])])
    plt.plot(X[mask], Y[mask], 'ko', label="data")
    plt.plot(lamb, fitdat, label='fit')
    plt.legend(loc='best', numpoints=1, fontsize=12)
    plt.xlabel(r'$\Lambda\,[fm^{-1}]$', fontsize=12)
    plt.ylabel(r'$%s\,[MeV]$' % var, fontsize=12)
    strFile = 'Le%s_fit.pdf' % var
    if os.path.isfile(strFile):
        os.remove(strFile)
    plt.savefig(strFile)
    strFile = 'Le%s_fit.dat' % var
    if os.path.isfile(strFile):
        os.remove(strFile)
    s = ''
    for n in range(len(lamb)):
        s += '%4.4f   %12.4f\n' % (float(lamb[n]), float(fitdat[n]))
    with open(strFile, 'a') as outfile:
        outfile.write(s)

    if plot:
        plt.show()
    plt.clf()

    return rest, X, Y