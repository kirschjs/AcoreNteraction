      PROGRAM DR2END_AK_I_2
C     FUER SMIN STATTDESSEN
CC    SUBROUTINE ENDMAT(EOV)
      IMPLICIT REAL*8 (A-H,O-Z)
C     STREU ENDMAT NUR FUER STREUPOTENTIALE (KEINE QUARKS!!!!!!!!)
C     ZUSAETZLICH FUER 3-N-POTENTIALE!!!!!!!!!
C     VORBEREITET FUER SMIN
C     JEWEILS SMIN SUCHEN UND NACH VORSCHRIFT HANDELN
C     DAMIT DIE COMMONBLOCKS STIMMEN MUSS 'par/DR2END_AK' durch 'par/SMIN' ERSETZT
C     WERDEN
C     FUER ZWEI SORTEN VON TEILCHENMASSEN
C
C   NZOP=14 FUER SZ,BONN,AV14,AV18 POTENTIALE
C      NZOP=23 FUER ZUSATZLICH 3N-POTENTIALE
C      NEU NZOP=31 FUER NEUES 3N-POTENTIAL
C
C      2.6.89 UEBERLAGERUNG VON BASISVEKTOREN UNTERSCHIEDLICHER
C             TEILCHENZAHL FUER KEIND.LT.0 MOEGLICH,
C             FUER KEIND.LT.-1 WIRD BEI DISTORTIONSKANAELEN
C             DIE KANALSPINKOPPLUNG NICHT VERWENDET.             R.M.
C     10.4.90  NENTP=2 RUFT CHEPOK H.M.H.
C     19.2.91  FUER NZZ NEGATIV WERDEN ABS(NZZ)EIGENVEKTOREN EINGELESEN H.M.H.
C     8.10.91 NENTP=3 BINDUNGSRECHNUNG FUER GEKOPPELTE KANAELE OHNE !!!
C             UEBERGANG AUF RELATIV KOORDINATEN H.M.H.
C     1.4.92  BEI EINLESEN VON EIGENVEKTOREN, KANN DER ERSTE UEBER IPLO .NE. 0
C             IN PLOB AUSGEDRUCKT WERDEN H.M.H.
C     2.6.92  FUER KEIND .LT.0 ERFOLGT BEI BINDUNGSRECHNUNG KEINE
C             ABFRAGE AUF SPIN,GESAMT-L UND RELATIV-L  H.M.H.
C     27.9.95 UMKOP AUF F9J UMGESTELLT H.M.H.
C     23.5.96 ABFRAGE AUF QUAFMATRIXELEMENT GLEICH NULL VERSCHAERFT H.M.H.
C     12.7.96 SCRATCH-FILE BESEITIGT, MATRIX DM ERGAENZT, STRUKTUR TEILS NEU H.M.H
C     9.9.98  BEI NN- UND NNN-WECHSELWIRKUNG WIRD DIE ANZAHL DER BASISVEKTOREN
C             UNTERSCHIEDEN H.M.H.
C     16.5.00 FUER NEUES 3N-POTENTIAL MEHR OPERATOREN H.M.H.
C     22.1.03 AUSBAU VON LOOP KPUTZ, ES WIRD NUR NOCH EINMAL VOM FILE QUAOUT
C             GELESEN H.M.H.
C
C     FOLGENDE OPERATOREN WERDEN BERECHNET:
c - NN ------------------------------------------
C     1. OPERATOR: NORM
C     2. OPERATOR: KIN. ENERGIE
C     3. OPERATOR: COULOMB
C     4. OPERATOR: ZENTRAL
C     5. OPERATOR: P-QUADRAT
C     6. OPERATOR: R-QUADRAT
C     7. OPERATOR: SPIN-BAHN
C     8. OPERATOR: TENSOR
C     9. OPERATOR: TENSOR_p antisymmetric
c - NNN -----------------------------------------
C    10. OPERATOR: 3N NORM
C    11. OPERATOR: 3N OLD URBANA9 ZENTRAL OP WITHOUT (ISO)SPIN DEP
C    12. OPERATOR: 3N LO CONTACT \tau\cdot\tau
c -----------------------------------------------
C     10. TENSOR 
C     11.  LS-QUADRAT TENSOR 
C     12. ISO-TENSOR SKALAR
C     13. ISO-TENSOR TENSOR
C     14. CHARGE-ASYMMETRIC
C     15. OPERATOR: NORM  3TEILCHEN UIX
C     16. OPERATOR: ZENTRAL
C     17. OPERATOR: SPIN-SPIN ANTI
C     18. OPERATOR: SPIN-SPIN KOM
C     19. OPERATOR: SPIN-TENSOR R_IK       ANTI
C     20. OPERATOR: SPIN-TENSOR R_IJ       ANTI
C     21. OPERATOR: SPIN-TENSOR R_IK       KOM
C     22. OPERATOR: SPIN-TENSOR R_IJ       KOM
C     23. OPERATOR: TENSOR-TENSOR RANG=0   ANTI
C     24. OPERATOR: TENSOR-TENSOR RANG=0   KOM
C     25. OPERATOR: TENSOR-TENSOR RANG=1   ANTI
C     26. OPERATOR: TENSOR-TENSOR RANG=1   KOM
C     27. OPERATOR: TENSOR-TENSOR RANG=2   ANTI
C     28. OPERATOR: TENSOR-TENSOR RANG=2   KOM
C     29. OPERATOR: TENSOR-TENSOR RANG=3   KOM
C     30. OPERATOR: SPIN-SPIN VPVS
C     31. OPERATOR: TENSOR R_IK VPVS
C     32. OPERATOR: NORM  3TEILCHEN ILL
C     33. OPERATOR: SPIN-TENSOR I
C     34. OPERATOR: TENSOR**2 RG1 I      
C     35. OPERATOR: TENSOR**2 RG2 I      
C     36. OPERATOR: TENSOR**3 RG0 I      
C     37. OPERATOR: TENSOR**3 RG(1)1 I   
C     38. OPERATOR: TENSOR**3 RG(2)1 I   
C     39. OPERATOR: TENSOR**3 RG(3)1 I   
C     40. OPERATOR: TENSOR**3 RG(2)2 I   
C     41. OPERATOR: TENSOR**3 RG(3)2 I   
C     42. OPERATOR: TENSOR**3 RG(3)3 I   
C
C    FALLS TNI UNGESPLITTET
C     17. OPERATOR: SPIN-SPIN
C     18. OPERATOR: SPIN-TENSOR R_IK
C     19. OPERATOR: SPIN-TENSOR R_IJ
C     20. OPERATOR: TENSOR-TENSOR RANG=0
C     21. OPERATOR: TENSOR-TENSOR RANG=1
C     22. OPERATOR: TENSOR-TENSOR RANG=2
C     23. OPERATOR: TENSOR-TENSOR RANG=3
C
C
        INCLUDE 'par/DR2END_AK_I_2'
C
C     NZOPER: MAXIMALE ANZAHL DER OPERATOREN IN ENDMAT
C     MZPARM:     "      "     "  RADIALRARAMETER
C     NZKMAX:     "      "     "  KANAELE
C     NZBMAX:     "      "     "  BASISVEKTOREN AUS QUAF
C     NZUMAX:     "      "     "  UEBERLAGERUGNSKOEFFIZIENTEN
C     NZFMAX:     "      "     "  ZERLEGUNGEN
C     NZZMAX:     "      "     "  AUSGEDRUCKTEN EIGENFUNKTIONEN
C     NDIMD  :     "      "     "  RADIALPARAMETER*KANAELE
C                                 NDIMD.LE.MZPARM*NZKMAX
C
      COMMON /COMY/ D(100)
C
      COMMON /PARA/ PAR(MZPARM,NZKMAX),NAR(MZPARM,NZKMAX)
C
      COMMON /POKA/ B, IKAPO(NZKMAX),IZP(NZKMAX),IZQ(NZKMAX+1),
     *               NZKAPO,KAPO(NZKMAX),IZPWM
C
      COMMON /BIGG/ DM(NDIMD,NDIMD,2,2)
C            DM(.,.,1,.) ENTHAELT BEITRAEGE UEBER FRAGMENTGRENZEN
C            DM(.,.,2,.) ENTHAELT ALLE BEITRAEGE
C            DM(.,.,.,1) ENTHAELT NORM
C            DM(.,.,.,2) ENTHAELT HAMILTONIAN
C
      COMMON /DREH/ MLWERT(5,NZBMAX),JWERT(3,NZKMAX),
     *              MMS(3,NZBMAX),JWS
C
      COMMON /SHIFT/ ES(NZKMAX),IABLK,NKANB(NZKMAX)
C
      COMMON /UMNO/ REDM(NZKMAX), NZKA, NZKB, MMM, 
     *              NZQ(NZKMAX+1), LWERT(5,NZKMAX), 
     *              KPK(NZKMAX), MASSE(2,NZKMAX)
C
      COMMON /FAKUL/ FAKU(13)
C
      COMMON /PLO/ SNORM(NZKMAX), QQN(NDIMD), SWW
C
      COMMON /KAN/ OPWERT(NZOPER+2,NDIMD), WNORM(NZKMAX),
     *             NZP(NZKMAX), EBIN(NZKMAX), MLAD(2,NZKMAX),
     *             H2M, E2R0 ,
     *  RUHM(2,NZKMAX), EBIN1(NZKMAX), NREL
C
      COMMON QQ(NDIMD,NZZMAX),
     *       INPUT, NBAND3, NBAND9, NENTP, NZZ, IAUW,
     *       IDRU, NB15, IPLO
C
      DIMENSION KPB(NZBMAX),  LREG(NZOPER), NZPAQ(NZBMAX),
     *          MMASSE(2,NZBMAX), MMLAD(2,NZBMAX), E2K(NZKMAX),
     *          PAQ(MZPARM,NZBMAX), MS(3,NZKMAX), NKAENT(NZKMAX),
     *          LUM(MZPARM+1,NZKMAX), DN(MZPARM,MZPARM,2),
     *          NZRHO(NZFMAX), MREG(NZOPER), KANUM(NZBMAX,KKMAX),
     *          OPW(NZOPER), UMKOF(NZKMAX,NZBMAX), JKK(NZBMAX)
      DIMENSION OBWERT(NZOPER+2,NZZMAX,NZZMAX),
     *          NUMK(NDIMD), UMK(NZBMAX), POTFAK(NZOPER),
     *          MUMK(NZBMAX), UNK(NZUMAX), NCOF(NZBMAX,NZKMAX)
C
C
      CHARACTER*36 VARFOR(NZOPER), UNSPLIT(7)
C
      CHARACTER*10 CHINT(2)
      DATA CHINT /'(26I3)','(20I4)'/
C
      DATA VARFOR/        '('' NORM !!!!             '',F16.7)',
     2'('' KINETISCHE ENERGIE =  '',F16.7)',
     3'('' COULOMB ENERGIE    =  '',F16.7)',
     4'('' ZENTRAL NN         =  '',F16.7)',
     5'('' P**2               =  '',F16.7)',
     6'('' R**2               =  '',F16.7)',
     7'('' SPIN-BAHN          =  '',F16.7)',
     8'('' TENSOR             =  '',F16.7)',
     9'('' TENSOR_p           =  '',F16.7)',
     *'('' NORM 3N            =  '',F16.7)',
     *'('' ZENTRAL  3TEIL UIX =  '',F16.7)',
     *'('' ZENTRAL NNN        =  '',F16.7)',
     *'('' ZENTRAL  3TEIL UIX =  '',F16.7)',
     *'('' ZENTRAL  3TEIL UIX =  '',F16.7)',
     *'('' ZENTRAL  3TEIL UIX =  '',F16.7)',
     *'('' ZENTRAL  3TEIL UIX =  '',F16.7)',
     *'('' ZENTRAL  3TEIL UIX =  '',F16.7)',
     *'('' S-S-POTENTIAL 3N AK = '',F16.7)',
     *'('' S-S-POTENTIAL 3N KO = '',F16.7)',
     *'('' S-T-POTENTIAL IK 3N A '',F16.7)',
     *'('' S-T-POTENTIAL IJ 3N A '',F16.7)',
     *'('' S-T-POTENTIAL IK 3N K '',F16.7)',
     *'('' S-T-POTENTIAL IJ 3N K '',F16.7)',
     *'('' TENSOR-T RANG=0  3N A '',F16.7)',
     *'('' TENSOR-T RANG=0  3N K '',F16.7)',
     *'('' TENSOR-T RANG=1  3N A '',F16.7)',
     *'('' TENSOR-T RANG=1  3N K '',F16.7)',
     *'('' TENSOR-T RANG=2  3N A '',F16.7)',
     *'('' TENSOR-T RANG=2  3N K '',F16.7)',
     *'('' TENSOR-T RANG=3  3N K '',F16.7)',
     *'('' S-S-POTENTIAL 3N VPVS '',F16.7)',
     *'('' T-POTENTIAL IK 3N VP  '',F16.7)',
     *'('' NORM      3TEIL ILL=  '',F16.7)',
     *'('' SPIN-TENSOR I      =  '',F16.7)',
     *'('' TENSOR**2 RG1 I    =  '',F16.7)',
     *'('' TENSOR**2 RG2 I    =  '',F16.7)',
     *'('' TENSOR**3 RG0 I    =  '',F16.7)',
     *'('' TENSOR**3 RG(1)1 I =  '',F16.7)',
     *'('' TENSOR**3 RG(2)1 I =  '',F16.7)',
     *'('' TENSOR**3 RG(3)1 I =  '',F16.7)',
     *'('' TENSOR**3 RG(2)2 I =  '',F16.7)',
     *'('' TENSOR**3 RG(3)2 I =  '',F16.7)'/
C
      DATA UNSPLIT/
     *'('' S-S-POTENTIAL 3N =    '',F16.7)',
     *'('' S-T-POTENTIAL IK 3N = '',F16.7)',
     *'('' S-T-POTENTIAL IJ 3N = '',F16.7)',
     *'('' TENSOR-T RANG=0  3N = '',F16.7)',
     *'('' TENSOR-T RANG=1  3N = '',F16.7)',
     *'('' TENSOR-T RANG=2  3N = '',F16.7)',
     *'('' TENSOR-T RANG=3  3N = '',F16.7)'/
C
      OPEN(UNIT=5,FILE='INEN',STATUS='OLD')
C
      OPEN(UNIT=NOUT,FILE='OUTPUT')
C     FUER SMIN SIND DIESE OPEN STATEMENTS ZU BESEITIGEN
C
 1002 FORMAT(30I3)
 1005 FORMAT(10H ES WERDEN,I3,20H KANAELE BETRACHTET //)
 6071 FORMAT(//,20H GESAMTDREHIMPULS = ,I3,3H /2 ,14H  PARITAET = - //)
 1004 FORMAT(20H GESAMTDREHIMPULS = ,I3,3H /2 ,14H  PARITAET = + //)
 1006 FORMAT(' FEHLER IN DEN EINGABEDATEN, IM KANAL',I4,' IST BV',I4,
     1       ' FALSCH')
 1007 FORMAT(//15H DEFINITION DES,I3,15H TEN KANALS IST/
     1 ' CHANNEL SPIN =',I3,'/2 RADIALDREHIMPULS =',I3,' POLYNOMGRAD=',
     2 I3,/,' SPINS DER REAKTIONSPARTNER =',I1,3H /2,' UND ',I1,3H /2/
     3 32H MASSEN   DER REAKTIONSPARTNER =,I4,4H UND,I4,
     4 16H NUKLEONENMASSEN/
     5 32H LADUNGEN DER REAKTIONSPARTNER =,I4,4H UND,I4,
     6 18H ELEMENTARLADUNGEN  /
     7   39H ABFALLPARAMETER IN DER RELATIVFUNKTION,
     8   5(/1P10E12.4))
 1011 FORMAT(30H BENUTZTE RADIALFUNKTIONEN      /20I3)
 1018 FORMAT (2H0/,I3,4H ) =,4(F10.4,2H /,I3,2H )),
     1   30(/,9X,4(F10.4,2H /,I3,2H ))))
 1009 FORMAT(//4H DER,I3,21H TE PARAMETERSATZ DER,I4,
     1 17H TEN STRUKTUR = /,I4,10H ) LIEFERT)
1008  FORMAT(22H GESAMTE     ENERGIE =,F16.7/)
      IEINS=1
      INPUT=5
      NBAND9=9
      NB15=15
      MATOU=19
C
      FAKU(1)=1.
      DO 10, I=2, 13
       FAKU(I)=FAKU(I-1)*DBLE(I)
10    CONTINUE
C     FAKU(I)=DBLE(I!!)
      WRITE (NOUT,1111)
 1111 FORMAT(' STREU ENDMAT_I_2 (EFT Version) VOM 11.09.07')	
C
      D(1)=.0
      D(2)=.0
      DO 199 I=2,99
      HMHH=I
  199 D(I+1)=LOG(HMHH)+D(I)
      READ(INPUT,1002) NBAND1,IDUM,NBAND3,NZOP,IFAKD
     1   ,IGAK,NZZ,IAUW,IDRU,IPLO,IDUN,ICOPMA
C
      IF(IPLO.GE.0) OPEN(UNIT=9,FILE='NORMOUT',STATUS='UNKNOWN',
     1                  FORM='UNFORMATTED')
      IF(IPLO.GT.0) OPEN(UNIT=15,FILE='PLOTOUT',STATUS='UNKNOWN',
     1              FORM='UNFORMATTED')
C
      IZWEI=0
      IDREI_U=0
      IDREI_I=0
C NBAND1 = 10  :  EFT NN  NLO
C        =-11  :  EFT NNN NLO
C        = 22  :
C        = 13  :  EFT NLO NN+NNN
C        = 42  :
      IF(NBAND1.EQ.10)  THEN
          OPEN(UNIT=10,FILE='QUAOUT',STATUS='OLD',FORM='UNFORMATTED')
          IZWEI=1
          endif
      IF(NBAND1.EQ.(-11))  THEN
        OPEN(UNIT=11,FILE='DRQUAOUT',STATUS='OLD',FORM='UNFORMATTED')
          IDREI_U=1
          endif
      IF(NBAND1.EQ.22)  THEN
        OPEN(UNIT=22,FILE='DRQUAOUT_I_2',STATUS='OLD',
     1      FORM='UNFORMATTED')
          IDREI_I=1
          endif
      IF((NBAND1.GT.10).AND.(NBAND1.LT.21))  THEN
        OPEN(UNIT=10,FILE='QUAOUT',STATUS='OLD',FORM='UNFORMATTED')
          IZWEI=1
        OPEN(UNIT=11,FILE='DRQUAOUT',STATUS='OLD',FORM='UNFORMATTED')
          IDREI_U=1
C idrei_u ist NNN von EFT
          NBAND1=10
        write(nout,*)'nn+nnn'
          endif
      IF(NBAND1.EQ.42)  THEN
        OPEN(UNIT=10,FILE='QUAOUT',STATUS='OLD',FORM='UNFORMATTED')
          IZWEI=1
        OPEN(UNIT=11,FILE='DRQUAOUT',STATUS='OLD',FORM='UNFORMATTED')
          IDREI_U=1
        OPEN(UNIT=22,FILE='DRQUAOUT_I_2',STATUS='OLD',
     1      FORM='UNFORMATTED')
          IDREI_I=1
          NBAND1=10
          endif
      IF(IDUM.NE.2) IDUM=1
C     IDUM=2 WAEHLT FORMAT 20I4 FALLS MEHR ALS 999 KANAELE ODER BV
C
      IF(ICOPMA.GT.0)WRITE(NOUT,*) ' DM-MATRIZEN WERDEN AUF MATOUT
     *KOPIERT'
C     NBAND1 KOMMT VON QUAFORM
C     NBAND3 GEHT AN VERSTR (NUR BEI STREURECHNUNG)
C
C      FUER NZZ<0 WERDEN IABS(NZZ)EIGENVEKTOREN EINGELESEN
       NEIGIN=0
       IF(NZZ.LT.0) NEIGIN=1
       NZZ=IABS(NZZ)
C      IAUW NE 0, STEUERT EINLESEN IN ORTHO, WELCHER SPEZIELLE
C      EIGENVEKTOR ENTWICKELT WERDEN SOLL
C      IPLO= -1 NOKEHA UND PLOB WERDEN NICHT GERUFEN
C      IPLO .GE. 0 NOKEHA WIRD GERUFEN
C      IPLO .GT. 0 PLOB WIRD GERUFEN

C -- EFT NLO ohne NNN=9, mit =26 (OLD URBANA AK TNI, only OP3 is used)
      IF (NZOP.NE.9 .AND. NZOP.NE.26)  STOP 2
C
      IF(NZOP.EQ.23) THEN
          DO 137 K=1,7
137       VARFOR(16+K)=UNSPLIT(K)
      ENDIF
      READ(INPUT,1002) (MREG(K),K=1,NZOP)
      IF(IZWEI.EQ.1) THEN
      MREG(10)=0
c      MREG(32)=0
      END IF
C
      DO 110 K=1,NZOP
  110 POTFAK(K) =1.
C
c      H2M=197.31613**2/(6572.430)
c      H2M=197.31613**2/(2.0*1226.0)
c      H2M=197.31613**2/(2.0*1634.0)
c      H2M=(2.72099*.529172*137.0373)**2/(938.211+939.505)
      H2M=(2.72099*.529172*137.0373)**2/(2.0*(938.211+939.505))
c      H2M=197.31613**2/(938.211+939.505)
      E2R0=.51098*2.81785
C     E2R0=197.31613/137.0373
      IF(IFAKD.LE.0) GOTO 111
      READ(INPUT,1113) (POTFAK(K),K=3,NZOP)
      WRITE (NOUT,1113) (POTFAK(K) ,K=3,NZOP)
1113  FORMAT(  7E12.4)
111   MREG(1)=1
      NBAND1=ABS(NBAND1)
      NZBASV2=0
      NZBASV3_U=0
      NZBASV3_I=0
      REWIND 10
      REWIND 11
      REWIND 22
      DO 113 K=1,NZOP
113   LREG(K)=0
      IF(IZWEI.EQ.1) READ(10) NZF,(LREG(K),K=1,9),NZBASV2,
     1  (NZRHO(K),K=1,NZF)
      WRITE(NOUT,*) NZF,(LREG(K),K=1,NZOPER),NZBASV2,
     1  (NZRHO(K),K=1,NZF)
      IF(IDREI_U.EQ.1) READ(11) NZF,(LREG(K),K=10,26),NZBASV3_U,
     1  (NZRHO(K),K=1,NZF)
      WRITE(NOUT,*) NZF,(LREG(K),K=1,NZOPER),NZBASV3_U,
     1  (NZRHO(K),K=1,NZF)
      IF(IDREI_I.EQ.1) READ(22) NZF,(LREG(K),K=32,NZOPER),NZBASV3_I,
     1  (NZRHO(K),K=1,NZF)
      MKCU=1
      MKCO=NZOP
      IF(IZWEI+IDREI_U+IDREI_I.EQ.3) THEN
      NZBASV=MIN(NZBASV2,NZBASV3_U,NZBASV3_I)
      ELSE IF(IZWEI+IDREI_U.EQ.2) THEN 
      NZBASV=MIN(NZBASV2,NZBASV3_U)
      MKCO=26
      ELSE IF(IZWEI.EQ.1) THEN
      NZBASV=NZBASV2
      MKCO=9
      ELSE IF(IDREI_U.EQ.1) THEN
      NZBASV=NZBASV3_U
      MKCU=10
      MKCO=26
      ELSE IF(IDREI_I.EQ.1) THEN
      NZBASV=NZBASV3_I
      MKCU=32
      END IF
      IF(NZBASV.GT.NZBMAX)  GOTO 808
      DO 1 N=1,NZBASV
      READ(NBAND1) MM,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     1 (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),(PAQ(J,N),J=1,MM),KPB(N)
      JKK(N)=0
      NZPAQ(N)=MM
      IF (IGAK.EQ.0) GOTO 1
      WRITE(NOUT,196) N,(MMASSE(J,N),J=1,2),(MMLAD(J,N),J=1,2),
     1     (MMS(J,N),J=1,3),(MLWERT(J,N),J=1,5),KPB(N)
  196 FORMAT(/I6/2(I6,I3),I6,2I3,I6,4I3,I6)
    1 CONTINUE
      DO 197 K=1,KKMAX
      DO 197 N=1,NZBASV
197   KANUM(N,K)=0
C
      READ(INPUT,CHINT(IDUM)) JWS,NZKA,NENTP,KAUSD,NPARI,KEIND,
     *                        NZKAPO,NREL,IABLK
C      write(nout,*) JWS,NZKA,NENTP,KAUSD,NPARI,KEIND,
C     *                        NZKAPO,NREL,IABLK
      IF(NENTP.EQ.0) OPEN(UNIT=12,FILE='ENOUT',STATUS='UNKNOWN',
     *               FORM='UNFORMATTED')
      IF(NREL.EQ.1) WRITE(NOUT,*)' KEINE RELATIVISTIK MOEGLICH'
C     NREL=1: REL. KIN. ENERGIE AUF RELATIVBEWEGUNG
C     IABLK=ANZAHL DER BLOECKE IN DER NORMMATRIX FUER SCHWELLENSCHIEBEN
      DO 771 I77=1,NZKA
      EBIN(I77) = 0.
 771  SNORM(I77)= 1.
      DO 772 MH=1,NZKA
      DO 772 NH=1,MZPARM
 772  LUM(NH,MH) = 0
      IF(IPLO.GT.0.AND.NENTP.NE.0) READ(INPUT,1113)
     1  (SNORM(KL),KL=1,NZKA),SWW
C     IF(SWW.EQ.0.) SWW=0.1
C      NENTP=0,1,2,  3
C     MIT POLYNOMEN IST NUR NOCH DIE WAHL NENTP=0 UND 1 ZULAESSIG
C      NENTP=0,   STREURECHNUNG
C      NENTP=1,   BINDUNGSRECHNUNG FUER UNGEKOPPELTE FUNKTIONEN
C      MIT ENERGIEN DER PARAMETERSAETZE,ENTWICKLUNG DER EIGENVEKTOREN,
C      UEBERLAPP MIT NORMIERTEN FUNKTIONEN UND KANAELEN
C      NENTP=2,  BINDUNGSRECHNUNG FUER GEKOPPELTE FUNKTIONEN
C      ENERGIEN DER PARAMETERSAETZE WERDEN NICHT BERECHNET,SONST WIE NENTP=1
C      NENTP=3,  BINDUNGSRECHNUNG FUER GEKOPPELTE FUNKTIONEN
C      NORM UND HAMILTONIAN WERDEN NICHT MIT B UMNORMIERT, FUER SINGLE
C      RECHNUNGEN, SONST WIE NENTP=1
C      NZKAPO = ANZAHL DER POLYNOMKANAELE
      IF(NZKA.GT.NZKMAX)  GOTO 901
C
      IF(NPARI.EQ.1) GOTO 6070
      WRITE(NOUT,1004) JWS
      GO TO 6081
 6070 WRITE(NOUT,6071) JWS
6081  DO 112 K=2,NZOP
      IF(ABS(POTFAK(K)).NE.0.) GOTO 112
      MREG(K)=0
112   MREG(K)=MREG(K)*LREG(K)
      WRITE(NOUT,1010) (MREG(K),K=1,NZOP)
 1010 FORMAT(' OPERATORS ',/,(10I3))
      IF (KEIND.EQ.0) GOTO 198
      READ (INPUT,CHINT(IDUM)) KK
      IF (KK.GT.NZUMAX) STOP 3
      READ (INPUT,602) (UNK(J),J=1,KK)
  602 FORMAT(E20.12)
      IF(KEIND.LT.0) READ(INPUT,1113) (EBIN(J),J=1,NZKA)
C     DIESES EINLESEN DER BINDUNGSENERGIEN DIENT ZUM BERUECKSICHTIGEN
C     VON INTERNEN BEITRAEHEN BEI SEA-QUARKS
 198  CONTINUE
      KBVM=0
C
C     EINLESEN DER KANADEFINITIONEN
      IF (NENTP.EQ.1) GOTO 4
C
C     STREURECHNUNG UND BINDUNGRECHNUNG MIT KANALSPINKOPPLUNG
      WRITE(NOUT,1005) NZKA
      DO 7 N=1,NZKA
      DO 190 J=1,NZBASV
 190  NCOF(J,N) = 0
      READ (INPUT,1002) (JWERT(M,N),M=1,3),NKAENT(N),IKAPO(N)
C     NUMPOKA IST NUMMER DES POLYNOMKANALS,VERSCHIEDENE POLYNOME
C     MUESSEN DIREKT HINTEREINANDER STEHEN
C     NKAENT < 0, DISTORTIONSKANAELE
      READ (INPUT,CHINT(IDUM)) KK, (NUMK(J),J=1,KK)
      IF (KEIND.NE.0) READ (INPUT,CHINT(IDUM)) (MUMK(J),J=1,KK)
C      write(nout,*) 'sadf',KK, (NUMK(J),J=1,KK)
      DO 191 J=1,KK
      IF(NUMK(J).GT.NZBASV .OR. NUMK(J).EQ.0) THEN 
        WRITE(NOUT,*)' IM KANAL ',
     *  N,' IST DER INPUT FUER BV ',J,' FALSCH', NUMK(J)
        STOP 'FALSCHER BV'
        ENDIF
      L = NUMK(J)
      JKK(NUMK(J))= JKK(NUMK(J))+ 1
      IF(JKK(NUMK(J)).GT.KKMAX) THEN
	WRITE(NOUT,*) ' BASISVEKTOR ',NUMK(J),' TAUCHT IN MEHR ALS ',
     *  KKMAX,' KANAELEN AUF, KANALNR ',N
	STOP 191
	ENDIF
      KANUM(NUMK(J),JKK(NUMK(J)))= N
      KBVM=MAX(KBVM,NUMK(J))
      IF (KEIND.EQ.0) GOTO 191
      MUM = MUMK(J)
      UMK(L) = UNK(MUM)
 191  NCOF(L,N) = 1
      I=0
      DO 8 JH=1,NZBASV
      J=NZBASV+1-JH
      N2= 2
      UMKOF(N,J) = 0.
      IF(NCOF(J,N).EQ.0) GOTO 8
      UMKOF(N,J) = 1.
      IF(NKAENT(N).LT.0.AND.KEIND.LE.-2) GOTO 601
C      write(nout,*) 'before UMKOP: UMKOF(',N,',',J,')=',UMKOF(N,J)
      CALL UMKOP(N,J,UMKOF(N,J))
C      write(nout,*) 'after  UMKOP: UMKOF(',N,',',J,')=',UMKOF(N,J)
 601  IF(KEIND.EQ.0) GOTO 600
      UMKOF(N,J) = UMK(J) * UMKOF(N,J)
600   IF(I.GT.0) GOTO 11
      I=1
      N2= 1
      MASSE(1,N)=MMASSE(1,J)
      MASSE(2,N)=MMASSE(2,J)
      REDM(N)=1./(1./DBLE(MASSE(1,N))+1./ DBLE(MASSE(2,N)))
      MLAD(1,N)=MMLAD(1,J)
      MLAD(2,N)=MMLAD(2,J)
      E2K(N)=.5* DBLE(MLAD(1,N)*MLAD(2,N))*E2R0*REDM(N)/H2M
      DO 12 M=1,3
   12 MS(M,N)=MMS(M,J)
      DO 13 M=1,5
   13 LWERT(M,N)=MLWERT(M,J)
      MM=NZPAQ(J)
      NZP(N)=MM
       DO 14 M=1,MM
   14 PAR(M,N)=PAQ(M,J)
      KPK(N)=KPB(J)
      GOTO 8
   11 IF(KEIND.LT.0) GOTO 15
      IF(IABS(MASSE(1,N)-MMASSE(1,J))+IABS(MASSE(2,N)-MMASSE(2,J))+
     *   IABS(MLAD(1,N)-MMLAD(1,J))+IABS(MLAD(2,N)-MMLAD(2,J)).NE.0)
     *   then
        write(nout,*) 'Massn problem.'
        GOTO 16
      endif
   15 IF(IABS(NZP(N)-NZPAQ(J)).NE.0) then
        write(nout,*) 'IABS(NZP(N)-NZPAQ(J)).NE.0'
        GOTO 16
      endif
C      CHECK FUER BASIVECTOREN EINES KANALS
      IF(NKAENT(N).LT.0.AND.KEIND.LE.-2) GOTO 18
      IF(LWERT(4,N).NE.MLWERT(4,J)) then
       write(nout,*)  'LWERT(4,N).NE.MLWERT(4,J)'
       GOTO 16
      endif
C      CHECK AUF GLEICHE RADIALDREHIMPULSE
      IF(KPK(N).NE.KPB(J)) then
        write(nout,*) 'KPK(N).NE.KPB(J)'
        GOTO 16
      endif
   18 A=0.
      DO 20 M=1,MM
   20 A=A+ ABS(PAR(M,N)-PAQ(M,J))
      IF(A.GT.1.E-6) then
        write(nout,*) 'A.GT.1.E-6 (combining channels
     * with different relative width sets?)'
        GOTO 16
      endif
    8 CONTINUE
      READ(INPUT,1002) (LUM(M,N),M=1,MM)
      J1=0
      DO 400  M=1,MM
      IF(LUM(M,N).LE.0) GOTO 400
      J1=J1+1
      LUM(M,N)=J1
  400 CONTINUE
      LUM(MM+1,N)=J1
      DO 17 M=1,MM
      NAR(M,N)=0
      M1=LUM(M,N)
      IF(M1.LE.0) GOTO 17
      PAR(M1,N) = PAR(M,N)*REDM(N)
      NAR(M1,N)=KPK(N)
   17 CONTINUE
      MM = LUM(MM+1,N)
      KP2=KPK(N)*2
      IF(MREG(3).GT.0) GOTO 183
      MLAD(1,N) = 0
      MLAD(2,N) = 0
      E2K(N) = .0
183   WRITE(NOUT,1007)  N,JWERT(3,N),LWERT(4,N),KP2,JWERT(1,N),
     1   JWERT(2,N),MASSE(1,N),MASSE(2,N),MLAD(1,N),MLAD(2,N),
     2     (PAR(M,N),M=1,MM)
C       KANALDEFINITION
      J = 0
      DO 161 M=1,NZBASV
      IF (ABS(UMKOF(N,M)).LT.1.D-14) GOTO 161
      J = J + 1
      NUMK(J) = M
      UMK(J) = UMKOF(N,M)
 161  CONTINUE
      WRITE (NOUT,1018) N,  (UMK(M),NUMK(M),M=1,J)
      MMM = NZP(N)
      WRITE(NOUT,1011)    (LUM(M,N),M=1,MMM)
    7 NZP(N) = MM
      NZKB=0
      DO 21 K=1,NZKA
      IF(NKAENT(K).LT.0) GOTO 22
   21 NZKB=NZKB+1
22    CALL DEFPOK(NZP,NZKA,1,NZKB,NZKPB)
C       DEFINITION DER POLYNOMKANAELE
      IF(NZKA.LE.NZKB) GOTO 30
      DO 24 K=NZKB+1,NZKA
   24 NKAENT(K)=-1
      GO TO 30
C     ENDE KANALDEFINITION STREURECHNUNG UND GEKOPPELTE BINDUNGSRECHNUNG
C
C
   4   CONTINUE
C     KANALDEFINTIONEN BINDUNGSRECHNUNG
C
      NZKB=NZKA
      DO 28 N=1,NZKA
      DO 192 J=1,NZBASV
 192  NCOF(J,N) = 0
      READ (INPUT,CHINT(IDUM)) KK, (NUMK(J),J=1,KK)
      IF (KEIND.NE.0) READ (INPUT,CHINT(IDUM)) (MUMK(J),J=1,KK)
      DO 193 J=1,KK
      IF(NUMK(J).GT.NZBASV .OR. NUMK(J).EQ.0) THEN 
        WRITE(NOUT,*)' IM KANAL ',
     *  N,' IST DER INPUT FUER BV ',J,' FALSCH', NUMK(J)
        STOP 'FALSCHER BV'
        ENDIF
      L = NUMK(J)
      JKK(NUMK(J))= JKK(NUMK(J))+ 1
      IF(JKK(NUMK(J)).GT.KKMAX) THEN
      WRITE(NOUT,*) ' BASISVEKTOR ',NUMK(J),' TAUCHT IN MEHR ALS ',
     *  KKMAX,' KANAELEN AUF, KANALNR ',N
      STOP 193
      ENDIF
      KANUM(NUMK(J),JKK(NUMK(J)))= N
      KBVM=MAX(KBVM,NUMK(J))
      IF (KEIND.EQ.0) GOTO 193
      MUM = MUMK(J)
      UMK(L) = UNK(MUM)
 193  NCOF(L,N) = 1
      DO 27   M = 1,NZBASV
      UMKOF(N,M) = NCOF(M,N)
      IF (KEIND*NCOF(M,N).EQ.0) GOTO 27
      UMKOF(N,M) = UMK(M) * UMKOF(N,M)
   27 CONTINUE
      J = 0
      DO 25 M=1,NZBASV
      IF (ABS(UMKOF(N,M)).LT.1.D-12) GOTO 25
      J = J + 1
      NUMK(J) = M
      UMK(J) = UMKOF(N,M)
  25  CONTINUE
      WRITE (NOUT,1018) N, (UMK(M),NUMK(M),M=1,J)
      N2 = 3
      I=0
      DO 84 J=1,NZBASV
      IF(NCOF(J,N).EQ.0) GOTO 84
       IF(I.GT.0) GOTO 87
      I=1
      MASSE(1,N)=MMASSE(1,J)
      MASSE(2,N)=MMASSE(2,J)
      REDM(N)=1./(1./DBLE(MASSE(1,N))+1./ DBLE(MASSE(2,N)))
      MS(3,N)=MMS(3,J)
      LWERT(5,N)=MLWERT(5,J)
      NZP(N)=NZPAQ(J)
      MM=NZP(N)
      DO 702   M = 1,MM
      NAR(M,N)=KPB(J)
  702 PAR(M,N) = PAQ(M,J)
      LWERT(4,N)=MLWERT(4,J)
      READ(INPUT,1002) (LUM(M,N),M=1,MM)
      WRITE(NOUT,1011)    (LUM(M,N),M=1,MM)
      J1=0
      DO 410  M=1,MM
      IF(LUM(M,N).LE.0) GOTO 410
      J1=J1+1
      LUM(M,N)=J1
  410 CONTINUE
      LUM(MM+1,N)=J1
      GO TO 84
   87 IF(NZP(N).NE.NZPAQ(J)) then
        write(nout,*) 'NZP(N).NE.NZPAQ(J)'
        GOTO 16
      endif
      DO 713   M = 1,MM
      IF(ABS(PAR(M,N)-PAQ(M,J)).GT..00001) then
        write(nout,*) 'ABS(PAR(M,N)-PAQ(M,J)).GT..00001'
        GOTO 16
      endif
  713 CONTINUE
      IF(KEIND.LT.0) GOTO 84
      IF(MS(3,N).NE.MMS(3,J)) then
        write(nout,*) 'MS(3,N).NE.MMS(3,J)'
        GOTO 16
      endif
      IF(LWERT(5,N).NE.MLWERT(5,J)) then
        write(nout,*) 'LWERT(5,N).NE.MLWERT(5,J)'
        GOTO 16
      endif
      IF(IABS(MASSE(1,N)-MMASSE(1,J))+IABS(MASSE(2,N)-MMASSE(2,J))
     &.NE.0) then
        write(nout,*) 'Mass(ive) problem.'
        GOTO 16
      endif
      IF(LWERT(4,N).NE.MLWERT(4,J)) then
        write(nout,*) 'LWERT(4,N).NE.MLWERT(4,J)'
        GOTO 16
      endif
   84 CONTINUE
      NZP(N)=LUM(MM+1,N)
  28  CONTINUE
      CALL DEFPOK(NZP,NZKA,0,NZKB,NZKPB)
C     ENDE KANALDEFINITION BINDUNGSRECHNUNG
C
C
30    CONTINUE
C     FUER SMIN FOLGEND STATEMENTS BESEITIGEN
      CLOSE(UNIT=NOUT,STATUS='KEEP')
      OPEN(UNIT=NOUT,FILE='OUTPUT',ACCESS='APPEND')
C     STREU UND BINDUNGSRECHNUNG
C
      NZBV=0
      DO 32 IQ=1,NZF
      NZBV=NZBV + NZRHO(IQ)
      IF(KBVM.LE.NZBV) GOTO 33
32    CONTINUE
33    MAZF=MIN(IQ,NZF)
C
      NZQ(1)=0
      K2 = 0
      NZPWM=0
      DO 31 K=1,NZKA
      NZQ(K+1)=NZQ(K)+NZP(K)
      NZPWM=MAX0(NZPWM,NZP(K))
   31 CONTINUE
      MM = NZQ(NZKA+1)
      IF(MM.GT.NDIMD) GOTO 905
C
      DO 29   M = 1,MM
      DO 29   L = 1,NZOPER+2
   29 OPWERT(L,M) = .0
C
      MMM=NZQ(NZKA+1)
      DO 237 JKL=1,2
      DO 237 IKL=1,2
      DO 237 N=1,MMM
      DO 237 M=1,MMM
237    DM(M,N,IKL,JKL)= 0.
C
      ILAUF=2
      IF (NENTP.EQ.0) ILAUF=1
C
      DO 950, MEMPT=1, ILAUF
C     1. DURCHLAUF: BERECHNUNG VON NORM- UND HAMILTONMATRIX,
C                   DIAGONALISATION UND BESTIMMUNG DER EIGENVEKTOREN
C     2. DURCHLAUF: NUR FUER BINDUNGSRECHNUNG; BESTIMMUNG DER EINELNEN
C                   BEITRAEGE DER OPERATOREN FUER DIE ERSTEN NZZMAX E.V.
C
C
      IIKUNT=2
      IF(NENTP.EQ.2) IIKUNT=1
      IF (MEMPT.EQ.1) IIKUNT=NZOP
C
      DO 850, IIK=IIKUNT, NZOP
C
      ISTART=2
      IF (MEMPT.EQ.1.OR.(IIK.EQ.IIKUNT .AND. IIK.NE.NZOP)) ISTART=1

C
      IF(IZWEI.EQ.1) THEN
C
         REWIND 10
         READ (10)
         DO 36, IH=1, NZBASV2
36       READ (10)
      ENDIF
C
      IF(IDREI_U.EQ.1) THEN
C
         REWIND 11
         READ (11)
         DO 361 IH=1, NZBASV3_U
361      READ (11)
      ENDIF
C
      IF(IDREI_I.EQ.1) THEN
C
         REWIND 22
         READ (22)
         DO 363 IH=1, NZBASV3_I
363      READ (22)
      ENDIF
C
       IF(MEMPT.EQ.1)GOTO 350
      DO 37 N=1,MMM
      DO 37 M=1,MMM
37    DM(M,N,2,2)= 0.
       IF(IIK.GT.1)GOTO 350
      DO 337 N=1,MMM
      DO 337 M=1,MMM
337    DM(M,N,2,1)= 0.
350   CONTINUE
C
C      MKCU=1
C      MKCO=NZOP
C      IF(IZWEI.EQ.0)MKCU=15
C      IF(IDREI_U.EQ.0)MKCO=14
      IF (MEMPT.GT.1) THEN
      MKCU=IIK
      MKCO=IIK
      ENDIF
C
470   CONTINUE
C
C
      DO 140 MFL=1,MAZF
      DO 139 MFR=1,MFL
C     LOOP ZERLEGUNGEN RECHTS
C
      MLES=NZRHO(MFL)*NZRHO(MFR)
      IF (MFR.EQ.MFL) MLES=(NZRHO(MFL)*(NZRHO(MFL)+1))/2
      IF(MLES.LE.0) GOTO 139
C
C
      NBAND1=10
      DO 41, MKC=1,NZOP
      KPUTZ=2
      IF(MKC.EQ.1 .OR. MKC.EQ.10 .OR. MKC.EQ.32) KPUTZ=1
C     LOOP OPERATOREN
      IF(MKC.GT.9) NBAND1=11
      IF(MKC.GT.31) NBAND1=22
C
      IF(LREG(MKC).LE.0) GOTO 41
      IF (MKC.GE.MKCU.AND.MKC.LE.MKCO) GOTO 430
      DO 390, NLES=1, MLES
       READ (NBAND1)
390   CONTINUE
      GOTO 41
C
430   CONTINUE
      DO 40 NLES=1,MLES
        READ(NBAND1)   NUML,NUMR,IK1,JK1,(((DN(K,L,I),K=1,IK1),L=1,JK1),
     1 I=1,2)
      IF(IGAK.LT.2.OR.MEMPT.GT.1) GOTO 221
      WRITE(NOUT,219) MKC,NUML,NUMR,IK1,JK1
219   FORMAT(' MKC,NUML,NUMR,IK1,JK1 ',5I3)
      IF(IGAK.LT.3) GOTO 221
      WRITE(NOUT,220)(((DN(K,L,I),K=1,IK1),L=1,JK1),I=1,2)
220   FORMAT(1X,10E12.4)
221   CONTINUE
C
C
      IF(MREG(MKC).EQ.0) GOTO 40
      IF(IK1*JK1.EQ.1 .AND.DN(1,1,2).EQ.0. .AND.DN(1,1,1).EQ. 0.)GOTO 40
      LBL=MLWERT(5,NUML)
      LBR=MLWERT(5,NUMR)
      ML=MMS(3,NUML)
      MR=MMS(3,NUMR)
      KAK=0
C OPERATOR                1  2  3  4  5  6  7  8  9  10
      IF(NZOP.LE.26) GOTO(96,96,96,96,96,96,92,93,93,96,
     *                    96,96,96,93,93,93,93,96,96,92,
     *                    92,93,93,94,96,93),MKC
      IF(NZOP.EQ.29) GOTO(96,96,96,96,96,96,96,92,92,93,
     *                    93,96,93,96,96,96,96,96,93,93,
     *                    93,93,96,96,92,92,93,93,94),MKC
      IF(NZOP.EQ.31) GOTO(96,96,96,96,96,96,96,92,92,93,
     *                    93,96,93,96,96,96,96,96,93,93,
     *                    93,93,96,96,92,92,93,93,94,96,
     *                    93),MKC
      IF(NZOP.EQ.42) GOTO(96,96,96,96,96,96,96,92,92,93,
     *                    93,96,93,96,96,96,96,96,93,93,
     *                    93,93,96,96,92,92,93,93,94,96,
     *                    93,96,93,92,93,96,92,92,92,93,
     *                    93,94),MKC
   92 KAK=2
      GO TO 96
   93 KAK=4
      GO TO 96
   94 KAK=6
   96 F=(-1)**((2*LBR+2*MR-ML+JWS)/2)* POTFAK(MKC)
      FK=F6J(2*LBR,MR,JWS,ML,2*LBL,KAK)
      F=F*FK
      IF(F.EQ.0.) GOTO 40
      DO 42 JKAL=1,JKK(NUML)
      DO 142 JKAR=1,JKK(NUMR)
      KWIED=0
      IF(KANUM(NUML,JKAL).EQ.KANUM(NUMR,JKAL) .AND.
     *          KANUM(NUML,JKAR).EQ.KANUM(NUMR,JKAR)) KWIED=1 
      KANL= KANUM(NUML,JKAL)
      KANR= KANUM(NUMR,JKAR)
99    FAK1 = UMKOF(KANL,NUML)*UMKOF(KANR,NUMR)
      FAK2 = UMKOF(KANL,NUMR)*UMKOF(KANR,NUML)
       IF (ABS(FAK1)+ABS(FAK2).LT.1.D-16) GOTO 142
      IF(NUML.EQ.NUMR) THEN
      FAK2=0.
      KWIED=1
      ENDIF
      IF(KANL.EQ.KANR) KWIED=1
      F1=FAK1*F
      F2=FAK2*F
      DO 46 K=1,IK1
      DO 146 L=1,JK1
      K1=LUM(K,KANL)
      L1=LUM(L,KANR)
      K2=LUM(K,KANR)
      L2=LUM(L,KANL)
      KK=NZQ(KANL)+K1
      LL=NZQ(KANR)+L1
      LK=NZQ(KANR)+K2
      KL=NZQ(KANL)+L2
C
C
      IF(K1*L1.LE.0) GOTO 420
C   DN(.,.,1) ENTHAELT NUR TERME MIT AUSTAUSCH ODER WW UEBER FRAGMENTGRENZEN
C    DN(.,.,2) ENTHAELT ALLE TERME
      DM (KK,LL,1,KPUTZ) = DM (KK,LL,1,KPUTZ) + DN(K,L,1) * F1
      DM(KK,LL,2,KPUTZ) = DM(KK,LL,2,KPUTZ) + DN(K,L,2) * F1
 420   IF(K2*L2.LE.0) GOTO 45
      DM (KL,LK,1,KPUTZ) = DM (KL,LK,1,KPUTZ) + DN(K,L,1) * F2
      DM(KL,LK,2,KPUTZ) = DM(KL,LK,2,KPUTZ) + DN(K,L,2) * F2
45    IF(MEMPT.GT.1) GOTO 50
      IF(IABS(KANL-KANR)+IABS(K-L).NE.0) GOTO 50
      IF(K1.LE.0) GOTO 50
      OPWERT(MKC,KK )=OPWERT(MKC,KK ) + (F1+F2)*DN(K,K,2)
      IF(MKC.NE.1 .AND. MKC.NE.10 .AND. MKC.NE.32) GOTO 49
      OPWERT(NZOPER+1,KK) =
     *   OPWERT(NZOPER+1,KK) + (F1+F2)*(DN(K,K,2)-DN(K,K,1))
      GO TO 50
   49 OPWERT(NZOPER+2,KK) =
     *   OPWERT(NZOPER+2,KK) + (F1+F2)*(DN(K,K,2)-DN(K,K,1))
c      WRITE(NOUT,166) (OPWERT(NZOPER+2,KK),KK=KANF,KEND)
   50 CONTINUE
146   CONTINUE
C     LOOP PARAMETER RECHTS
   46 CONTINUE
C     LOOP PARAMETER LINKS
      IF(KWIED.EQ.1) GOTO 142
      KWIED=1
      JUM=KANR
      KANR=KANL
      KANL=JUM
      GOTO 99
C     RUECKSPRUNG UM SYMMETRISCHE MATRIX GANZ AUFZUBAUEN
142   CONTINUE
C     LOOP KANAELE RECHTS
   42 CONTINUE
C     LOOP KANAELE LINKS
   40 CONTINUE
C     LOOP MATRIZEN
C
C     ENDE LOOP OPERATOREN
   41 CONTINUE
C
C     ENDE LOOP ZERLEGUNGEN RECHTS
139   CONTINUE
C
C     ENDE LOOP ZERLEGUNGEN LINKS
  140 CONTINUE
C
      IF( MEMPT.GT.1) GOTO 141
C     WIRD NUR EINMAL DURCHLAUFEN 
      KONTRO=0
      DO 1400 K=1,NZKAPO
      DO 1400 M=1, IZP(K)
      KK = IZQ(K) + M
C     CHECK NORM GT 0
C-JK--vorher abbruch bei GT.1.D-10                                 <==
      IF (OPWERT(MKCU,KK).GT.1.D-18) GOTO 1400
      WRITE (NOUT,1401) K, M,KK,OPWERT(NZOPER+1,KK),OPWERT(MKCU,KK)
 1401 FORMAT (14H EINGABEFEHLER ,3I5, 2E12.4)
      KONTRO=1
 1400 CONTINUE
      IF (KONTRO.EQ.1) STOP 50
C
141   IF(KAUSD.LT.1) GOTO 51
      IF(ILAUF.EQ.2.AND.MREG(IIK).EQ.0) GOTO 51
      WRITE(NOUT,151) IEINS,IIK
151   FORMAT(I5,' -TE MATRIX EN,H IN ENPON,OPERATOR',I5)
      CALL SCHEMA(DM(1,1,2,IEINS),MMM,MMM,NDIMD,10)
      WRITE(NOUT,151) IEINS+1,IIK
      CALL SCHEMA(DM(1,1,2,IEINS+1),MMM,MMM,NDIMD,10)
C     IF(ILAUF.EQ.1.OR.MREG(IIK).NE.0)
C    *       CALL SCHEMA(DM(1,1,2,KPUTZ),MMM,MMM,NDIMD,10)
51    CONTINUE
C
      IF(ICOPMA.GT.0 .AND. MEMPT.EQ.1 ) THEN
      OPEN(UNIT=19,FILE='MATOUT',STATUS='UNKNOWN',FORM='UNFORMATTED')
      WRITE(MATOU) MMM,(((DM(N,M,2,JK1),N=1,MMM),M=1,MMM),JK1=1,2)
      ENDIF
C
      IF (ISTART.GT.1.AND.MEMPT.EQ.1) GOTO 500
      CALL UMNORM (NENTP,NBAND9,MEMPT,ISTART,IPLO)
C
      IF(KAUSD.LT.3) GOTO 500
      IF(ILAUF.EQ.2.AND.MREG(IIK).EQ.0) GOTO 500
      WRITE(NOUT,1015) ISTART, MEMPT,IIK
1015  FORMAT(/,I4,'-TE MATRIX IN ENDMAT NACH UMNORM IM',I2,
     *       '-TEN UMLAUF,OPERATOR',I5)
      CALL SCHEMA(DM(1,1,2,ISTART),MMM,MMM,NDIMD,10)
      IF(ILAUF.EQ.1.OR.MREG(IIK).NE.0)
     *        CALL SCHEMA(DM(1,1,2,ISTART),MMM,MMM,NDIMD,10)
C
C     ENDE LOOP KPUTZ
500   CONTINUE
C
C
      IF (MEMPT.EQ.1) GOTO 750
C     DER FOLGENDE TEIL DIENT DER ENTWICKLUNG DER ENERGIEN DER EINZELNEN
C     OPERATOREN FUER DIE BASISVEKTOREN (NUR BEI BINDUNGSLAUF)
C
      IF(NEIGIN.EQ.0) GOTO 1310
C     HIER WERDEN DIE EIGENVEKTOREN EINGELESEN
      DO 1308 N=1,NZZ
      DO 1300 L=1,MMM 
1300  READ(INPUT,602) QQ(L,N)
1308  CONTINUE
C     EINLESEN BEENDET
1309  FORMAT(' VEKTOR EINGELESEN')
      WRITE(NOUT,1309)
        IF(IPLO.GT.0) CALL PLOB(EOV,IPLO,NB15,NENTP)
      NEIGIN=0
1310  CONTINUE
C
      DO 610 K=1,NZZ
      DO 610 L=1,NZZ
      OBWERT(1,K,L)=.0
      OBWERT(IIK,K,L)=.0
      DO 590, M=1,MMM
      DO 590, N=1,MMM
      OBWERT(1,K,L)=OBWERT(1,K,L)+QQ(M,K)*QQ(N,L)*DM(M,N,2,1)
      OBWERT(IIK,K,L)=OBWERT(IIK,K,L)+QQ(M,K)*QQ(N,L)*DM(M,N,2,2)
590   CONTINUE
610   CONTINUE
C     ALLE ENERGIEN GERECHNET
C     AUSDRUCK DER KOPPLUNGSMATRIXELEMENTE
      IF(KAUSD.LT.0) GOTO 630
      IF(MREG(IIK).EQ.0) GOTO 630
      WRITE(NOUT,1019) IIK
      DO 620 K=1,NZZ
620   WRITE(NOUT,1020) (OBWERT(IIK,K,L),L=1,NZZ)
      IF(IIK.NE.2) GOTO 630
      WRITE(NOUT,*) ' NORMMATRIX'
      DO 621 K=1,NZZ
621   WRITE(NOUT,1020) (OBWERT(1,K,L),L=1,NZZ)
1019  FORMAT(' KOPPLUNGSMATRIX FUER OPERATOR',I5)
1020  FORMAT(1X,10G12.5)
630   CONTINUE
      IF (MEMPT.GT.1) GOTO 850
C
C
750   CONTINUE
C     WIRD NUR EINMAL DURCHLAUFEN (FUER MEMPT=1)
       IF(IDRU.LT.1) GOTO 1168
      DO 1100 K=1,NZKAPO
       KANF=IZQ(K)+1
       KEND=IZQ(K)+NZP(K)
       WRITE(NOUT,165) (OPWERT(NZOPER+1,KK),KK=KANF,KEND)
165   FORMAT(' OPW(NZO+1) ',10E12.5)
       WRITE(NOUT,166) (OPWERT(NZOPER+2,KK),KK=KANF,KEND)
166   FORMAT(' OPW(NZO+2) ',10E12.5)
 1100 CONTINUE
C
1168  IF (NENTP.EQ.1) GOTO 800
C     STREURECHNUNG ODER BINDUNGSRECHNUNG MIT KOPPLUNG, NENTP=2,3
      CALL CHEPOK(IDRU,MREG,NZOP)
C     SCHIEBEN DER SCHWELLEN
      IF(IABLK.EQ.0) GOTO 1203
      READ(INPUT,1002) (NKANB(IH),IH=1,IABLK)
      READ(INPUT,1113) (ES(IH),IH=1,IABLK)
      N1=1
      DO 1202 IH=1,IABLK
      DO 1201 NH=N1,NKANB(IH)
1201  EBIN(NH)=EBIN(NH)+ES(IH)
1202  N1=NKANB(IH)+1
1055  FORMAT(' GESCHOBENE BINDUNGSENERGIEN ',/,(12F10.4))
       WRITE(NOUT,1055)(EBIN(K),K=1,NZKAPO)
1203  CONTINUE
C     SCHIEBUNG GETAN
C     SCHREIBEN AUF TAPE ZUR WEITERGABE
      REWIND NBAND3
      WRITE (NBAND3) NZKAPO,JWS,NPARI,NZKPB,NREL
c      write (nout,*) '1#',NZKAPO,JWS,NPARI,NZKPB,NREL
      DO 1102 M=1,NZKAPO
      MH=KAPO(M)
      WRITE (NBAND3) LWERT(4,MH),REDM(MH)/H2M,E2K(MH),
     *      JWERT(3,MH),MASSE(1,MH),MASSE(2,MH),MLAD(1,MH),MLAD(2,MH),
     *      EBIN(M),WNORM(M),RUHM(1,MH),RUHM(2,MH),B
c      write (nout,*) '2#',LWERT(4,MH),REDM(MH)/H2M,E2K(MH),
c     *      JWERT(3,MH),MASSE(1,MH),MASSE(2,MH),MLAD(1,MH),MLAD(2,MH),
c     *      EBIN(M),WNORM(M),RUHM(1,MH),RUHM(2,MH),B
1102  CONTINUE
      IF(KAUSD.LT.4) GOTO 840
      WRITE(NOUT,1017)
1017  FORMAT(' VOLLE H-MATRIX NACH CHEPOK')
      CALL SCHEMA(DM(1,1,2,2),MMM,MMM,NDIMD,10)
      GOTO 840
C
800   CONTINUE
C     BINDUNGS RECHNUNG
      IF(KAUSD.LT.0) GOTO 840
C     KEIN AUSDRUCK DER ENERGIEN FUER KAUSD .LT. 0
      I=0
      LU=2
      IF(IZWEI.EQ.0 .AND. IDREI_U.EQ.1) LU=11
      IF(IZWEI.EQ.0 .AND. IDREI_U.EQ.0) LU=33
      
      DO 70 K=1,NZKA
      MMP=NZP(K)
      DO 71 M=1,MMP
      KK = NZQ(K) + M
      A1=.0
      I=I+1
      WRITE(NOUT,1009) M,K,I
      DO 72 L=LU,NZOP
      IF(IZWEI.EQ.1) OPWERT(L,KK )=OPWERT(L,KK )/OPWERT(1,KK )
      IF(IZWEI.EQ.0 .AND. IDREI_U.EQ.1) OPWERT(L,KK )=
     *                                  OPWERT(L,KK )/OPWERT(10,KK )
      IF(IZWEI.EQ.0 .AND. IDREI_U.EQ.0) OPWERT(L,KK )=
     *                                  OPWERT(L,KK )/OPWERT(32,KK )
      IF(MREG(L).NE.0) WRITE(NOUT,VARFOR(L)) OPWERT(L,KK)
72    A1=A1+OPWERT(L,KK )
      WRITE (NOUT,1008) A1
71    CONTINUE
   70 CONTINUE
C
840   CALL UMNORM(NENTP,NBAND9,MEMPT,2,IPLO)
      IF (KAUSD.LT.2) GOTO 845
      WRITE(NOUT,*) 'VOR ORTHO H'
      CALL SCHEMA(DM(1,1,2,2),MMM,MMM,NDIMD,MIN(MMM,10))
      WRITE(NOUT,*) 'VOR ORTHO EN'
      CALL SCHEMA(DM(1,1,2,1),MMM,MMM,NDIMD,MIN(MMM,10))
845   CALL ORTHO(NZQ(NZKA+1),EOV)
C
C     ENDE LOOP ITT
850   CONTINUE
C
      IF (MEMPT.EQ.1) GOTO 950
C     NUR FUER BINDUNGSRECHNUNG (MEMPT=2)
      DO 242 K=1,NZZ
C     LOOP AUSGEDRUCKTE BASISVEKTOREN
C
      WRITE(NOUT,1014) K
 1014 FORMAT (6H0 DER ,I3,24H TE EIGENVEKTOR LIEFERT //)
      X=0.
      DO 852, L=LU, NZOP
       OPW(L)=OBWERT(L,K,K)/OBWERT(1,K,K)
      IF(MREG(L).NE.0) WRITE(NOUT,VARFOR(L)) OPW(L)
852   X=X+OPW(L)
      WRITE (NOUT,1008) X
C
      DO 300 M=1,MMM
      OPWERT(2,M) = 0.
      DO 299 L=1,MMM
299   OPWERT(2,M) = OPWERT(2,M) + QQ(L,K) * DM(M,L,2,1)
      OPWERT(2,M)=OPWERT(2,M)/SQRT(OBWERT(1,K,K)*DM(M,M,2,1))
 300  OPWERT(1,M) = QQ(M,K) * SQRT(DM(M,M,2,1))
      WRITE(NOUT,302) K
      DO 76 MK=1,MMM
76    NUMK(MK)=10000.*OPWERT(1,MK)
      DO 75  L=1,NZKA
      KK = NZQ(L)+1
      KL = NZQ(L+1)
75    WRITE (NOUT,105) L,(NUMK(M),M=KK,KL)
  302 FORMAT(16H ENTWICKLUNG DES,I3,' TEN ',
     1'EIGENVEKTORS,AUSGEDRUECKT DURCH NORMIERTE BASISVEKTOREN'/)
      WRITE (NOUT,320)
320   FORMAT('0UEBERLAPP DES EIGENVEKTORS MIT NORM. BASISVEKTOREN',/)
      DO 78 MK=1,MMM
78    NUMK(MK)=10000.*OPWERT(2,MK)
      DO 77 L=1,NZKA
      KK = NZQ(L)+1
      KL = NZQ(L+1)
77    WRITE (NOUT,105) L,(NUMK(M),M=KK,KL)
      WRITE(NOUT,305)
  305 FORMAT(23H0UEBERLAPP MIT KANAELEN/ )
      DO 304 L=1,NZKA
      KK= NZQ(L)+1
      KL = NZQ(L+1)
      A1= .0
      A2= .0
      DO 306 M=KK,KL
      DO 307 N=KK,KL
  307 A1= A1+ DM(M,N,2,1)*QQ(M,K)*QQ(N,K)
      DO 306 N=1,MMM
  306 A2 =A2+ DM(M,N,2,1)*QQ(M,K)*QQ(N,K)
      IF(A1.GT.1.D-10) GOTO 1105
      OPWERT(2,L) = .0
      GOTO 304
 1105 OPWERT(2,L) = A2 / SQRT(A1)
C      A1 IST NORMIERUNG DER KANALFUNKTIONEN BEZUEGLICH EN
  304 CONTINUE
      DO 79 L=1,NZKA
79    NUMK(L) = 10000. * OPWERT(2,L)
      WRITE (NOUT,106) (NUMK(L),L=1,NZKA)
105   FORMAT (I4,') ',1X,30I8)
106   FORMAT (1X,10I8)
  242 CONTINUE
C
C     ENDE LOOP ILAUF
950   CONTINUE
C     FUER SMIN MUESSEN DIE FOLGENDEN CLOSE STATEMENTS AKTIVIERT WERDEN
CC     CLOSE(UNIT=5,STATUS='KEEP')
CC     CLOSE(UNIT=9,STATUS='DELETE')
CC     CLOSE(UNIT=10,STATUS='DELETE')
CC     CLOSE(UNIT=11,STATUS='DELETE')
CC     CLOSE(UNIT=15,STATUS='DELETE')
CC     RETURN
C
      WRITE (NOUT,1050)
      STOP
C
   16 WRITE(NOUT,1006)  N,J
      STOP
808    WRITE(NOUT, 809)NZBASV,NZBMAX
809    FORMAT(' TOO MANY BASISVECTORS',2I10)
       STOP
901   WRITE(NOUT, 902)NZKA,NZKMAX
902   FORMAT(' TOO MANY CHANNELS',2I5)
      STOP
905   WRITE(NOUT, 906)MM,NDIMD
906   FORMAT(' TOO MANY RADIALPARAMETERS*CHANNELS',2I5)
1050  FORMAT(//,1X,'ENDE DER RECHNUNG VON ENDMAT')
      END
      SUBROUTINE POLKA(NBAND3)
      IMPLICIT REAL*8 (A-H,O-Z)
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /PARA/ PAR(MZPARM,NZKMAX),NAR(MZPARM,NZKMAX)
C
      COMMON /POKA/ B, IKAPO(NZKMAX),IZP(NZKMAX),IZQ(NZKMAX+1),
     *               NZKAPO,KAPO(NZKMAX),IZPWM
C
      COMMON /KAN/ OPWERT(NZOPER+2,NDIMD), WNORM(NZKMAX),
     *             NZP(NZKMAX), EBIN(NZKMAX), MLAD(2,NZKMAX),
     *             H2M, E2R0 ,
     *  RUHM(2,NZKMAX), EBIN1(NZKMAX), NREL
C
      COMMON /UMNO/ REDM(NZKMAX), NZKA, NZKB, MMM, 
     *              NZQ(NZKMAX+1), LWERT(5,NZKMAX), 
     *              KPK(NZKMAX), MASSE(2,NZKMAX)
C
      DIMENSION IDUM(MZPARM),DUM(MZPARM)
C
      IZQ(1)=0
      K1=1
      IZPWM=0
      DO 20 I=1,NZKAPO
      K2=KAPO(I)
      IZP(I)=0
      DO 10 KH=K1,K2
10    IZP(I)=IZP(I)+NZP(KH)
      K1=K2+1
      IZQ(I+1)=IZQ(I)+IZP(I)
20    IZPWM=MAX0(IZPWM,IZP(I))
      IF(IZQ(NZKAPO+1).NE.NZQ(K2+1)) STOP 333
      WRITE (NBAND3) IZQ(NZKAPO+1),IZPWM,(IZP(I),IZQ(I),I=1,NZKAPO)
c      write (nout,*) '3#',IZQ(NZKAPO+1),IZPWM,(IZP(I),IZQ(I),I=1,NZKAPO)
      K1=1
      DO 30 IH=1,NZKAPO
      K2=KAPO(IH)
      I=0
      DO 25 KH=K1,K2
      N=NZP(KH)
      DO 24 NH=1,N
      I=I+1
      IDUM(I)=NAR(NH,KH)
24    DUM(I)=PAR(NH,KH)
25     CONTINUE
      WRITE(NBAND3) (IDUM(K),K=1,IZPWM)
      WRITE(NBAND3) (DUM(K),K=1,IZPWM)
c      write(nout,*) '4#',(IDUM(K),K=1,IZPWM)
c      write(nout,*) '5#',(DUM(K),K=1,IZPWM)
30    K1=K2+1
      RETURN
      END
      SUBROUTINE CHEPOK(IDRUCK,MREG,NZOP)
      IMPLICIT REAL*8 (A-H,O-Z)
C     CKECKT DIE ERGEBNISSE
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /PARA/ PAR(MZPARM,NZKMAX),NAR(MZPARM,NZKMAX)
C
      COMMON /POKA/ B, IKAPO(NZKMAX),IZP(NZKMAX),IZQ(NZKMAX+1),
     *               NZKAPO,KAPO(NZKMAX),IZPWM
C
      COMMON /BIGG/ DM(NDIMD,NDIMD,2,2)
C
      COMMON /UMNO/ REDM(NZKMAX), NZKA, NZKB, MMM, 
     *              NZQ(NZKMAX+1), LWERT(5,NZKMAX), 
     *              KPK(NZKMAX), MASSE(2,NZKMAX)
C
      COMMON /KAN/ OPWERT(NZOPER+2,NDIMD), WNORM(NZKMAX),
     *             NZP(NZKMAX), EBIN(NZKMAX), MLAD(2,NZKMAX),
     *             H2M, E2R0 ,
     *  RUHM(2,NZKMAX), EBIN1(NZKMAX), NREL
C
      DIMENSION MREG(NZOPER),HILF(NDIMD),GAMMA(31)
C
C     BESTIMMUNG DER KANAELE,DIE ZU EINEM POLYNOMKANAL GEHOEREN
      GAMMA(1)= SQRT(3.1415926535897932384)
      GAMMA(2)=1.
      DO 100 K=1,28
  100 GAMMA(K+2)= DBLE(K)*GAMMA(K)/2.
C      GAMMA(2N+1)=GAMMAFUNKTION((2N+1)/2)
C      GAMMA(2N)=GAMMAFUNKTION(N-1)
      DO 1000 KP=1,NZKAPO
      KH1=0
      KH2=0
      DO 2 KH=1,NZKA
      IF(IKAPO(KH).NE.KP) GOTO 2
      IF(KH1.NE.0) GOTO 1
      KH1=KH
1     KH2=KH
2     CONTINUE
      DO 61 K=KH1,KH2
      MMK=NZP(K)
      MN=2*LWERT(4,K)+4*KPK(K)+3
      IF (MN.GT.31) STOP 201
      DO 61 M=1,MMK
      KK = NZQ(K) + M
      AA= SQRT(2.*PAR(M,K)/REDM(K))
   61 HILF(KK )=(2.*(AA**MN)/GAMMA(MN))*OPWERT(NZOPER+1,KK)
C      HERAUSDIVIDIEREN DES NORMINTEGRALS UEBER RADIALFUNKTION
C      BEACHTE PAR UMDEFINIERT
      MMP=IZP(KP)
      WNORM(KP) = .0
      LL = NZQ(KH1) + 1
      DO 62 M=1,MMP
C    CHECK INTERNE NORM, IDENTISCH FUER ALLE RADIALPARAMETER
      KK = NZQ(KH1) + M
      A1=HILF(KK )-HILF(LL )
      A2=HILF(KK )+HILF(LL )
      IF( ABS(A1/A2).GT..001) GOTO  63
   62 WNORM(KP) = WNORM(KP) + HILF(KK )
C     WNORM IST DAS NORMIERUNGSINTEGRAL DER FRAGMENTE,FUER ALLE
C     RADIALPARAMETER GLEICH,UNABHAENGIG VON L
      WNORM(KP) = WNORM(KP)/ DBLE(MMP)
       IF(IDRUCK.LT.0) GOTO 168
       WRITE(NOUT,164) KP,WNORM(KP)
      IF(IDRUCK.LT.2) GOTO 168
       KANF=IZQ(KP)+1
       KEND=IZQ(KP)+MMP
       WRITE(NOUT,165)(HILF(KK),KK=KANF,KEND)
164   FORMAT(' KANAL',I5,' WNORM',E20.12)
165   FORMAT(' OPW ',10E12.5)
168   CONTINUE
      DO 64 K=KH1,KH2
      MMK=NZP(K)
      MN=2*LWERT(4,K)+4*KPK(K)+5
      IF (MN-4.GT.31) STOP 201
      AKINF=2*KPK(K)*(MN-2*KPK(K)-4)
      FAKK=0.
C     BEI RELATIVISTISCHER KINETISCHER ENERGIE IST DER RELATIVANTEIL
C     NICHT BERECHNET
      IF(MREG(2).NE.0)
     *FAKK=.5*H2M*WNORM(KP)*(GAMMA(MN-4)*AKINF-GAMMA(MN))
      DO 64 M=1,MMK
      KK = NZQ(K) + M
      A3=SQRT(2.*PAR(M,K)/REDM(K))
   64 OPWERT(NZOPER+2,KK) =
     *   (OPWERT(NZOPER+2,KK) + FAKK*(A3**(4-MN)))/OPWERT(NZOPER+1,KK)
C      ABZIEHEN DER KINETISCHEN ENERGIE DER RELATIVBEWEGUNG DER FRAGMENTE
      IF(IDRUCK.GT.1) WRITE(NOUT,165) (OPWERT(NZOPER+2,KK),KK=KANF,KEND)
C
      EBIN1(KP) = .0
      IF (REDM(KH1) .LT. 0.5001) GOTO 661
C       GOTO 661 FUER 1 ODER 2 TEILCHEN
      LL = IZQ(KP) + 1
      DO 65 M=1,MMP
      KK = IZQ(KP) + M
      B1=OPWERT(NZOPER+2,KK )-OPWERT(NZOPER+2,LL )
      B2=OPWERT(NZOPER+2,KK )+OPWERT(NZOPER+2,LL )
      IF((ABS(OPWERT(NZOPER+2,LL)) + ABS(B2)).LT.1.E-8) GOTO 661
c     IF( ABS(B1/B2).GT.. 001) GOTO 163
   65 EBIN1(KP) = EBIN1(KP) + OPWERT(NZOPER+2,KK)
 661  CONTINUE
      EBIN1(KP) = EBIN1(KP)/ DBLE(MMP)
      IF(EBIN(KP).EQ.0.) EBIN(KP)=EBIN1(KP)
      IF (MREG(3).EQ.0) GOTO 60
      DO 66 K=KH1,KH2
      DO 66 K1=KH1,KH2
      MMK=NZP(K)
      MMK1=NZP(K1)
      M2=LWERT(4,K)+KPK(K)+KPK(K1)+1
      IF (2*M2.GT.31) STOP 203
      FAKK=DBLE(MLAD(1,K)*MLAD(2,K))*E2R0*WNORM(KP)*SQRT(REDM(K))
     1  *GAMMA(2*M2)*.5
      DO 66 M=1,MMK
      DO 66 N=1,MMK1
      A1=(PAR(M,K)+PAR(N,K1))/REDM(K)
      M3=NZQ(K)+M
      M4=NZQ(K1)+N
      DM(M3,M4,1,2) = DM(M3,M4,1,2) - FAKK*(A1**(-M2))
c     write(nout,*) 'punkt',FAKK*(A1**(-M2)),WNORM(KP)
C      ABZIEHEN DER PUNKTCOULOMBENERGIE DER FRAGMENTE
66    CONTINUE
 60   CONTINUE
1000  CONTINUE
 1005 FORMAT(//,' BINDUNGSENERGIEN IN MEV',/,(12F10.4))
       WRITE(NOUT,1005)(EBIN(K),K=1,NZKAPO)
       WRITE(NOUT,1005)(EBIN1(K),K=1,NZKAPO)
      B = .0
      DO 900   K = 1,NZKAPO
  900 B = B + WNORM(K)
      B=DBLE(NZKAPO)/B
      DO 901    K = 1,NZKAPO
      KH=KAPO(K)
      WNORM(K) = 1./ SQRT(B*WNORM(K)*(REDM(KH)**1.5))
c     write(nout,*) 'wnorm',wnorm(k)
  901 CONTINUE
      RETURN
   63 WRITE(NOUT,1006)  KP,KK,LL
1006  FORMAT(' FEHLER IN DEN EINGABEN,NORM',I3,'-KANAL, WEITE',2I3)
      STOP 'CHEPOK'
  163 WRITE(NOUT,1007)  KP,KK,LL
1007  FORMAT(' FEHLER IN DEN EINGABEN, EBIN',I3,'-KANAL, WEITE',2I3)
      STOP 'CHEPOK'
      END
      SUBROUTINE DEFPOK(NZP,NZKA,IND,NZKB,NZKPB)
      IMPLICIT REAL*8 (A-H,O-Z)
C     DEFINIERT DIE POLYNOMKANAELE
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /POKA/ B, IKAPO(NZKMAX),IZP(NZKMAX),IZQ(NZKMAX+1),
     *               NZKAPO,KAPO(NZKMAX),IZPWM
C
      DIMENSION NZP(NZKMAX)
C
      IZQ(1)=0
      IF(IND.EQ.0) GOTO 30
      IF(NZKAPO.EQ.0) GOTO 30
      IHZ=0
      DO 20 IHX=1,NZKAPO
      WRITE(NOUT, 5)IHX
5     FORMAT(' ZUM',I3,' -TEN POLYNOMKANAL GEHOEREN DIE KANAELE')
      IHY=0
      DO 10 IH=1,NZKA
      IF(IKAPO(IH).NE.IHX) GOTO 8
      KAPO(IHX)=IH
C    ZUORDNUNG POLYNOMKANAL LETZTER EINFACHER KANAL
      IHY=IHY+NZP(IH)
      WRITE(NOUT, 6)IH
6     FORMAT(I5)
8     IF(IHZ.GT.0) GOTO 10
      IF(IH.NE.NZKB) GOTO 10
      IHZ=1
      NZKB=IKAPO(IH)
10    CONTINUE
      IZP(IHX)=IHY
      IZQ(IHX+1)=IZQ(IHX)+IHY
20    CONTINUE
      NZKPB=IKAPO(NZKB)
      RETURN
30    DO 35 I=1,NZKA
      KAPO(I)=I
      IKAPO(I)=I
      IZP(I)=NZP(I)
35    IZQ(I+1)=IZQ(I)+IZP(I)
      NZKAPO=NZKA
      NZKPB=NZKB
      RETURN
      END
      SUBROUTINE ORTHO(NXH,EOV)
      IMPLICIT REAL*8 (A-H,O-Z)
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /PARA/ PAR(MZPARM,NZKMAX),NAR(MZPARM,NZKMAX)
C
      COMMON /POKA/ B, IKAPO(NZKMAX),IZP(NZKMAX),IZQ(NZKMAX+1),
     *               NZKAPO,KAPO(NZKMAX),IZPWM
C
      COMMON /BIGG/ DM(NDIMD,NDIMD,2,2),DMTMP(NDIMD,NDIMD)
C
      COMMON /PLO/ SNORM(NZKMAX), QQN(NDIMD), SWW
C
      COMMON /SHIFT/ ES(NZKMAX),IABLK,NKANB(NZKMAX)
C
      COMMON /DREH/ MLWERT(5,NZBMAX),JWERT(3,NZKMAX),
     *              MMS(3,NZBMAX),JWS
C
      COMMON QQ(NDIMD,NZZMAX),
     *       INPUT, NBAND3, NBAND9, NENTP, NZZ, IAUW,
     *       IDRU, NB15, IPLO
C
      COMMON /STORE/ZH(NDIMD,NDIMD),H(NDIMD,NDIMD), EN(NDIMD,NDIMD)
C
      DIMENSION FC1(8*NDIMD), Q(NDIMD), IWORK(5*NDIMD), IFAIL(NDIMD),
     *          isuppz(2*NDIMD)
c     DIMENSION FC1(NDIMD),FC2(NDIMD)
      CHARACTER*1 JOBZ,UPLO, RANGE
C

C
      NX=NXH
      ITYPE=1
      JOBZ='V'
      UPLO='U'
      RANGE='A' 
 1000 FORMAT (1P10E13.5)
1101  FORMAT(/8X,'EIGENWERTE DES HAMILTONOPERATORS',//)
 1002 FORMAT(20I3)
 1004 FORMAT(//8X,18H H-ERWARTUNGSWERTE//)
      IF(MOD(NENTP,2).EQ.1) GOTO 209
C     STREURECHNUNG UND BINGUNGRECHNUNG MIT GEKOPPELTEN FUNKTIONEN
C     OHNE NENTP=3 WEGEN SINGLE RECHNUNG
C     UMNORMIEREN VON EN UND H
c     write(nout,*) 'normierung b=',b
      DO 910   N = 1,NX
      DO 910   M = 1,NX
      DM(M,N,1,1) = B*DM(M,N,1,1)
      DM(M,N,2,1) = B*DM(M,N,2,1)
      DM(M,N,1,2) = B*DM(M,N,1,2)
  910 DM(M,N,2,2) = B*DM(M,N,2,2)
      CALL POLKA(NBAND3)
      WRITE(NBAND3)((DM(M,N,1,1),M=1,NX),N=1,NX)
      WRITE(NBAND3)(( DM(M,N,1,2),M=1,NX),N=1,NX)
c      write(nout,*) '6#',((DM(M,N,1,1),M=1,NX),N=1,NX)
c      write(nout,*) '7#',(( DM(M,N,1,2),M=1,NX),N=1,NX)
      DO 15  N=1,NX
   15 Q(N)=DM(N,N,2,2)/DM(N,N,2,1)
      WRITE(NOUT,1004)
      WRITE(NOUT,1000)(Q(M),M=1,NX)
C     HIER WIRD H VERAENDERT ZUM SCHIEBEN DER SCHWELLEN
      IF(IABLK.EQ.0) GOTO 209
      N1=1
      DO 191 IH=1,IABLK
      DO 190 N=IZQ(N1)+1,IZQ(NKANB(IH)+1)
      DO 190 M=IZQ(N1)+1,IZQ(NKANB(IH)+1)
190   DM(M,N,2,2)=DM(M,N,2,2) + ES(IH)*DM(M,N,2,1)
191   N1=NKANB(IH)+1
C     SCHIEBEN VOLLBRACHT
C       BINDUNGS UND STREURECHNUNG
209   IF (IDRU.LT.1) GOTO 210
      WRITE(NOUT,*)' NORM UND HAMILTONMATRIX VOR DIAGONALISATION'
      CALL SCHEMA(DM(1,1,2,1),NX,NX,NDIMD,5)
      CALL SCHEMA(DM(1,1,2,2) ,NX,NX,NDIMD,5)
      IF(IDRU.LT.3)GOTO 210
C     LAPACK-AUFRUF
      LWORK=8*NDIMD
      IERR = 0
c      write(nout,*)'JOBZ, RANGE, UPLO, NX, NDIMD, VL, VU, Il, IU,
c     * ABSTOL, NDIMD, LWORK, IERR'
c      write(nout,*) JOBZ, RANGE, UPLO, NX, NDIMD, VL, VU, Il, IU,
c     * ABSTOL, NDIMD, LWORK, IERR
C -- replaced because of linking issues on woody, analogous to gen_min DREND
      do i=1,ndimd
         do j=1,ndimd
            DMTMP(i,j)=DM(i,j,2,1)
         enddo
      enddo
C     LAPACK-AUFRUF
C  DSYEVX computes selected eigenvalues and, optionally, eigenvectors
C  of a real symmetric matrix A.  Eigenvalues and eigenvectors can be
C  selected by specifying either a range of values or a range of indices
C  for the desired eigenvalues.
       write(nout,*) 'JOBZ=',JOBZ
       CALL DSYEVX(JOBZ,RANGE,UPLO,NX,DMTMP(1,1),NDIMD,VL,VU,Il,IU,
     *  ABSTOL, MOUT,Q,ZH,NDIMD,FC1,LWORK,IWORK,IFAIL,IERR)
C
c       CALL DSYEVR(JOBZ,RANGE,UPLO,NX,DM(1,1,2,1),NDIMD,VL,VU,Il,IU,
c     *  ABSTOL, MOUT,Q,ZH,NDIMD,isuppz,FC1,LWORK,IWORK,LWORK,IERR)
c       CALL DSYEVX(JOBZ,RANGE,UPLO,NX,DM(1,1,2,1),NDIMD,VL,VU,Il,IU,
c     *  ABSTOL, MOUT,Q,ZH,NDIMD,FC1,LWORK,IWORK,IFAIL,IERR)
C
      WRITE (NOUT,*) ' EIGENWERTE DER NORMMATRIX'
      IF(IERR.NE.0) THEN
        WRITE(NOUT,*) ' DIAGONALISATION FEHLERHAFT'
        WRITE(NOUT,*) ' IERR = ',IERR
      ENDIF
      WRITE (NOUT,1000) (Q(M),M=1,NX)
      NZZ = MIN0(MAX0(1,NZZ),NX,NZZMAX)
      DO 1800  K=1,NZZ
      WRITE (NOUT,1008)  K
      WRITE(NOUT,1007) (ZH(M,K),M,M=1,NX)
 1800 CONTINUE
      WRITE(NOUT,*) 'CONDITION NUMBER'
      WRITE(NOUT,1000) Q(NX)/Q(1)
      IF(IDRU.LT.4) GOTO 1811
      DO 1810 K=1,NX
      DO 1810 KS=1,NX
      EN(KS,K)=0.
      DO 1808 M=1,NX	
      DO 1808 N=1,NX	
      EN(KS,K)=EN(KS,K)+ZH(M,KS)*DM(M,N,2,2)*ZH(N,K)
      IF(IDRU.GT.5)WRITE(NOUT,*) ' ME ',K,KS,' M,N ',M,N,EN(KS,K)
1808  CONTINUE
      EN(KS,K)=EN(KS,K)/SQRT(Q(KS)*Q(K))
      IF(IDRU.GT.4)WRITE(NOUT,*) ' ME ',K,KS,EN(KS,K)
1810  CONTINUE
      DO 751 MW=2,MMM
      DO 751 NW=1,MW-1
      IF(ABS(EN(MW,NW)-EN(NW,MW)).NE.0.)
     * WRITE(NOUT,*) 'M,N ,EN,EN',MW,NW,EN(MW,NW),
     *               EN(NW,MW)
751   CONTINUE
      WRITE(NOUT,*) ' TRANSFORMIERTE HAMILTON-MATRIX MIT NORM-EW'
      CALL SCHEMA (EN,NX,NX,NDIMD,5)
c1811  STOP 'EIGENWERTE DER NORMMATRIX'
1811  CONTINUE
  210 CONTINUE
      DO 322 M=1,NX
      DO 322 N=1,NX
      EN(N,M) =  DM(N,M,2,1)
  322 H(N,M) =  DM(N,M,2,2)
      IERR=0
C
C     NAGLIB-AUFRUF
C      CALL F02AEF(H,NDIMD,EN,NDIMD,NX,Q,ZH,NDIMD,FC1,FC2,IERR)
C
C     EISPACK-AUFRUF
C     CALL RSG(NDIMD,NX,H,EN,Q,1,ZH,FC1,FC2,IERR)
C
C     LAPACK-AUFRUF
      IF(NENTP.NE.0) THEN 
      RANGE='A'
c      RANGE='I'
      NZZ = MIN0(MAX0(1,NZZ),NX,NZZMAX)
      END IF
c     FUER BINDUNGSRECHNUNGEN NUR NZZ EIGENWERTE UND VEKTOREN BERECHNEN
      IL= 1
      IU= NZZ
      ABSTOL=0.00001
      LWORK=8*NDIMD
C Lapack: computes selected EW + evtl. EV for real, symmetric, generalized EV prob.
C         ITYPE=1: A*x=\labda B_symm*x ; JOBZ=N(EW),V(EW+EV) ; RANGE=which EV
C         UPLO=U,L triangle ME stored ; NX=order of matrix pencil ; H=input mat A
C         NDIMD=dim(A) ; EN=input mat B ; NDIMD=dim(B) ; VL VU IL IU ABSTOL ; MOUT=#EW found
C         Q=1D array with EW(ascending) ; ZH=mat with orthnom EV
C
CC  in gen_min dsygv is used, which stores EV in original matrix A.
CC
      write(nout,*)'ITYPE,NDIMD,NZZ = ', ITYPE,NDIMD,NZZ
      CALL DSYGVX(ITYPE,JOBZ,RANGE,UPLO,NX,H,NDIMD,EN,NDIMD,VL,VU,
     *    IL,IU,ABSTOL,MOUT,Q,ZH,NDIMD,FC1,LWORK,IWORK,IFAIL,IERR)


      WRITE (NOUT,1101)
      WRITE (NOUT,1000) (Q(M),M=1,NX)
      EOV = Q(1)
      IF(IERR.EQ.0) GOTO 950
      WRITE (NOUT,945) IERR
945   FORMAT('0 DIAGONALISIERUNG FEHLERHAFT, SIEHE LAPACK MANUAL',I10)
      WRITE(NOUT,*) ' NOT CONVERGED AT ',(IFAIL(IX),IX=1,NZZ)
      
  950 CONTINUE
C
C
      IF (NENTP.EQ.0) GOTO 802
C     BINGUNGSRECHNUNG MIT UND OHNE GEKOPPELTE FUNKTIONEN
      DO 800  K=1,NZZ
      KK=K
      IF (IAUW.NE.0)  READ (INPUT,1002)  KK
      WRITE (NOUT,1008)  KK
 1008 FORMAT(//16H ENTWICKLUNG DES,I3,17H TEN EIGENVEKTORS/)
      DO 144   M = 1,NX
144   QQ(M,K)=ZH(M,KK)
      WRITE(NOUT,1007) (QQ(M,K),M,M=1,NX)
  800 CONTINUE
 1007 FORMAT (4(1PE18.10,' /',I4,')'))
      IF (IPLO.LE.0) GOTO 801
      REWIND NBAND9
      READ (NBAND9) NY,((EN(N,M),M=1,NY),N=1,NY)
C     HIER WIRD EN TRANSPONIERT EINGELESEN!!!!
      DO 5 N=1,NY
5     QQN(N)=0.
      DO 20 J=1,NY
      DO 20 I=1,NY
20    QQN(J)=QQN(J)+EN(I,J)*QQ(I,1)
      WRITE(NOUT,1000)(QQN(N),N=1,NY)
       CALL PLOB(EOV,IPLO,NB15,NENTP)
801   IF (NENTP.EQ.1) GOTO 990
C
C
  802 CONTINUE
C     STREURECHNUNG UND BINDUNGSRECHNUNG MIT GEKOPPELTEN FUNKTIONEN
      WRITE(NBAND3) ((ZH(M,N),M=1,NX),N=1,NX)
      WRITE(NBAND3)(Q(M)  ,M=1,NX)
      WRITE(NBAND3)((DM(M,N,2,1),M=1,NX),N=1,NX)
      WRITE(NBAND3)(( DM(M,N,2,2),M=1,NX),N=1,NX)
c      write(nout,*) '8#',((ZH(M,N),M=1,NX),N=1,NX)
c      write(nout,*) '9#',(Q(M)  ,M=1,NX)
c      write(nout,*) '10#',((DM(M,N,2,1),M=1,NX),N=1,NX)
c      write(nout,*) '11#',(( DM(M,N,2,2),M=1,NX),N=1,NX)
C
990   RETURN
      END
      SUBROUTINE UMNORM (NENTP,NBAND9,MEMPT,KPUTZ,IPLO)
      IMPLICIT REAL*8 (A-H,O-Z)
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /BIGG/ DM(NDIMD,NDIMD,2,2)
C
      COMMON /UMNO/ REDM(NZKMAX), NZKA, NZKB, MMM, 
     *              NZQ(NZKMAX+1), LWERT(5,NZKMAX), 
     *              KPK(NZKMAX), MASSE(2,NZKMAX)
C
      IF (NENTP-1) 2,10,2
C    STREUWELLEN WERDEN ALS FUNKTION DES RELATIVABSTANDES R
C    UND NICHT ALS FUNKTION DER JACOBIKOORDINATE S=REDM**.5*R
C    GENOMMEN
    2 DO 227   K = 1,NZKA
      LWK=LWERT(4,K)+2*KPK(K)
      DO 227   L = 1,NZKA
      LWL=LWERT(4,L)+2*KPK(L)
      K1 = NZQ(K) + 1
      K2 = NZQ(K+1)
      L1 = NZQ(L) + 1
      L2 = NZQ(L+1)
      A=(REDM(K)**(LWK))*(REDM(L)**(LWL))
      A = 1./ SQRT(A)
      DO 227 N = L1,L2
      DO 227 M = K1,K2
      DM(M,N,1,KPUTZ) = A*DM(M,N,1,KPUTZ)
227   DM(M,N,2,KPUTZ) = A*DM(M,N,2,KPUTZ)
C
10    IF (MEMPT.NE.1.OR.KPUTZ.NE.1.OR.IPLO.LT.0) GOTO 100
      CALL NOKEHA(NBAND9,IPLO)
      IF(NENTP.NE.0) GOTO 1
C
100   CONTINUE
      IF(NZKA.EQ.NZKB) GOTO 225
      K1 = NZQ(NZKB+1) + 1
      K2=NZQ(NZKA+1)
      DO 902 K=K1,K2
      DO 902 L=1,K2
      DM(K,L,1,KPUTZ)=DM(K,L,2,KPUTZ)
  902 DM(L,K,1,KPUTZ)=DM(L,K,2,KPUTZ)
  225 CONTINUE
1     RETURN
      END
      SUBROUTINE SCHEMA(S,IM1,IM2,JM2,IDH)
      IMPLICIT REAL*8 (A-H,O-Z)
C  AUFRUF VON SCHEMA   (NAME,ZEILENZAHL,SPALTENZAHL,ZEILENDIMENSION)
        INCLUDE 'par/DR2END_AK_I_2'
      DIMENSION S(JM2*IM2)
      CHARACTER*20 ERGL(6),HEAD(6)
      DATA ERGL/ '(I4,2X,1P5E22.14)', '(I4,2X,1P6E20.12)',
     * '(I4,2X,1P7E18.10)', '(I4,2X,1P8E16.8)', '(I4,2X,1P9E14.6)',
     * '(I4,2X,1P10E12.4)'/
      DATA HEAD/ '(/,5I22)', '(/,6I20)', '(/,7I18)', '(/,8I16)',
     *  '(/,9I14)', '(/,10I12)'/
      ID=IDH
      IF(ID.LT.5) ID=5
      IF(ID.GT.10)ID=10
      IMGA=IM2/ID
      IF(IMGA)    10,10,11
   11 CONTINUE
      DO 30  LL=1,IMGA
      LXU=(LL-1)*ID +1
      LXO=LL*ID
      WRITE(NOUT,HEAD(ID-4))(LO,LO=LXU,LXO)
      DO 30  K=1,IM1
      I1=(LXU-1)*JM2+K
      I2=(LXO-1)*JM2+K
   30 WRITE(NOUT,ERGL(ID-4))K,(S(I),I=I1,I2,JM2)
   10 CONTINUE
      LXU=1+IMGA*ID
      IF(LXU-IM2) 2,2,1
    2 CONTINUE
      WRITE(NOUT,HEAD(ID-4))(LO,LO=LXU,IM2)
      DO 100  K=1,IM1
      I1=(LXU-1)*JM2+K
      I2=(IM2-1)*JM2+K
  100  WRITE(NOUT,ERGL(ID-4))K,(S(I),I=I1,I2,JM2)
    1 CONTINUE
      RETURN
      END
      SUBROUTINE UMKOP(KL,LL,F)
      IMPLICIT REAL*8 (A-H,O-Z)
C     UMKOP BERECHNET 9J(L1,L2,L3;S1,S2,S3;J1,J2,J3)*
C      6J(J,S3,L5;L3,L4,J3)*
C       HAT(J1,J2,L3,S3,L5,J3)*(-)**(L5+S3-J)
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /DREH/ MLWERT(5,NZBMAX),JWERT(3,NZKMAX),
     *              MMS(3,NZBMAX),JWS
C
      FL1=(JWERT(1,KL)+1)*(JWERT(2,KL)+1)*(JWERT(3,KL)+1)
     1*(2*MLWERT(3,LL)+1)*(2*MLWERT(5,LL)+1)*(MMS(3,LL)+1)
      PHAS=(-1)**((MMS(3,LL) - JWS)/2+MLWERT(5,LL))
      F=F9J(2*MLWERT(1,LL),2*MLWERT(2,LL),2*MLWERT(3,LL),
     1      MMS(1,LL),MMS(2,LL),MMS(3,LL),
     2      JWERT(1,KL),JWERT(2,KL),JWERT(3,KL))*
     3  F6J(JWS,MMS(3,LL),2*MLWERT(5,LL),
     4      2*MLWERT(3,LL),2*MLWERT(4,LL),JWERT(3,KL))*SQRT(FL1)*PHAS
C      write(nout,*) 'FL1,PHAS =', FL1,PHAS
      RETURN
      END
      SUBROUTINE NOKEHA(NBAND9,IPLO)
      IMPLICIT REAL*8 (A-H,O-Z)
C     FUHERT NORMKERNTRANSFORMATION DURCH
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /BIGG/ DM(NDIMD,NDIMD,2,2)
C
      COMMON /UMNO/ REDM(NZKMAX), NZKA, NZKB, MMM, 
     *              NZQ(NZKMAX+1), LWERT(5,NZKMAX), 
     *              KPK(NZKMAX), MASSE(2,NZKMAX)
C
      COMMON /FAKUL/ FAKU(13)
C
      COMMON /STORE/ZH(NDIMD,NDIMD),H(NDIMD,NDIMD), EN(NDIMD,NDIMD)
C
      DIMENSION EIG(NDIMD),FV1(8*NDIMD),IWORK(5*NDIMD),QN(NDIMD),
     *          IFAIL(NDIMD)
c     DIMENSION FV1(NDIMD),FV2(NDIMD)
      CHARACTER*1 JOBZ,UPLO, RANGE
C 
C
      NX=MMM
C     EN ENTHAELT DIE GESAMTNORM
      DO 10 N=1,NX
      DO 10 M=1,NX
      EN(M,N)=DM(M,N,2,1)
10    H(M,N)=DM(M,N,2,1)-DM(M,N,1,1)
C     H ENTHAELT NUR DEN DIREKTEN TERM DER NORM
C
      WRITE(NOUT, *)'ACHTUNG: UMNOR2 GERUFEN'
      DO 227   K = 1,NZKA
      DO 227   L = 1,NZKA
      K1 = NZQ(K) + 1
      K2 = NZQ(K+1)
      L1 = NZQ(L) + 1
      L2 = NZQ(L+1)
      A=(REDM(K)**(1.5))*(REDM(L)**(1.5))
      A = 1./ SQRT(A)
C
C     BEI VERSCHIEDENEN ZERLEGUNGEN MUSS DIE MATRIX A MIT AMOD
C     MODIFIZIERT WERDEN
      IH1=IABS(MASSE(1,K)-MASSE(1,L))
      IH2=MAX0(MASSE(1,K),MASSE(1,L))
      IH3=MAX0(MASSE(2,K),MASSE(2,L))
      AMOD=FAKU(IH1+1)/(FAKU(IH2+1)*FAKU(IH3+1))
C
      DO 227 N = L1,L2
      DO 227 M = K1,K2
      H(M,N) = A*H(M,N)*AMOD
227   EN(M,N) = A*EN(M,N)
C
C     NAGLIB-AUFRUF
C
      IERR=0
C     CALL F02ABF(H,NDIMD,NX,EIG,ZH,NDIMD,FV1,IERR)
C
C     EISPACK-AUFRUF
C
C      CALL RS(NDIMD,NX,H,EIG,1,ZH,FV1,FV2,IERR)
C
C     LAPACK-AUFRUF
      JOBZ='V'
      UPLO='U'
      RANGE= 'A'
      ABSTOL=0.00001
      LWORK=8*NDIMD
      write(nout,*) 'JOBZ=',JOBZ  
       CALL DSYEVX(JOBZ,RANGE,UPLO,NX,H,NDIMD,VL,VU,Il,IU,
     *  ABSTOL, MOUT,EIG,ZH,NDIMD,FV1,LWORK,IWORK,IFAIL,IERR)

C     H DIAGONALISERT
1001  FORMAT(1X,10E12.5)
      DO 22 M=1,NX
22    QN(M)=1./SQRT(EIG(M))
      DO 220 M=1,NX
      DO 220 N=1,NX
      H(M,N)=0.
      DO 218 NN=1,NX
      DO 218 MM=1,NX
218   H(M,N)=H(M,N)+ZH(MM,M)*EN(MM,NN)*ZH(NN,N)
220   H(M,N)=QN(M)*H(M,N)*QN(N)
C     GESAMTNORM H TRANSFORMIERT MIT EIGENVEKTOREN DES DIREKTEN TERMS
C
C     NAGLIB-AUFRUF
C
      IERR=0
      LWORK=8*NDIMD
C     CALL F02ABF(H,NDIMD,NX,EIG,EN,NDIMD,FV1,IERR)
C
C     EISPACK-AUFRUF
C
C      CALL RS(NDIMD,NX,H,EIG,1,EN,FV1,FV2,IERR)
C
C
      write(nout,*) 'JOBZ=',JOBZ
       CALL DSYEVX(JOBZ,RANGE,UPLO,NX,H,NDIMD,VL,VU,Il,IU,
     *  ABSTOL, MOUT,EIG,EN,NDIMD,FV1,LWORK,IWORK,IFAIL,IERR)

C     GESAMT NORM DIAGONALISIERT
      DO 30 M=1,NX
30    EIG(M)=SQRT(EIG(M))
      WRITE(NOUT, 34)
34     FORMAT(' EIGENWERTE DER TRANSFORMIERTEN GESAMTNORM **.5')
       WRITE(NOUT,1001) (EIG(M),M=1,NX)
      DO 50 M=1,NX
      DO 50 N=1,NX
      H(M,N)=0.
      DO 50 J=1,NX
50    H(M,N)=H(M,N)+EIG(J)*EN(M,J)*EN(N,J)
C     H IST WURZEL AUS DER TRANSFORMIERTEN GESAMTNORM
      DO 60 M=1,NX
      DO 60 N=1,NX
60    EN(N,M)=QN(N)*H(N,M)/QN(M)
      DO 80 N=1,NX
      DO 80 M=1,NX
      H(M,N)=0.
      DO 70 MM=1,NX
      DO 70 NN=1,NX
70    H(M,N)=H(M,N)+ZH(M,NN)*EN(NN,MM)*ZH(N,MM)
80    CONTINUE
C
C     ZUSAETZLICHE FAKTOREN BEI VERSCHIEDENEN FRAGMENTIERUNGEN
      MH=0
      DO 184 IH=1,NZKA
      IH1=MASSE(1,IH)
      IH2=MASSE(2,IH)
      AH=1./SQRT(FAKU(IH1+1)*FAKU(IH2+1))
      JHA=NZQ(IH)+1
      JHE=NZQ(IH+1)
      DO 184 JH=JHA,JHE
      MH=MH+1
      DO 184 NH=1,NX
      H(MH,NH)=AH*H(MH,NH)
184   CONTINUE
C
      IF(IPLO.LT.3) GOTO 199
      WRITE(NOUT,190)
190    FORMAT(' WURZEL AUS DER NORM',/)
       CALL SCHEMA(H,NX,NX,NDIMD,10)
 199  REWIND NBAND9
      WRITE(NBAND9) NX,((H(M,N),M=1,NX),N=1,NX)
      RETURN
      END
      SUBROUTINE PLOB(E,IPLO,NB15,NENTP)
      IMPLICIT REAL*8 (A-H,O-Z)
C
        INCLUDE 'par/DR2END_AK_I_2'
C
      COMMON /PARA/ PAR(MZPARM,NZKMAX),NAR(MZPARM,NZKMAX)
C
      COMMON /POKA/ B, IKAPO(NZKMAX),IZP(NZKMAX),IZQ(NZKMAX+1),
     *               NZKAPO,KAPO(NZKMAX),IZPWM
C
      COMMON /DREH/ MLWERT(5,NZBMAX),JWERT(3,NZKMAX),
     *              MMS(3,NZBMAX),JWS
C
      COMMON /UMNO/ REDM(NZKMAX), NZKA, NZKB, MMM, 
     *              NZQ(NZKMAX+1), LWERT(5,NZKMAX), 
     *              KPK(NZKMAX), MASSE(2,NZKMAX)
C
      COMMON /PLO/ SNORM(NZKMAX), QQN(NDIMD), SWW
C
      COMMON QQ(NDIMD,NZZMAX),
     *       INPUT
C
      NX=MMM
      REWIND NB15
      NZRW=200
      KBIN=2
      MM=0
      DO 10 KL=1,NZKA
      REDMX=REDM(KL)
      IF(NENTP.EQ.2.OR.NENTP.EQ.3) REDMX=1.
C     BEI NENTP=2,3 WERDEN BEREITS RELATIVKOORDINATEN VERWENDET
      WRITE(NB15) NX,KL,NZRW,E,JWS,REDMX,IZP(KL),E,KBIN,LWERT(4,KL),
     1            KL
C     KL IST DIE KANALNUMMER
C     NX IST DIE GESAMTZAHL DER RELATIVWEITEN
C     JWS=2*J (ENTSPRICHT IM FUPLOT DER METHODE)
C     KBIN=2 ERMOEGLICHT IM FUPLOT DAS PLOTTEN DES EFFEKTIVEN POTENTIALS
C     LWERT(4,KL) IST DER RELATIVDREHIMPULS ZWISCHEN DEN FRAGMENTEN
      DO 20 K=1,NZRW
      R=SWW*DBLE(K)
      WFB=0.
      WFN=0.
      MM=IZQ(KL)
      NZPW=IZP(KL)
      AL=DBLE(LWERT(4,KL))
      F=REDMX**(AL/2.+.75)
      DO 30 M=1,NZPW
      MM=MM+1
      A=PAR(M,KL)*REDMX*R*R
      SW=(R**(AL+1))*EXP(-A)*F
C     PRINT *,' MM,PAR,REDM,SW ',MM,PAR(M,KL),REDM(KL),SW,A
      WFN=WFN+QQN(MM)*SW
30    WFB=WFB+QQ(MM,1)*SW
      WFN=WFN*SQRT(SNORM(KL))
      WFB=WFB*SQRT(SNORM(KL))
      WFC=WFB*R*R
      WRITE(NB15) R,WFB,WFC,WFN
      IF(IPLO.LE.1) GOTO 20
      WRITE(NOUT,1000) R,WFB,WFC,WFN
C     WFB IST DIE WELLENFUNKTION,WFC =WFB*R*R FUER INTEGRAND VON E1-ME
C     WFN IST DIE MIT NORMKERNTRANSFORMIERTE WELLENFUNKTION
C     MAL WURZEL-SNORM
1000  FORMAT(1X,F8.4,5X,3E12.4)
20    CONTINUE
 10   CONTINUE
      RETURN
      END
      FUNCTION RELEN(P1,B1,M1,P2,B2,M2,L)
      IMPLICIT REAL*8 (A-H,O-Z)
        INCLUDE 'par/DR2END_AK_I_2'
C
C      RECHNET KINETISCHE ENERGIE DER RELATIVBEWEGUNG
C      (ABER RELATIVISTISCH, GELL!)
C      FORMELN UND BEZEICHNUNGEN SIEHE AUFSCHRIEB.
C      RUFT FOLGENDE ROUTINEN:
C             SUBR. LAGER
C             FUNC. XLU
C      INPUT: NAME       BEDEUTUNG                  TYP
C              P1      POLYNOMGRAD LINKS           INTEGER
C              B1      WEITE LINKS                 REAL
C              M1      MASSE 1. FRAG. IN MEV       REAL
C              P2      POLYNOMGRAD RECHTS          INTEGER
C              B2      WEITE RECHTS                REAL
C              M2      MASSE 2. FRAG. IN MEV       REAL
C              L       RELATIV DREHIMP.            INTEGER
C                      (IST LI. UND RE. SOWIESO
C                       GLEICH)
C
       INTEGER P1, P2, L, MAXDEG, K
       REAL*8  B1, B2, M1, M2, HC, PI, ALPHA, E1, E2,
     *         FAK, GAMMA, RK, RL, X1, X2, XLU
C
       PARAMETER (PI=3.141592653589793238, HC=197.32858, MAXDEG=5)
C
       DIMENSION GAMMA(0:2*MAXDEG)
C
       COMMON /KOEF/ GAMMA
C
       IF ((P1 .GT. MAXDEG) .OR. (P2 .GT. MAXDEG)) THEN
          WRITE(NOUT,*)'RELEN: MAXDEG ZU KLEIN: ',MAXDEG,MAX(P1,P2)
          STOP 13
       ENDIF
C
       RL    = DBLE(L)
       ALPHA = (1./B1 + 1./B2)/4.
       X1    = ALPHA*(M1/HC)**2
       X2    = ALPHA*(M2/HC)**2
       E1    = 0.
       E2    = 0.
       FAK   = SQRT(PI/(B1+B2))/2.
C
       DO 10 K=0, L-1
          RK  = DBLE(K)
          FAK = FAK*(2.*RK+1.)/(B1+B2)/2.
10     CONTINUE
       CALL LAGER(P1,P2,B1,B2,L)
       DO 20 K=0, P1+P2
          RK = DBLE(K)
          FAK = FAK*(2.*(RK+RL)+1.)/(B1+B2)/2.
          E1 = E1 + FAK*M1*((2.*(RK+RL)+3.)*XLU(K+L+2,X1)/X1/2. +
     *                      XLU(K+L+1,X1))*GAMMA(K)
          E2 = E2 + FAK*M2*((2.*(RK+RL)+3.)*XLU(K+L+2,X2)/X2/2. +
     *                      XLU(K+L+1,X2))*GAMMA(K)
20     CONTINUE
       E1 = E1 - FAK*M1
       E2 = E2 - FAK*M2
       RELEN = E1 + E2
       RETURN
       END
       SUBROUTINE LAGER(P1,P2,B1,B2,L)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C      RECHNET GAMMA-QUER-KOEFFIZIENTEN GEM.
C      AUFSCHRIEB AUS. DIE HEISSEN HIER ALLERDINGS GAMMA.
C      LAGER RUFT KEINE UNTERPROGRAMME MEHR.
C
       INTEGER P1, P2, L, J, K, N, MAXDEG
       REAL*8  B1, B2, RP1, RP2, C1, C2, GAMMA, FAK,
     *         ALPHA, RK, F
C
       PARAMETER (MAXDEG=5)
        INCLUDE 'par/DR2END_AK_I_2'
C
       DIMENSION C1(0:MAXDEG), C2(0:MAXDEG),
     *           GAMMA(0:2*MAXDEG)
C
       COMMON /KOEF/ GAMMA
C
       F(N) = DBLE(1-2*MOD(N,2))
C
       DATA C1 /MAXDEG*0., 0./
       DATA C2 /MAXDEG*0., 0./
       DATA GAMMA /MAXDEG*0., MAXDEG*0., 0./
C
       IF ((P1 .GT. MAXDEG) .OR. (P2 .GT. MAXDEG)) THEN
          WRITE(NOUT,*)'LAGER: MAXDEG ZU KLEIN: ',MAXDEG,MAX(P1,P2)
          STOP 13
       ENDIF
C
       ALPHA  = DBLE(L) + 0.5
       RP1    = DBLE(P1)
       RP2    = DBLE(P2)
       C1(P1) = F(P1)*(B2/B1)**P1
       C2(P2) = F(P2)*(B1/B2)**P2
C
       DO 10 K=MAX(P1,P2)-1, 0, -1
          RK  = DBLE(K)
          FAK = -(ALPHA+RK+1.)*(RK+1.)
          IF (K .LT. P1) C1(K) = FAK*C1(K+1)/(RP1-RK)/B2
          IF (K .LT. P2) C2(K) = FAK*C2(K+1)/(RP2-RK)/B1
10     CONTINUE
       DO 20 K=0, P1+P2
          GAMMA(K) = 0.
          DO 30 J=MAX(0,K-P2), MIN(K,P1)
             GAMMA(K) = GAMMA(K) + C1(J)*C2(K-J)
30        CONTINUE
20     CONTINUE
       RETURN
       END
       FUNCTION XLU(L,X)
      IMPLICIT REAL*8 (A-H,O-Z)
C
C      RECHNET RATIONALE APPROXIMATION AN
C                  X**(L+.5)*U(L+.5;.5;X)
C      ALGORITHMUS UND LITERATUR SIEHE AUFSCHRIEB.
C      XLU RUFT KEINE UNTERPROGRAMME.
C
       INTEGER K, L, SIZE
       REAL*8  RL, P, PP, XX, Y, Q0, Q1, Q2, C1, D1,
     *         G1, G2, G3, A, B, X
C
       PARAMETER (SIZE=30)
C
       DIMENSION A(0:SIZE), B(0:SIZE)
C
       RL    = DBLE(L)
       P     = (2.*RL+1.)/4.
       XX    = X+X
       Q1    = XX - (P+P)
       A(0)  = 1.
       B(0)  = 1.
       Q2    = RL + P + 2.
       A(1)  = 1. + Q1/Q2
       B(1)  = 1. + XX/Q2
       PP    = Q2 + RL + 4.
       Q0    = 1. + XX/PP
       A(2)  = 1. + 6.*P/PP + 3.*Q0*Q1/Q2
       B(2)  = 1. + 3.*XX*Q0/Q2
       Y     = 5.
C
       DO 10 K=2, SIZE-1
          Q0     = Y/(Y-2.)
          PP     = PP + Y + RL + 1.
          Q1     = (Y-1.)/PP
          C1     = Y*Q1 - 1.
          D1     = Y*XX/PP
          Q2     = (RL+1.)*Q1
          G1     = D1 + Q0*(C1+Q2)
          G2     = D1 - C1
          G3     = Q0*(1.-(Q2+Q1+Q1))
          A(K+1) = G1*A(K) + G2*A(K-1) + G3*A(K-2)
          B(K+1) = G1*B(K) + G2*B(K-1) + G3*B(K-2)
          Y      = Y + 2.
10     CONTINUE
       XLU  = A(SIZE)/B(SIZE)
       RETURN
       END
      DOUBLE PRECISION FUNCTION CLG(J1,J2,J3,M1,M2)
C
C     CLG BERECHNET DIE CLEBSCH-GORDAN-KOEFFIZIENTEN
C     (J1/2,M1/2;J2/2,M2/2|J3/2,(M1+M2)/2) NACH
C     EDMONDS 'ANGULAR MOMENTUM IN QUANTUM MECHANICS',
C     PRINCETON, 1960 GLEICHUNGEN (3.10.60), (3.7.3)
C     UND TABELLE 2 (1. GLEICHUNG)
C
C     BENUTZT COMMON /COMY/ MIT DEN LOGRITHMEN DER
C     FAKULTAETEN
C
C     M. UNKELBACH 1989
C     LETZTE AENDERUNG: 06.02.89
C
C
      INTEGER JW1, JW2, JW3, MW1, MW2, MW3, JSUM, JSUM1,
     *        JDIF1, JDIF2, JDIF3, JMSUM1, JMSUM2, JMSUM3,
     *        JMDIF1, JMDIF2, JMDIF3, JJM1, JJM2, IMAX, IMIN,
     *        I, J1, J2, J3, M1, M2
C
      DOUBLE PRECISION FAKLN, CLGH
C
      COMMON /COMY/ FAKLN(0:99)
C     FAKLN(I) = LOG(I!)
C
C
C
C
      JW1=J1
      JW2=J2
      JW3=J3
      MW1=M1
      MW2=M2
C
C     CHECK, OB CLG = 0
      CLG=0.
      IF (JW1.LT.IABS(MW1)) RETURN
      IF (JW2.LT.IABS(MW2)) RETURN
      IF (JW3.GT.JW1+JW2.OR.JW3.LT.IABS(JW1-JW2)) RETURN
      MW3=MW1+MW2
      IF (JW3.LT.IABS(MW3)) RETURN
      JMSUM1=JW1+MW1
      JMSUM2=JW2+MW2
      JMSUM3=JW3+MW3
      IF (MOD(JMSUM1,2).EQ.1) RETURN
      IF (MOD(JMSUM2,2).EQ.1) RETURN
      IF (MOD(JMSUM3,2).EQ.1) RETURN
C
C
      JSUM=(JW1+JW2+JW3)/2
      JSUM1=JSUM+1
      JDIF1=JSUM-JW1
      JDIF2=JSUM-JW2
      JDIF3=JSUM-JW3
C
      IF (IABS(MW1)+IABS(MW2).EQ.0) GOTO 100
C
C     NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      JMSUM1=JMSUM1/2
      JMDIF1=JMSUM1-MW1
      JMSUM2=JMSUM2/2
      JMDIF2=JMSUM2-MW2
      JMSUM3=JMSUM3/2
      JMDIF3=JMSUM3-MW3
      JJM1=JDIF1+JMDIF1
      JJM2=JDIF3-JMDIF1
      IMIN=MAX0(0,-JJM2)
      IMAX=MIN0(JMDIF1,JMDIF3)
C
      CLGH=0.
      DO 50, I=IMIN, IMAX
       CLGH=CLGH+DBLE(1-2*MOD(I,2))*
     *     EXP(FAKLN(JMSUM1+I)+FAKLN(JJM1-I)-FAKLN(I)-FAKLN(JMDIF1-I)-
     *         FAKLN(JMDIF3-I)-FAKLN(JJM2+I))
50    CONTINUE
C
      IF (IMIN.GT.IMAX) CLGH=1.
      CLGH=CLGH*EXP((FAKLN(JDIF3)+FAKLN(JMDIF1)+FAKLN(JMDIF2)+
     *             FAKLN(JMDIF3)+FAKLN(JMSUM3)-FAKLN(JSUM1)-
     *             FAKLN(JDIF1)-FAKLN(JDIF2)-FAKLN(JMSUM1)-
     *             FAKLN(JMSUM2)+FAKLN(JW3+1)-FAKLN(JW3))*.5)
      CLG=CLGH*DBLE(1-2*MOD(JMDIF1,2))
C
C     ENDE DER BERECHNUNG FUER NORMALE CLEBSCH-GORDAN-KOEFFIZIENTEN
      RETURN
C
C
C
100   CONTINUE
C     PARITAETSCLEBSCH
C
      IF (MOD(JSUM,2).EQ.1) RETURN
C
      CLGH=EXP((FAKLN(JDIF1)+FAKLN(JDIF2)+FAKLN(JDIF3)-FAKLN(JSUM1)+
     *         FAKLN(JW3+1)-FAKLN(JW3))*.5+
     *        FAKLN(JSUM/2)-FAKLN(JDIF1/2)-FAKLN(JDIF2/2)-
     *        FAKLN(JDIF3/2))
      CLG=CLGH*DBLE(1-2*MOD((JSUM+JW1-JW2)/2,2))
C
C
C     ENDE DER RECHNUNG FUER PARITAETSCLEBSCH
      RETURN
      END
      FUNCTION F6J(JD1,JD2,JD3,LD1,LD2,LD3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I F6J FUNCTION CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     ANGULAR MOMENTUM COUPLING TESTS FOR 6J COEFFICIENT
      F6J=0.0
      IF(J1.LT.0 .OR. J2.LT.0 .OR. J3.LT.0) RETURN
      IF(L1.LT.0 .OR. L2.LT.0 .OR. L3.LT.0) RETURN
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J1+L2+L3,2).NE.0) RETURN
      IF(L3.GT.J1+L2 .OR. L3.LT.ABS(J1-L2)) RETURN
      IF(MOD(L1+J2+L3,2).NE.0) RETURN
      IF(L3.GT.L1+J2 .OR. L3.LT.ABS(L1-J2)) RETURN
      IF(MOD(L1+L2+J3,2).NE.0) RETURN
      IF(J3.GT.L1+L2 .OR. J3.LT.ABS(L1-L2)) RETURN
      F6J=S6J(J1,J2,J3,L1,L2,L3)
      RETURN
      END
      FUNCTION F9J(JD1,JD2,JD3,JD4,JD5,JD6,JD7,JD8,JD9)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     F9J VERSION I  CALLS S6J  FORTRAN IV
C     VEREINFACHT 27.9.95 H.M.H.
      DIMENSION KN(6),KX(6),NN(6)
      J1=JD1   
      J2=JD2  
      J3=JD3 
      J4=JD4
      J5=JD5
      J6=JD6
      J7=JD7
      J8=JD8
      J9=JD9
      F9J= 0.0
C     ANGULAR MOMENTUM COUPLING TESTS FOR 9J COEFFICIENT 
      IF(MOD(J1+J2+J3,2).NE.0) RETURN
      IF(J3.GT.J1+J2 .OR. J3.LT.ABS(J1-J2)) RETURN
      IF(MOD(J4+J5+J6,2).NE.0) RETURN
      IF(J6.GT.J4+J5 .OR. J6.LT.ABS(J4-J5)) RETURN
      IF(MOD(J7+J8+J9,2).NE.0) RETURN
      IF(J9.GT.J7+J8 .OR. J9.LT.ABS(J7-J8)) RETURN
      IF(MOD(J1+J4+J7,2).NE.0) RETURN
      IF(J7.GT.J1+J4 .OR. J7.LT.ABS(J1-J4)) RETURN
      IF(MOD(J2+J5+J8,2).NE.0) RETURN
      IF(J8.GT.J2+J5 .OR. J8.LT.ABS(J2-J5)) RETURN
      IF(MOD(J3+J6+J9,2).NE.0) RETURN
      IF(J9.GT.J3+J6 .OR. J9.LT.ABS(J3-J6)) RETURN
      KN(1)=MAX0(IABS(J2-J6),IABS(J1-J9),IABS(J4-J8))
      KN(2)=MAX0(IABS(J2-J7),IABS(J5-J9),IABS(J4-J3))
      KN(3)=MAX0(IABS(J6-J7),IABS(J5-J1),IABS(J8-J3))
      KN(4)=MAX0(IABS(J6-J1),IABS(J2-J9),IABS(J5-J7))
      KN(5)=MAX0(IABS(J2-J4),IABS(J3-J7),IABS(J6-J8))
      KN(6)=MAX0(IABS(J3-J5),IABS(J1-J8),IABS(J4-J9))
      KX(1)=MIN0(J2+J6,J1+J9,J4+J8)
      KX(2)=MIN0(J2+J7,J5+J9,J4+J3)
      KX(3)=MIN0(J6+J7,J5+J1,J8+J3)
      KX(4)=MIN0(J1+J6,J2+J9,J5+J7)
      KX(5)=MIN0(J2+J4,J3+J7,J6+J8)
      KX(6)=MIN0(J3+J5,J1+J8,J4+J9)
      DO 35 K=1,6
   35 NN(K)=KX(K)-KN(K)
      KSIGN=1
      I=MIN0(NN(1),NN(2),NN(3),NN(4),NN(5),NN(6))
      DO 40 K=1,6
      IF(I-NN(K))40,50,40
   40 CONTINUE
   50 KMIN=KN(K)+1
      KMAX=KX(K)+1
      GO TO(130,52,53,54,55,56),K
   52 J=J1
      J1=J5
      J5=J
      J=J3
      J3=J8
      J8=J
      J=J6
      J6=J7
      J7=J
      GO TO 130
   53 J=J2
      J2=J7
      J7=J
      J=J3
      J3=J4
      J4=J
      J=J5
      J5=J9
      J9=J
      GO TO 130
   54 J=J1
      J1=J2
      J2=J
      J=J4
      J4=J5
      J5=J
      J=J7
      J7=J8
      J8=J
      GO TO 120
   55 J=J1
      J1=J3
      J3=J
      J=J4
      J4=J6
      J6=J
      J=J7
      J7=J9
      J9=J
      GO TO 120
   56 J=J2
      J2=J3
      J3=J
      J=J5
      J5=J6
      J6=J
      J=J8
      J8=J9
      J9=J
  120 KSIGN=(1-MOD(J1+J2+J3+J4+J5+J6+J7+J8+J9,4))
C     SUMMATION OF SERIES OF EQUATION (2)  
  130 SUM=0.0                             
      SIG=(-1)**(KMIN-1)*KSIGN
      FLK=KMIN                           
      DO 200 K=KMIN,KMAX,2              
      TERM=FLK*S6J(J1,J4,J7,J8,J9,K-1)*S6J(J2,J5,J8,J4,K-1,J6)
     1*S6J(J3,J6,J9,K-1,J1,J2)
      FLK=FLK+2.0                    
  200 SUM=SUM+TERM                    
      F9J=SUM*SIG
      RETURN                       
      END                         
      FUNCTION S6J(JD1,JD2,JD3,LD1,LD2,LD3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     VERSION I  FORTRAN IV
      DIMENSION MA(4),MB(3),MED(12)
      COMMON /FACT/FL(322),NCALL
      DATA NCALL/1/
      J1=JD1
      J2=JD2
      J3=JD3
      L1=LD1
      L2=LD2
      L3=LD3
C     DETERMINE WHETHER TO CALCULATE FL(N) S
      IF(NCALL.EQ.0) GOTO 15
      NCALL=0
C     CALCULATE FL(N) S
      FL(1)=0.0
      FL(2)=0.0
      DO 50 N= 3,322
      FN=N-1
   50 FL(N)=FL(N-1)+LOG(FN)
   15 MED(1)=(-J1+J2+J3)/2
      MED(2)=(+J1-J2+J3)/2
      MED(3)=(+J1+J2-J3)/2
      MED(4)=(-J1+L2+L3)/2
      MED(5)=(+J1-L2+L3)/2
      MED(6)=(+J1+L2-L3)/2
      MED(7)=(-L1+J2+L3)/2
      MED(8)=(+L1-J2+L3)/2
      MED(9)=(+L1+J2-L3)/2
      MED(10)=(-L1+L2+J3)/2
      MED(11)=(+L1-L2+J3)/2
      MED(12)=(+L1+L2-J3)/2
      MA(1)=MED(1)+MED(2)+MED(3)
      MA(2)=MED(4)+MED(5)+MED(6)
      MA(3)=MED(7)+MED(8)+MED(9)
      MA(4)=MED(10)+MED(11)+MED(12)
      MB(1)=MA(1)+MED(12)
      MB(2)=MA(1)+MED(4)
      MB(3)=MA(1)+MED(8)
C     DETERMINE MAXIMUM OF (J1+J2+J3),(J1+L2+L3),(L1+J2+L3),(L1+L2+J3)
      MAX=MA(1)
      DO 30 N=2,4
      IF (MAX-MA(N)) 20,30,30
   20 MAX=MA(N)
   30 CONTINUE
C     DETERMINE MINIMUM OF (J1+J2+L1+L2), (J2+J3+L2+L3),(J3+J1+L3+L1)
      MIN=MB(1)
      DO 51 N=2,3
      IF (MIN-MB(N)) 51,51,40
   40 MIN=MB(N)
   51 CONTINUE
      MINH=MIN
      KMAX=MIN-MAX
      MINP1=MIN+1
      MINI  =MINP1-MA(1)
      MIN2=MINP1-MA(2)
      MIN3=MINP1-MA(3)
      MIN4=MINP1-MA(4)
      MIN5=MINP1+1
      MIN6=MB(1)-MIN
      MIN7=MB(2)-MIN
      MIN8=MB(3)-MIN
      UK=1.E-15
      S=1.0E-15
      IF (KMAX) 65,65,55
   55 DO 60 K=1,KMAX
      UK=-UK*DBLE(MINI-K)*DBLE(MIN2-K)*DBLE(MIN3-K)*DBLE(MIN4-K)/
     1 (DBLE(MIN5-K)*DBLE(MIN6+K)*DBLE(MIN7+K)*DBLE(MIN8+K))
C     CUT OFF SERIES AT 1.0D-25
      IF(ABS(UK)-1.E-25) 65,60,60
   60 S=S+UK
   65 S=S*1.0E+15
C     CALCULATE DELTA FUNCTIONS
      DELOG=0.0
      DO 70 N=1,12
      NUM=MED(N)
   70 DELOG=DELOG+FL(NUM+1)
      NUM1=MA(1)+2
      NUM2=MA(2)+2
      NUM3=MA(3)+2
      NUM4=MA(4)+2
      DELOG=DELOG-FL(NUM1)-FL(NUM2)-FL(NUM3)-FL(NUM4)
      DELOG=0.5*DELOG
      ULOG=FL(MIN5)-FL(MINI)-FL(MIN2)-FL(MIN3)-FL(MIN4)-FL(MIN6+1)-
     1   FL(MIN7+1)-FL(MIN8+1)
      PLOG=DELOG+ULOG
      P=EXP (PLOG)
      S6J=P*S
      IF(MOD(MINH,2).NE.0)  S6J=-S6J
      RETURN
      END
