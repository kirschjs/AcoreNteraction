      PROGRAM SPOLE 
      IMPLICIT REAL*8(A-H,O-Z)
C
C
C     MIT DISTORTIONSKANAELEN UND RELATIVISTISCHEN ASYMPTOTISCHEN BEITRAEGEN
C
C     REDUZIERTE MASSE FUER UNTERSCHIEDLICH SCHWERE TEILCHEN,REDM ENTHAELT H2M
C     RELATIVISTISCHE KINEMATIK MOEGLICH
C     11.8.89 AUFTEILUNG IN OFFENE UND DISTORTIONSKANAELE H.M.H.
C     24.01.90  DIMENSIONIERUNG VON NZBMAX UND NDIM GEAENDERT  M.U.
C     22.03.90  DIMENSIONIERUNG VON NDIM GEAENDERT UND IN HDIGAG NZPARM
C               IN NDIMX UMBENANNT UND UMDIMESNIONIERT  M.U.
C     12.4.90   NORMIERUNG DER WELLENFUNKTION FUER RELATIVISTIK GEAENDERT H.M.H.
C     17.4.90   AUSGABE AUF NELMA GEAENDERT, FUER ELECTROMAGNETISCHE OPERATOREN
C               MUSS IPLO=0 SEIN, AUSGABE DER WELLENFUNCTION MIT IPLO.GT.0
C               AUCH AUF TAPE8=NELMA H.M.H.
C     20.4.90   FEHLER IN WEFNOR BESEITIGT H.M.H.
C     1.8.90   RELATIVISTISCHE ASYMPTOTIK EINGEBAUT H.M.H.
c     17.5.91  BACKGROUNDPHASE EINGEBAUT H.M.H
C     13.3.92  ZUSAETZLICHES TAPE12 ZUM PLOTTEN DER DIAGONALPHASEN H.M.H.
C     26.10.94 KRITERIUM FUER STREICHEN VON EIGENVEKTOREN GEAENDERT H.M.H.
C     11.2.03  UEBERGABE DER WELLENFUNKTION AN ELEKTROMAGNETISCHE KETTE
C              KORRIGIERT, NORMIERUNG WIE IN GLEICHUNG 3.19 DIPLOMARBEIT
C              AXEL THIELMANN:u_l=i/2(h- -S*h+), UEBERGEBEN WERDEN DIE
C              konjugierten ENTWICKLUNGSKOEFFIZIENTEN H.M.H.
C     20.2.03  INTEGRATION ZUSAMMENGEFASST H.M.H.
C     23.6/03  BEI POLSUCHE NUR EIN S-MATRIX AUFRUF H.M.H
C     19.5.04  AUFRUF VON COULF NUN F_L UND H+_L H.M.H.
C     24.9.04  ROUTINE CLG IN SUB RRANDB DURCH ZGET ERSETZT M.T.
C     12.10.04 STREICHEN VON EV EINGEARBEITET IN RRANDB,DEKOF,TRAFO M.T.
C     10.5.05  WELLENFUNKTION DURCH INVERSION BESTIMMT IN DEKOF H.M.H.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C                                                                      C
C  DAS PROGRAMM S-POLE BERECHNET DIE POLSTELLEN  DER S-MATRIX IN DER   C
C  UNTEREN KOMPLEXEN ENERGIEHALBEBENE (UNPHYSIKALISCHES BLATT) MIT     C
C  EINER GRADIENTENSUCHE (NOPT = 1 ODER 2)                             C
C  UND EBENSO DIE RESIDUEN DER S-MATRIX AN DER POLSTELLE(NOPT=2 ODER 3)C
C  ENERGIEN KÖNNEN WIE ZUVOR FÜR NOPT = 0 BERECHNET WERDEN ODER AUCH   C
C  IM KOMPLEXEN MIT NOPT = -1                                          C
C                                                                      C
C     NOPT =-1 NZAEN*NZAENI ENERGIEN WERDEN GERECHNET                  C
C     NOPT = 0 NZAEN ENERGIEN WERDEN GERECHNET (ALTES PROGRAMM)        C
C     NOPT = 1 NUR GRADIENTENSUCHE LAEUFT                              C
C     NOPT = 2 GRADIENTENSUCHE + RESIDUENBESTIMMUNG                    C
C     NOPT = 3 NUR RESIDUENBESTIMMUNG                                  C
C                                                                      C
C  VORGENOMMENE AENDERUNGEN WERDEN IM FOLGENDEN ANGEGEBEN:             C
C                                                                      C
C     - SUBROUTINE FW: ASYMPTOTISCHE BEITRAEGE GEAENDERT               C
C     - SUBROUTINE YINT: BERECHNUNG DER NEUEN INTEGRALE                C
C     - SUBROUTINE ENTWIN: UEBERGABE DER BEITRAEGE UND APPROXIMATION   C
C                          DURCH GAUSSINTEGRALE MIT H+,H-              C
C                          => NEUE ENTWICKLUNGSKOEFFIZIENTEN (DAR)     C
C                             JETZT KOMPLEX                            C
C     - SUBROUTINE VERGLE GESTRICHEN                                   C
C     - SUBROUTINE SMATRI ERSETZT DURCH AMATRI                         C
C                         (ZUR RUECKTRAFO VON S ZU A)                  C 
C     - SUBROUTINE RRANDB: BERECHNUNG DER S-MATRIX                     C
C              =>NUR EINE METHODE,                                     C
C              S WIRD DIREKT IN PROGRAM MAIN UEBERNOMMEN               C
C              EIGENPHASEN NACH RUECKTRAFO AUS A-MATRIX BESTIMMT       C
C              B-METHODE VOLLSTAENDIG GESTRICHEN (JFL),                C
C              KONTROLLMATRIX MIT S KOMPLEXKONJUGIERT                  C
C      - SUBROUTINE COULF GEGEN COULCC VON IAN THOMPSON                C
C              (http://www.ph.surrey.ac.uk/npg/people/ithompson/)      C
C        AUSGETAUSCHT, NUR REALTEILE VON F UND G                       C
C      - SUBROUTINE WRIMATC: ZUR AUSGABE KOMPLEXER ME'S                C
C              (UEBERGABE ME'S MIT NAD4 = 3 AUSGEBEN)                  C
C      - IN PROGRAM MAIN: ME'S SIND NUN DIREKT DIE MATRIXELEMENTE      C
C              DER HANKELFUNKTIONEN                                    C
C              => VW,PQ SIND NUN: VW,VW1,PQ0,PQ1,PQ2,PQ3               C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C      HIERAUS ERGIBT SICH FOLGENDE NEUE INPUT DATEI:                  C
C                                                                      C
C           INPUTSPOLE                                                 C
C                                                                      C
C           FORMAT (20I3) (6E12.4)                                     C
C                                                                      C
C ZEILE                                                                C
C 1        11  3  0  0 -1  0  0  0  NOPT  NOPT2  NOPT3  NMAT1  NMAT2   C
C 2       NZAEN  (NZAENI)  NZPWY                                       C
C 3       RE(E1)      IM(E1)      E2         FAKT      ZFAKT           C
C 4       DELTA       DELTADIFF   ABBR                                 C
C 5       BUM(1,..NZKB)                                                C
C 6       BETA2(1,..NZKB)                                              C
C 7         NAD1,..,NAD10                                              C
C 8       NZRW                                                         C
C 9       FRR:0.06,RHG:8.0,RHF:1.0
C 10         1  2  3  4   (ISTR)                                       C   
C 11      RRAD(1,..NZKB):4,9                                           C
C 12      FAKT1(1,..NZKB):  0.0                                        C
C 13      FAKT2(1,..NZKB):  0.001                                      C 
C 14      FAKT3(1,..NZKB):  0.3                                        C
C 15       1.0         1.0                                             C
C                                                                      C 
C     - NEU IST DIE ZEILE 4; ZEILE 1, 2 UND 3 SIND ABGEAENDERT.        C
C                                                                      C 
C                                                                      C
C    - FUER NOPT=-1: ZEILE 2 SIND DIE ENERGIEN, DIE ZU RECHNEN SIND    C
C                            => NZAEN  NZAENI                          C
C                    (NZPWY SIND DIE KANAELE, DIE ZU RECHNEN SIND)     C
C                    ZEILE 3 SIND DIE KOMPLEXE ANFANGSENERGIE UND      C 
C                            DIE SCHRITTWEITE (RE:E2,IM:FAKT)          C
C                            ZFAKT WIRD NICHT EINGELESEN               C
C                    ZEILE  4 WIRD NICHT EINGELESEN                    C
C                                                                      C
C    - FUER NOPT= 0: BLEIBT DER INPUT UNVERÄNDERT                      C
C                    AUSSER: ZEILE 2 => NZAEN NZPWY                    C
C                            (ZU RECHNENDE ENERGIEN UND KANAELE)       C
C                            ZEILE 4 ENTFAELLT                         C
C                                                                      C
C    - FUER NOPT= 1: ZEILE 2 NZAEN SIND DIE MAXIMAL ERLAUBTEN          C
C                            ITERATIONEN                               C
C                    ZEILE 3 SIND DIE KOMPLEXE ANFANGSENERGIE          C
C                            (RE(E1),IM(E1)),SCHRITTWEITE              C
C                            BEI DER GRADIENTENSUCHE (E2),             C
C                            VERFEINERUNGSFAKTOR (FAKT) DURCH          C
C                            DEN GETEILT WIRD, WENN UEBER DAS          C
C                            MINIMUM HINAUSGEGANGEN WURDE,             C
C                            ABBRUCHBEDINGUNG (ZFAKT) WOBEI DIE        C
C                            DETERMINANTE DER S-MATRIX                 C
C                            KLEINER ALS DIESER WERT SEIN MUSS         C
C                    ZEILE 4 WIRD NICHT EINGELESEN                     C 
C                                                                      C
C    - FUER NOPT= 2: ZEILE 2 NZAEN ITERATIONEN                         C
C                    ZEILE 3 SIND DIE KOMPLEXE ANFANGSENERGIE          C
C                            (RE(E1),IM(E1)),SCHRITTWEITE              C
C                            BEI DER GRADIENTENSUCHE (E2),             C
C                            VERFEINERUNGSFAKTOR (FAKT) DURCH          C 
C                            DEN GETEILT WIRD, WENN UEBER DAS          C
C                            MINIMUM HINAUSGEGANGEN WURDE,             C
C                            ABBRUCHBEDINGUNG (ZFAKT) WOBEI DIE        C
C                            DETERMINANTE DER S-MATRIX                 C
C                            KLEINER ALS DIESER WERT SEIN MUSS         C 
C                    ZEILE 4 SIND DIE UMGEBUNG +-DELTA, DIE            C
C                            SCHRITTWEITE DELTADIFF UND DIE            C
C                            ABBRUCHBEDINGUNG ABBR                     C
C                            => DELTA WIRD SOLANGE VERGROEßERT,        C
C                               BIS DER INTERPOLIERTE WERT             C 
C                               FUER DAS RESIDUUM KONVERGIERT          C
C                            MIT NZAENI AUS ZEILE 2 KANN ENTSCHIEDEN   C
C                            WERDEN, OB DIE STEIGUNG                   C
C                            BETRACHTET WIRD (NZAENI=0) ODER DIE       C
C                            KONVERGENZ DES RESIDUUMS                  C
C                            SELBST (NZAENI=1),(ALTERNATIVE MIT        C
C                            NZAENI=2 WIRD WIEDER AUSGEBAUT)           C
C                                                                      C
C    - FUER NOPT= 3: ZEILE 2 WIRD NICHT EINGELESEN                     C
C                    ZEILE 3 SIND DIE KOMPLEXE ANFANGSENERGIE          C 
C                            (RE(E1),IM(E1))                           C
C                            DER REST WIRD NICHT EINGELESEN            C
C                    ZEILE 4 WIE FUER NOPT=2                           C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C  WEITERE ZU ERKLAERENDE PARAMETER IN ZEILE 1:NOPT2,NOPT3,NMAT1,NMAT2 C
C                                                                      C
C  FUER NOPT2= 0 : RESONANZSUCHE                                       C
C              1 : BOUNDSTATE SUCHE                                    C
C              2 : VIRTUALSTATE SUCHE                                  C
C              3 : INDIVIDUELLE EINSTELLUNG                            C
C                                                                      C
C  FUER NOPT3 NE 0: (NMAT1,NMAT2) ELEMENT DER S-MATRIX WIRD GERECHNET  C
C                                                                      C
C  IM FALLE VON NOPT2=3 WIRD EINE ZUSAETZLICHE ZEILE ZWISCHEN DEN      C
C  JETZIGEN ZEILEN 4 UND 5 EINGELESEN (FORMAT(20I3))                   C
C  DIE PARAMETER NSIGMA=+-1 GEBEN DANN DIE RIEMANNSCHEN BLAETTER AN,   C
C  AUF DENEN ZU SUCHEN IST (+=OBERE, -=UNTERE HALBEBENE)               C
C                                                                      C
C                                                                      C    
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C NICHT MOEGLICH: RELATIVISTISCHE RECHNUNG (FWREL UND YINT ZU AENDERN) C
C                 EIGENVEKTOREN STREICHEN  (RRANDB ZU AENDERN)         C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  FUER ELEKTROMAGNETISCHE UEBERGAENGE (NELMA=TAPE8), IELMA.GE.1 , IWEFU.GE.1
C                                      IPLO=0
C
C  AUSGABE DER KOEFFIZIENTEN CWF MIT IWEFU.GE.2
C  AUSGABE DER WELLENKUNTION MOEGLICH MIT IWEFU.GE.3
C  PLOT DER WELLENFUNKTION MIT IWEFU.GE.1 UND IPLO.GE.1
C
      INCLUDE 'par/verma'
      PARAMETER(NDIMP=NDIM*NDIM)
      PARAMETER(IPUNKT=3)
C     NZKMAX: MAXIMALE ANZAHL DER KANAELE
C     NZKBMA: MAXIMALE ANZAHL DER OFFENEN KANAELE
C     NZPARM:    "       "     "  RADIALPARAMETER
C     NZEWMA:    "       "     "  KANALENERGIEN
C     NZRWMA:    "       "     "  STUETZSTELLEN
C     NDIM  :    "       "     "  GERECHNETE RADIALPARAMETER*
C             KANAELE (NDIM.LE.NZPARM*NZKMAX)
C
      COMPLEX*16 SMAT,CV,FUK,DAR,SP,SR,SC,SQ,SS,ST,SPT,VW,VW1,SMATFAKT, 
     *           PQ0,PQ1,PQ2,PQ3,ENERGI,EMOM,EH,EW,E1,EK,ETA,
     *           DSM,DETSMAT,EWERT,DELTA,RESMAT,RESID,EWW,RESID2,
     *           RESDIFF,EWEI,CV2, WEFNOR, EWITER(0:NZEWMA), EWNEU,
     *           CI, CNULL, CWF1
C
C
      CHARACTER JTX*4, NTEX*3, IFRAK*2, ISMAT*7
C
      COMMON /PLATZ/ VV(NDIMP)
C
      COMMON /RRC/ AM(NZKBMA,NZKBMA), ST(NDIM,NZKBMA), SS(NDIM,NZKBMA),
     *             SP(NZKBMA,NZKBMA), SQ(NZKBMA,NZKBMA), RQ(NDIM),
     *             SR(NZKBMA,NZKBMA), SC(NZKBMA,NZKBMA), ENERGI
C
      COMMON /ENT/ RHF, DAR(NDIM,2),NZQ(NZKMAX+1)
C
      COMMON /TUT/ KSZE
C
      COMMON /APC/ FRR, BUM(NZKBMA), NZP(NZKMAX), WNORM(NZKMAX),
     *             NZKA, NZKB
C
      COMMON /NA/ NAR(NZPARM,NZKMAX)
C
      COMMON /REGC/ BETA0, FAK(37)
C
      COMMON /PLO/ CWF1(NZKBMA,NZKMAX,NZPARM),EMOM(NZKBMA),
     *  NENTK(NZKMAX), MTDLL1
C
      COMMON /COUL/ RHG, WEFNOR(NZKBMA), EK(NZKBMA), ETA(NZKBMA)
C
      COMMON /NAD0/ NAD5, NAD6, NAD7, IBAC
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      COMMON /EVEC/ EV(NDIM,NDIM)
C
      COMMON /RMATSTO/ SWCA(NZPARM,NZKMAX), 
     *       ASYHAM(NZPARM,NZPARM,NZKMAX), ASYNOR(NZPARM,NZPARM,NZKMAX),
     *       E2K(NZKMAX), BNORM, J_RMAT
C
      COMMON /RELAS/ FZ12,FFZ12,NR
C
      COMMON  REDM(NZKMAX), KL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA, IWEFU, NBAND9, IPLO, LWERT(NZKMAX),RRAD(NZKMAX)
C
      COMMON /nop/RMA(NZKMAX),NOPT
C
      COMMON /DUMMY/ EN(NDIM,NDIM),HA(NDIM,NDIM),
     1          ENEV(NDIM,NDIM),HAEV(NDIM,NDIM),
     1          ENALL(NDIM,NDIM),HAALL(NDIM,NDIM),
     1          ZHH(NDIM,NDIM)
C
      DIMENSION EW(IPUNKT),EBIN(NZKMAX),F(0:IPUNKT),
     *          EWE(NZEWMA),
     *          PQ0(NZKBMA),PQ2(NZKBMA),VW(NDIM),SMAT(NZKBMA,NZKBMA,2),
     *          CV(NZKBMA), BETA2(NZKBMA),PQ1(NZKBMA),PQ3(NZKBMA),
     *          PKMAT(NZKBMA,NZKBMA), MASSE(2,NZKMAX),MLAD(2,NZKMAX),
     *          PHMAT(NZKBMA,NZKBMA), RHUM(2,NZKMAX),VW1(NDIM),
     *          JWERT(NZKMAX), 
     *          IPIV(NDIM), CV2(NZKBMA),
     *          RESID(NZKBMA,NZKBMA),RESID2(NZKBMA,NZKBMA), 
     *          RESDIFF(NZKBMA,NZKBMA),EWEI(NZEWMA,NZEWMA),
     *          SMATFAKT(NZKBMA,NZKBMA),RESMAT(NZKBMA,NZKBMA,3),
     *          PKMAT2(NZKBMA,NZKBMA),PHMAT2(NZKBMA,NZKBMA),
     *          EVPKMAT2(NZKBMA,NZKBMA),
     *          XMAT(NZKBMA,NZKBMA), RGAMQ(NZKBMA),
     *          NSIGMA(NZKBMA),
     *          NBLATT(NZKBMA)
      DIMENSION FC1(8*NDIM), QR(NDIM), IWORK(5*NDIM), IFAIL(NDIM)
      DIMENSION ISTR(NZKBMA), SPT(NZKBMA,NZKBMA)
      DIMENSION JTX(4), NTEX(4), IFRAK(7), ISMAT(3)
      COMPLEX*16 ZH,ZBM1,ZBM2,FZ1,FZ2,FFZ1,FFZ2,FZ12,
     *           FFZ12,HILF
      CHARACTER*1 TRANSA,TRANSB
      CHARACTER*1 JOBZ,UPLO, RANGE      
C
      DATA IFRAK /'N ','H ','HE','LI','BE','B ','C '/
      DATA JTX/'N*VE','H*VE','VECT','SS,T'/
      DATA NTEX /'MP ','PP ', 'MM','PM'/
      DATA ISMAT/'DIREKTE','INVERSE','BESSERE'/
      DATA CI/(0.D0,1.D0)/, CNULL/(0.D0,0.D0)/
C
      OPEN(UNIT=3,FILE='SCRATCH',STATUS='UNKNOWN',FORM='UNFORMATTED')
      OPEN(UNIT=5,FILE='INPUTSPOLE',STATUS='OLD')
      OPEN(UNIT=6,FILE='OUTPUTSPOLE')
      OPEN(UNIT=12,FILE='PHAOUT',STATUS='UNKNOWN',FORM='FORMATTED')
      OPEN(UNIT=13,FILE='POLAUS')
      OPEN(UNIT=11,FILE='ENOUT',STATUS='OLD',FORM='UNFORMATTED')
C
      IF (NDIMP.LT.MAX0(NDIM*NDIM,NZPARM*NZPARM,2*NZRWMA*NZPARM,
     *                  2*NDIM*NZKMAX,10*NZKMAX*NZKMAX+2*NDIM))
     *                  STOP 1
      INPUT=5
      NPUN=12
      NELMA= 8
      NBAND9=9
      WRITE(NOUT, 9999)
9999  FORMAT('1  S-POLE VERSION VOM 20.02.03, HARDCORE PHASEN !!')
      PHI=3.141592
      HQUERC=197.32858
      READ(INPUT,1000) NBAND2,NBAND3,MZREK,NUMPR,IELMA,IWEFU,IPLO
     $  ,MTDLL1,NOPT,NOPT2,NOPT3,NMAT1,NMAT2,J_RMAT
      IF(IELMA.GT.0.AND.IPLO.NE.0) STOP 'EINGABE 1'
      IF(J_RMAT.GT.0 .AND. IWEFU.EQ.0) STOP 'IWEFU INCORRECT'
C
C     default=11
C     ENDMAT OUTPUT ENOUT
      REWIND NBAND2
      IF(IELMA.GT.0) THEN
      OPEN(UNIT=8,FILE='ELMA_SOUT',STATUS='UNKNOWN',FORM='UNFORMATTED')
      ENDIF
      IF(IPLO.GT.0) THEN
      OPEN(UNIT=9,FILE='NORMOUT',STATUS='UNKNOWN',FORM='UNFORMATTED')
      REWIND NBAND9
      ENDIF
      REWIND NBAND3
C     H2M = (2.72099*0.529172*137.0373)**2/(938.211+939.505)
1078  FORMAT (1H1)
      IF(NOPT.EQ.0) THEN
      READ (INPUT,1000) NZAEN,NZPWY
      ELSE
      READ (INPUT,1000) NZAEN,NZAENI,NZPWY
      ENDIF   
       IF (NZAEN.GT.NZEWMA) STOP 5
C       NZAEN LE NZEWMA
C       NZPWY NE 0,NUR DIE ERSTEN NZPWY KANAELE BERUECKSICHTIGT
 1000 FORMAT (20I3)
C     
      READ(INPUT,1001) E1,E2,FAKT,ZFAKT
      IF(NOPT.EQ.0) THEN
      WRITE(NOUT,*) 'STARTWERT=',DREAL(E1),' SCHRITTWEITE=',DIMAG(E1)
      ELSE
      WRITE(NOUT,*) 'REAL(E),IMAG(E)=(',E1,' ), SCHRITT=',E2,
     *    'FAKT=',FAKT,' ZFAKT=',ZFAKT
      ENDIF   
C
      IF(NOPT.EQ.0) GOTO 807
      READ(INPUT,1001) DELTAPOL,DELTADIFF,ABBR
      WRITE(NOUT,*) 'DELTAPOL,DELTADIFF,ABBR',  DELTAPOL,DELTADIFF
     *   ,ABBR
 807  CONTINUE
C
 1001 FORMAT (6E12.4)
C
C
       READ (NBAND2) NZKA,JWS,NPARI,NZKB,NR
C
C     NR = 0 NICHTRELATIVISTISCHE KINEMATIK, NR .NE. 0 RELATIVISTISCH
      WRITE(NOUT,1003) NZKA,NZKB,JWS
1003  FORMAT(' VON',I4,' KANAELEN WERDEN',I4,' BERUECKSICHTIGT ',
     1'ZUM DREHIMPULS',I4,'/2')
      IF(NR.NE.0) WRITE(NOUT,1004)
1004  FORMAT(' ES WIRD RELATIVISTISCHE KINEMATIK VERWENDET')
      DO 10 I=1,NZKA
      READ(NBAND2) LWERT(I),REDM(I),E2K(I),JWERT(I),MASSE(1,I),
     1  MASSE(2,I),MLAD(1,I),MLAD(2,I),EBIN(I),WNORM(I)
     2 ,RHUM(1,I),RHUM(2,I),BNORM
      RMA(I)=1./(1./DBLE(MASSE(1,I))+1./ DBLE(MASSE(2,I)))
       IF(IELMA.GT.0) WRITE(NELMA) I,LWERT(I),MASSE(1,I),
     1 MASSE(2,I),MLAD(1,I),MLAD(2,I),JWERT(I),JWS, WNORM(I)
10     WRITE(NOUT,3001) LWERT(I),REDM(I),E2K(I),JWERT(I),MASSE(1,I),
     1  MASSE(2,I),MLAD(1,I),MLAD(2,I),EBIN(I),WNORM(I)
     2 ,RHUM(1,I),RHUM(2,I),BNORM
3001  FORMAT(1X,I3,2G15.5,5I3,5G15.5)
      READ (NBAND2) NZQ(NZKA+1),NZPWM,(NZP(I),NZQ(I),I=1,NZKA)
      WRITE(NOUT,1009) NZQ(NZKA+1),NZPWM,(NZP(I),NZQ(I),I=1,NZKA)
1009  FORMAT(I5,I3,(I3,I5,I3,I5,I3,I5,I3,I5,I3,I5,I3,I5,I3,I5,I3,I5))
C
C     INDIVIDUELLE WAHL DER RIEMANN BLAETTER
      IF(NOPT2.NE.3) GOTO 831
      READ(INPUT,1000)(NSIGMA(K),K=1,NZKB) 
      WRITE (NOUT,1000)(NSIGMA(K),K=1,NZKB)
 831  CONTINUE
C
      DO 12 I=1,NZKA
      READ(NBAND2) (NAR(M,I),M=1,NZPWM)
c      write(NOUT,*) (NAR(M,I),M=1,NZPWM)
      DO 11 M=1,NZPWM
11    NAR(M,I)=2*NAR(M,I)
      READ(NBAND2) (PAR(M,I),M=1,NZPWM)
C      write(NOUT,*) 'PAR: ',(PAR(K,I),K=1,NZPWM)
12    CONTINUE
      IF (NZKA.GT.NZKMAX.OR.NZKB.GT.NZKBMA) STOP 7
      IF (NZPWM.GT.NZPARM) STOP 8
       WRITE (NOUT,1002) (WNORM(K),K=1,NZKB)
1002  FORMAT(' NORMIERUNG DER KANAELE',/,(1X,10G12.5))
      IF(IELMA.GT.0) WRITE(NELMA) (EBIN(KH),KH=1,NZKB)
      IF(NZPWY.GT.0) NZKB=NZPWY
      DO 36   K = 1,NZKB
      DO 37   L = 1,NZKB
   37 AM(K,L) = .0
   36 AM(K,K) = 1.0
      NZPWX = NZQ(NZKA+1)
      IF(NZPWX.GT.NDIM) STOP 'NDIM ZU KLEIN'
      READ(INPUT,1001)(BUM(K),K=1,NZKB)
      READ (INPUT,1001) (BETA2(K),K=1,NZKB   )
      READ(INPUT,1000) NAD1,NAD2,NAD3,NAD4,NAD5,NAD6,NAD7,IBAC
C     NAD1   AUSDRUCK IN   0,1,2 ENTWIN
C     NAD2  AUSDRUCK IN APP
C     NAD3 NE 0  WEITERGABE DER S-MATRIX ELEMENTE
C     NAD4 GE 3 AUSDRUCK DER UEBERGABEMATRIZEN
C     NAD5 NE 0 AUSDRUCK VON EIGENPHASEN UND EIGENVECTOREN
C     NAD6 = 0 IST DUMMY PARAMETER
C     NAD7 GT 0 STEUERT DRUCKEN IN RRANDB
C     NAD7 LT 0 NUR DIE BESSERE S-MATRIX WIRD NACH PHAOUT UEBERGEBEN
C     IBAC GT 0 EINLESEN DER KANALRADIEN + BERECHNUNG DER BACKGROUNDPHASEN
      IF (NAD6.NE.0) WRITE (NOUT,5711) NAD6
 5711 FORMAT(' STREICHEN VON EIGENVEKTOREN IST BESEITIGT')
      IF(NOPT.NE. 0 .OR. NAD3.EQ.0) GOTO 71
   71 READ (INPUT,1000)  NZRW
      IF(NZRW.GT.NZRWMA) GOTO 1800
      READ (INPUT,1001) FRR,RHG,RHF
      WRITE (NOUT,1100) NZRW,FRR,RHF
      IF(NAD3.EQ.0) GOTO 60
      READ(INPUT,1000)(ISTR(K),K=1,NZKB)
      WRITE(NOUT,1040)(ISTR(K),K=1,NZKB)
60    IF(IBAC.LE.0) GOTO 61
      READ(INPUT,1001)(RRAD(K),K=1,NZKB)
      WRITE(NOUT,1005)(RRAD(K),K=1,NZKB)
1005  FORMAT(' ZUR BERECHNUNG DIENEN KANALRADIEN',/,5X,10F8.4)
1040  FORMAT(/5X,16H KANALSTRUKTUREN/5X,10I5)
1042  FORMAT(2F12.5,7I3,F12.6,F12.4,I3)
 1100 FORMAT(//42H ZAHL DER STUETZPUNKTE BEI DER INTEGRATION,I4/
     1 ,' ABSTAND DER STUETZPUNKTE FUER QAF: ',F6.4,/,
     2 ' BREITE DER INTEGRATIONSINTERVALLE IN YINT:',F7.4)
61    DO 1700    K = 1,NZKA
 1700 NENTK(K) = -1
      CALL APP(NAD2,BETA2)
      READ(NBAND2) ((EN(M,N),M=1,NZPWX),N=1,NZPWX)
      READ(NBAND2) ((HA(M,N),M=1,NZPWX),N=1,NZPWX)
      READ(NBAND2) ((EV(M,N),M=1,NZPWX),N=1,NZPWX)
       TRANSA='N'
       TRANSB='N'
       EINS=1.D0
       RNULL=0D0
c      call DGEMM(TRANSA,TRANSB,NZPWX,NZPWX,NZPWX,EINS,ha,NDIM,en,NDIM,
c    *            RNULL,haEV,NDIM)
c     write(nout,*)'h-e',((haev(M,N),M=1,NZPWX),N=1,NZPWX)
c      call DGEMM(TRANSA,TRANSB,NZPWX,NZPWX,NZPWX,EINS,EN,NDIM,ha,NDIM,
c    *            RNULL,ENEV,NDIM)
c     write(nout,*)'e-h',((enev(M,N),M=1,NZPWX),N=1,NZPWX)
       CALL DGEMM(TRANSA,TRANSB,NZPWX,NZPWX,NZPWX,EINS,EN,NDIM,EV,NDIM,
     *            RNULL,ENEV,NDIM)
       CALL DGEMM(TRANSA,TRANSB,NZPWX,NZPWX,NZPWX,EINS,HA,NDIM,EV,NDIM,
     *            RNULL,HAEV,NDIM)
C     DA HA UND EN SYMMETRISCH SIND, DUERFEN DIE INDIZES VERTAUSCHT WERDEN
C     DER 2. INDEX GIBT AN, WELCHER EIGENVEKTOR VERWENDET WIRD
      READ (NBAND2)    (RQ(K),K=1,NZPWX)
C      ENERGIEN EINLESEN
C      VORBEREITUNG ZU ENDE
      IF(J_RMAT.EQ.0) GOTO 446
c     rmatrix polbestimmung      
      READ(NBAND2) ((ENALL(M,N),M=1,NZPWX),N=1,NZPWX)
c     write(nout,*)'en1',((ENall(M,N),M=1,NZPWX),N=1,NZPWX)
      READ(NBAND2) ((HAALL(M,N),M=1,NZPWX),N=1,NZPWX)
c     write(nout,*)'en2',((haall(M,N),M=1,NZPWX),N=1,NZPWX)
      DO 720 K1=1,NZKA
      DO 716 M1=1,NZP(K1)
      I=NZQ(K1)+M1
      DO 714 MP1=1,NZP(K1)
      J=NZQ(K1)+MP1
      HAALL(I,J)=HAALL(I,J) - ASYHAM(M1,MP1,K1)
      ENALL(I,J)=ENALL(I,J) - ASYNOR(M1,MP1,K1)
c     write(nout,*)'i,j,m,mp',i,j,m1,mp1,enall(i,j),asynor(m1,mp1,k1)
c     write(nout,*)'i,j,m,mp',i,j,m1,mp1,haall(i,j),asyham(m1,mp1,k1)
714   CONTINUE
716   CONTINUE
718   CONTINUE
720   CONTINUE
      do i=1,nzpwx
      do j=1,nzpwx
      enev(i,j)=enall(i,j)
      if(j.eq.i)enev(i,i)=1.0001*enev(i,i)
      end do
      end do
      ITYPE=1
      JOBZ='V'
      UPLO='U'       
      RANGE='A'
      IL= 1
      IU= NZPWX
      ABSTOL=0.00001
      LWORK=8*NDIM
c     write(nout,*)'en1',((ENall(M,N),M=1,NZPWX),N=1,NZPWX)
c     write(nout,*)'en2',((haall(M,N),M=1,NZPWX),N=1,NZPWX)
      CALL DSYGVX(ITYPE,JOBZ,RANGE,UPLO,NZPWX,HAALL,NDIM,ENev,NDIM,VL,
c     CALL DSYGVX(ITYPE,JOBZ,RANGE,UPLO,NZPWX,HAALL,NDIM,ENALL,NDIM,VL,
     * VU, IL,IU,ABSTOL,MOUT,QR,ZHH,NDIM,FC1,LWORK,IWORK,IFAIL,IERR)
      WRITE (NOUT,1101)
      WRITE (NOUT,1033) (QR(M),M=1,NZPWX)
 1033 FORMAT (1P10E13.5)      
1101  FORMAT(/8X,'EIGENWERTE DES INTERNEN HAMILTONOPERATORS',//) 
      IF(IERR.EQ.0) GOTO 950
      WRITE (NOUT,945) IERR
945   FORMAT('0 DIAGONALISIERUNG FEHLERHAFT, SIEHE LAPACK MANUAL',I10)
      WRITE(NOUT,*) ' NOT CONVERGED AT ',(IFAIL(IX),IX=1,NZPWX)
      STOP 
  950 CONTINUE
      do i=1,nzpwx
        do j=1,nzpwx
        enall(j,1)=0.
        end do
      enall(i,1)=1.
        do k=1,nzpwx
          do j=1,nzpwx
          haall(k,j)=enev(k,j)
          end do
        end do
      call Rlg(haall,enall,haev,nzpwx,i)
      end do
c     write(nout,*)'en**-1',((haev(M,N),M=1,NZPWX),N=1,NZPWX)
      READ(INPUT,1000) NPOL
      DO 445 LPOL=1,NPOL
      DO 444 KLX=1,NZKB
      RGAMQ(KLX)=0.0
      DO 443 M=NZQ(KLX)+1,NZQ(KLX+1)
        do i=1,nzpwx
        RGAMQ(KLX)=RGAMQ(KLX)+SWCA(M-NZQ(KLX),KLX)*HAEV(M,I)*ZHH(I,LPOL)
        END DO
c     write(nout,*)'rgam',RGAMQ(KLX),SWCA(M-NZQ(KLX),KLX)
443   CONTINUE
      RGAMQ(KLX)=RGAMQ(KLX)*SQRT(RRAD(KLX)/REDM(KLX))
c     write(nout,*)'RgamQ',rgamq(klx)
444   CONTINUE      
      WRITE(NOUT,1444) LPOL,(RGAMQ(KLX),KLX=1,NZKB)
1444  FORMAT(' PARTIAL WIDTH AMPLITUDES FOR POLE',I5,/,(10G12.3))      
445   CONTINUE  
      STOP 'ENDE R-MATRIX BESTIMMUNG'
446   CONTINUE      
C
C
      MZAE=0
      JXX=0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                        C  
C     BERECHNUNG VON NZAEN*NZAENI ENERGIEN,(WENN NOPT=-1)                C
C                                                                        C  
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IF(NOPT.NE.-1) GOTO 4748
      IBACK = 4
      IF (NZAEN.GT.NZEWMA) STOP 5
      IF (NZAENI.GT.NZEWMA) STOP 5
      DO 4746 M=1,NZAENI
      DO 4746 K=1,NZAEN
 4746 EWEI(K,M)=E1+DCMPLX((K-1)*E2,(M-1)*FAKT)
      NZAEN2=1
      NZAENI2=0
 4444 IF(NZAENI2.LT.NZAENI) GOTO 4733
      NZAENI2=0
      NZAEN2=NZAEN2+1
      IF(NZAEN2.GT.NZAEN) GOTO 1
 4733 NZAENI2=NZAENI2+1
      REWIND NBAND3
      I = 0
      ENERGI = EWEI(NZAEN2,NZAENI2) + EBIN(1)
      EWERT=EWEI(NZAEN2,NZAENI2) 
c     FUER BOUNDSTATE- UND VIRTUALSTATESUCHE
      IF(NZAEN2.EQ.1) THEN
         DETSBETNEU=1000.
         GOTO 1213
      ENDIF
      IF(NOPT2.NE.1 .AND. NOPT2.NE.2) GOTO 1213
      IF(NZAEN2.GT.2) GOTO 1216
      WRITE(13,2062)
 2062 FORMAT('Sie suchen nach einem Boundstate oder Virtualstate:')
      WRITE(13,2063)
 2063 FORMAT('ITERATION         ENERGIE(RE+IM)        DETSBET(NEU+ALT)')
 1216 STEIG=(DETSBET-DETSBETNEU)/ABS(DETSBET-DETSBETNEU)
      WRITE(13,2031) NZAEN2,EWERT,DETSBET,DETSBETNEU,STEIG
 2031 FORMAT(I3,10X,4G12.6,5X,F12.6)
      IF(DETSBET.LT.DETSBETNEU) GOTO 1215
      WRITE(13,2061) EWNEU,DETSBETNEU
 2061 FORMAT('Das Minimum ist gefunden:',2F12.8,' ,mit dem Wert:',G12.6)
      GOTO 1
 1215 DETSBETNEU=DETSBET
      EWNEU=EWERT
 1213 CONTINUE
c
      GOTO 1112
 4748 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                        C 
C     BERECHNUNG VON NZAEN ENERGIEN (ALTES PROGRAMM) (WENN NOPT=0)       C
C                                                                        C 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IF(NOPT.NE.0) GOTO 4749
      IBACK = 1
      IF (NZAEN.GT.NZEWMA) STOP 5
      EWE(1)=DREAL(E1)
      DO 4747 K=2,NZAEN
 4747 EWE(K)=EWE(K-1)+DIMAG(E1)
      IF(IELMA.GT.0) WRITE(NELMA) NZAEN,(EWE(MH),MH=1,NZAEN)
      NZAEN2=0
 1111 IF(NZAEN2.GE.NZAEN) GOTO 1
      NZAEN2=NZAEN2+1
      REWIND NBAND3
      I = 0
      ENERGI = EWE(NZAEN2) + EBIN(1)
      EWERT=EWE(NZAEN2) 
      GOTO 1112
 4749 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                        C
C     GRADIENTENSUCHE      (WENN NOPT=1 ODER 2)                          C
C                                                                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IF(NOPT.LT.1 .OR. NOPT.GT.2) GOTO 4750
      IBACK = 2
      EW(1)=E1
      WRITE(13,2000)
 2000 FORMAT('Die Gradientensuche beginnt')
      WRITE(13,2010) E1,E2,FAKT,ZFAKT
 2010 FORMAT('Anfangsenergie:',2F12.6/,'Schrittweite:',F12.6/,
     *   'Verfeinerungsfaktor:',F12.6/,'Abbruchbedingung:',F12.6)  
 2040 FORMAT('ITER   ENERGIE R    ENRGIE I    SCHRITT     FAKT     ',
     *        '   WERT        abbr        DI          DR          Y',
     *        '           XX          KMI' )
      WRITE(13,2040)
      XX=1000.
      IX=0
      ITER=0
      IWIED=0
      KMI=0
      EWITER(0)=EW(1)
 2222 IF(IX.GE.3) GOTO 1113
      EW(2)=EW(1)+E2
      EW(3)=EW(1)+DCMPLX(0.D0,E2)
      REWIND NBAND3
      I = 0
      IX=IX+1
      ENERGI = EW(IX) + EBIN(1)
      EWERT=EW(IX)
      GOTO 1112
 1113 CONTINUE
      IF(IMAG(EWERT).GT.2.*E2) STOP 'IN OBERER ENERGIE HALBEBENE'
      ITER=ITER+1
      IF(ITER.GT.NZAEN) STOP ' MEHR ALS NZAEN ITERATIONEN'
      Y=F(1)-XX
      IF(E2.LT. 1.D-4) GOTO 2060
      IF(KMI.GT.1) THEN
         KMI=KMI+1
         IF(KMI.GT.5) GOTO 7
         IF(F(1).GT.MIN(F(2),F(3))) THEN
            XX=F(1)
            KMI=0
            IF(F(2).LT.F(3)) THEN
              EW(1)=EW(2)
              F(1)=F(2)
            ELSE
              EW(1)=EW(3)
              F(1)=F(3)
            ENDIF
         ENDIF
       E2=E2*FAKT
       IX=1
       GOTO 66
      ENDIF
      IF(Y.LT.0.) GOTO 7
      IF(ABS(Y).LT.1E-8) GOTO 2060 
         E2=E2*FAKT
      IF(KMI.GT.0 .AND. MIN(F(1),F(2),F(3)).GT. 1.1*XX) THEN
         EW(1)=EWITER(ITER-2)
         IX=1
         F(1)=XX
         KMI=2
         GOTO 66
      ENDIF
      IF(E2.GT.ZFAKT) GOTO 7
      IF(F(1).GT. 1.D0) GOTO 8
      IF(F(1).GT. 0.01D0 .AND. NBLATT(1).LT.0 ) THEN
        E2=E2*2.
        if(iwied.eq.0) GOTO 7
        IWIED=1
      ENDIF
      IF(F(2).LT.F(1)) THEN
         F(1)=F(2)
         EW(1)=EW(2)
      ENDIF
      IF(F(3).LT.F(1)) THEN
         F(1)=F(3)
         EW(1)=EW(3)
      ENDIF
 2060 WRITE(13,2020) EW(1),F(1)
 2020 FORMAT('Das Minimum ist gefunden:',2F12.8,' ,mit dem Wert:',F12.8)
      WRITE(13,2021) (NBLATT(K),K=1,NZKB)
 2021 FORMAT('auf Blatt: ',20I3)
      GOTO 8
   7  CONTINUE
      KMI=0
      XX=F(1)
      A=F(1)-F(2)
      B=F(1)-F(3)
      if(a .lt.0D0 .and. b .lt. 0D0) THEN
          KMI=1
          if(f(1) .lt. .01D0)  E2=E2*FAKT
      endif
      ALPHA=ATAN(ABS(B/A))
      DI=ABS(E2)*SIN(ALPHA)
      DR=ABS(E2)*COS(ALPHA)
      EW(1)=EW(1)+SIGN(DR,A)
      EW(1)=EW(1)+DCMPLX(0.D0,SIGN(DI,B))
      IX=0
 66   CONTINUE
      EWITER(ITER)=EW(1)
C     NUR ZWEI ENERGIEN WERDEN GERECHNET FUER DIESE ITERATION
C     FALLS IX=1
      IF (IX.GT.0) THEN
      WRITE(13,2039) ITER,EW(1),E2,FAKT,F(1)
 2039 FORMAT(I4,10F12.6)
      ENDIF
      GOTO 2222
   8  CONTINUE
      E1=EW(1)
 4750 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                        C
C     RESIDUENBESTIMMUNG   (WENN NOPT = 2 ODER 3)                        C
C                                                                        C 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IF(NOPT.LT.2 .OR. NOPT.GT.3) GOTO 4751
      IF(NOPT.NE.2) GOTO 10102
      IF(F(1).LE.0.01)GOTO 10102
      WRITE(13,10103)
10103 FORMAT(/'DER FUNKTIONSWERT IST NICHT KLEIN GENUG,',
     *       ' ENTWEDER SOLLTE'/,
     *     'DIE ABBRUCHBEDINGUNG WEITER HERUNTERGESETZT WERDEN,'/, 
     *      'ODER ES LIEGT KEINE WIRKLICHE NULLSTELLE VOR')
      GOTO 1
10102 CONTINUE
      IBACK = 3
      WRITE(13,10104)
10104 FORMAT(//'RESIDUEN WERDEN BESTIMMT:'/)
      WRITE(13,10180) DELTAPOL,DELTADIFF,ABBR
10180 FORMAT(/'ANFANGSDELTA:',F10.4,'  SCHRITTWEITE:',F10.4,
     *        '  ABBRUCH, WENN ABWEICHUNG KLEINER:',F10.4,/)
      WRITE(13,10184)
10184 FORMAT('ITER   DELTA        INTERPOLATION')   
 1115 IF(JXX.GT.0) GOTO 10107
      JXX=1
      GOTO 10108
10107 CONTINUE
      DO 10109 I=1,NZOFFK
      DO 10109 J=1,NZOFFK
      RESMAT(I,J,2)= RESMAT(I,J,2)*DELTA
      RESMAT(I,J,3)= RESMAT(I,J,3)*(-DELTA) 
      RESID(I,J)=DCMPLX(0.,0.5)*(RESMAT(I,J,2)+RESMAT(I,J,3))
10109 RESDIFF(I,J)=RESID(I,J)-RESID2(I,J)
      ITER2=ITER2+1
      WRITE(13,10183)  ITER2,DIMAG(DELTA)
10183 FORMAT(/,I3,F10.4) 
      DO 10111 J=1,NZOFFK
10111 WRITE(13,10110)  (RESID(I,J),I=1,J)
      IF(NZAENI.NE.2) GOTO 10198
      DO 10312 J=1,NZOFFK
10312 WRITE(13,10110) DELTA,(RESMAT(I,J,2),I=1,J)
      DO 10313 J=1,NZOFFK
10313 WRITE(13,10110)  (-DELTA),(RESMAT(I,J,3),I=1,J)
10198 CONTINUE
      DO 10129 I=1,NZOFFK
      DO 10129 J=1,NZOFFK
      IF(ABS(DREAL(RESDIFF(I,J))).GT.ABBR) GOTO 10130 
10129 IF(ABS(DIMAG(RESDIFF(I,J))).GT.ABBR) GOTO 10130
      WRITE(13,10181)  ITER2,DIMAG(DELTA)
10181 FORMAT(/'ITERATIONEN:',I3,'  MAXIMALES DELTA:',F10.4,/) 
      WRITE(13,10182) 
10182 FORMAT(/'DIE RESIDUENMATRIX IST:'/)
c
      IF(NZAENI.NE.0) GOTO 10193
      DO 10188 I=1,NZOFFK
      DO 10188 J=1,NZOFFK
10188 RESID(I,J)=DCMPLX(0.,0.5)*(RESMAT(I,J,2)+RESMAT(I,J,3))
10193 CONTINUE
C     AUSGABE DER RESIDUENMATRIX
      DO 10131 J=1,NZOFFK
10131 WRITE(13,10110)  (RESID(I,J),I=1,J)
      WRITE(13,10992)
C     BETRAG UND PHASE DER RESIDUENMATRIX
      DO 1200 I=1,NZOFFK
      DO 1220 M=1,NZOFFK
 1220 CV2(M)=RESID(I,M)
      DO 1260 M=1,NZOFFK
      A2=(DIMAG(CV2(M))**2+DREAL(CV2(M))**2)**.5
      PKMAT2(M,I) = A2
      C2 = DREAL(CV2(M))
      IF(C2.NE.0.) GOTO 7060
      B2 =  0.
      GO TO 7100
 7060 B2 = (90./PHI)*ATAN(DIMAG(CV2(M))/DREAL(CV2(M)))
      IF(C2.GT.0.) GOTO 7100
      IF(B2.GT.0.) GOTO 7040
      B2 = B2 + 90.
      GO TO 7100
 7040 B2 = B2 - 90.
 7100 CONTINUE
      PHMAT2(M,I) = B2
 1260 CONTINUE
 1200 CONTINUE
      WRITE(13,19990)
19990 FORMAT('BETRAG DER RESIDUENMATRIX:',/)
      DO 10990 J=1,NZOFFK
10990 WRITE(13,10110)  (PKMAT2(I,J),I=1,J)
      WRITE(13,10992)
      WRITE(13,19991)
19991 FORMAT('PHASE DER RESIDUENMATRIX:',/)
      DO 10991 J=1,NZOFFK
10991 WRITE(13,10110)  (PHMAT2(I,J),I=1,J)
      GAMMA=0
      DO 19992  I=1,NZOFFK
19992 GAMMA=GAMMA+PKMAT2(I,I)
      WRITE(13,19993) GAMMA
19993 FORMAT(/,'GAMMA:',F10.4)
      WRITE(13,10992)
C
C     DIAGONALISIERUNG
C
      DO 19998 I=1,NZOFFK
      DO 19998 K=1,NZOFFK
19998 XMAT(K,I)=(PKMAT2(1,I)/SQRT(PKMAT2(1,1)))*
     *          (PKMAT2(1,K)/SQRT(PKMAT2(1,1)))
      DO 29990 I=1,NZOFFK
      DO 29990 K=1,NZOFFK
29990 PKMAT2(I,K)= PKMAT2(I,K)- XMAT(I,K)
      WRITE(13,19999)
19999 FORMAT('BETRAGSMATRIX - KONSTRUIERTE:')
      DO 29992 K=1,NZOFFK
29992 WRITE(13,19994) (PKMAT2(I,K),I=1,NZOFFK)
      WRITE(13,19997)
19997 FORMAT('DIAGONALMATRIX:')
      CALL HDIAG(NZOFFK,0,NR,PKMAT2,EVPKMAT2,NZKBMA)
      DO 19996 K=1,NZOFFK
19996 WRITE(13,19994) (PKMAT2(I,K),I=1,NZOFFK)
19994 FORMAT(15X,12F10.6)
      WRITE(13,10992)
      WRITE(13,29995)
29995 FORMAT('ENDE')
C
      GOTO 4751
10130 CONTINUE
10110 FORMAT(15X,12F10.4)
10992 FORMAT(/)
      GOTO 10116
10108 EWW=E1
      DELTA=DCMPLX(0.D0,DELTAPOL)
      ITER2=0
      DO 10133 J=1,NZOFFK
      DO 10133 I=1,NZOFFK
      RESID(I,J)= CNULL
10133 RESID2(I,J)= CNULL
      GOTO 10117
10116 DELTA=DELTA+DCMPLX(0.D0,DELTADIFF)
      DO 10134 I=1,NZOFFK
      DO 10134 J=1,NZOFFK
10134 RESID2(I,J)= RESID(I,J)   
10117 EW(1)=EWW
      EW(2)=EWW+DELTA
      EW(3)=EWW-DELTA
      IX=0
 3333 IF(IX.GE.3) GOTO 1114
      REWIND NBAND3
      I = 0
      IX=IX+1
      ENERGI = EW(IX) + EBIN(1)
      EWERT=EW(IX)
      GOTO 1112
 1114 GOTO 1115
 4751 GOTO 1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                        C
C     ENRGIEBERECHNUNG (KEINE SCHLEIFE)                                  C
C                                                                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 1112 CONTINUE
      IX=0
      DO 2 K = 1,NZKB
      EMOM(K) = ENERGI - EBIN(K)
c     ENERGIE=EMOM(1)
      IF(NR.NE.0) GOTO 121
c
      EK(K) =SQRT(EMOM(K)*REDM(K))
      IF(NOPT2.NE.1) GOTO 500
      IF(DIMAG(EMOM(K)).GE.0.) GOTO 987
      EK(K)=-EK(K)
      GOTO 987
 500  IF(NOPT2.NE.2) GOTO 501
      IF(DIMAG(EMOM(K)).LT.0.) GOTO 987
      EK(K)=-EK(K)
      GOTO 987
 501  IF(NOPT2.NE.0) GOTO 502
      IF(DREAL(EMOM(K)).GE.0.) GOTO 987
      IF(DIMAG(EMOM(K)).EQ.0.) GOTO 987
      EK(K)=-EK(K)
      GOTO 987
 502  IF(NOPT2.NE.3) GOTO 987
      IF(DIMAG(EMOM(K)).GE.0.) GOTO 503
      EK(K)=-NSIGMA(K)*EK(K)
      GOTO 987
 503  EK(K)=NSIGMA(K)*EK(K)
 987  CONTINUE
c      WEFNOR(K)=(4.*(EMOM(K))/REDM(K))**(-.25)
c  [WEFN]=MeV*fm
      WEFNOR(K)=SQRT(REDM(K)/(2.*EK(K)))
      write(NOUT, *) 'EK , REDM , WEFNOR ',EK(K),REDM(K),WEFNOR(K)
c von ENDM: REDM=1/(1/#N(F1)+1/#N_F2)/(hqc^2/(m_n+m_p))
      GOTO 22
C     
C     EK,ETA, ETC.KOMPLEX!!!
C
121   EH=EMOM(K)+RHUM(1,K)+RHUM(2,K)
      EK(K)=SQRT(ABS((EH**2-RHUM(1,K)**2-RHUM(2,K)**2)**2
     1  -(2*RHUM(1,K)*RHUM(2,K))**2))/(2*EH*HQUERC)
      WEFNOR(K)=SQRT(ABS(EK(K)/(2.*EMOM(K))))
22    ETA(K) = E2K(K)/EK(K)
C
C     NBLATT GIBT AN, WELCHES RIEMANN-BLATT BETRACHTET WIRD
      NBLATT(K)=SIGN(1.05D0,DIMAG(EK(K)))
C
    2 CONTINUE
      DO 90    K = 1,NZKB
      IF(DREAL(EMOM(K)).LE.0.) GOTO 5
       I = I + 1
      NENTK(K) = 1
      GO TO 90
c
 5    CONTINUE
      NENTK(K)=0 
      IF(NOPT.NE.0) NENTK(K) =1
c     NENTK AUF 1 (VORHER 0)
   90 CONTINUE
      NZAOK = I
c     NZAOK IST DIE ANZAHL DER GERECHNETEN KANAELE
      IF(NOPT.NE.0)  NZAOK=NZKB  
      NZOFFK=I
      IF(NOPT2.NE.1) GOTO 10971
      NZOFFK=NZKB
10971 CONTINUE
      IF(NOPT2.NE.2) GOTO 10972
      NZOFFK=NZKB
10972 CONTINUE
      WRITE(NOUT, 1078)
      WRITE (NOUT,1010) ENERGI
      DO 6 K=1,NZKB
      MLA1=MLAD(1,K)+1
      MLA2=MLAD(2,K)+1
      IF(NENTK(K).GT.0) GOTO 9
      WRITE (NOUT,1012) K,EMOM(K),EK(K)
     1 ,BUM(K),BETA2(K),MASSE(1,K),IFRAK(MLA1),MASSE(2,K),
     2  IFRAK(MLA2),LWERT(K),JWERT(K) ,JWS
      GO TO 6
9     WRITE (NOUT,1013) K,EMOM(K),EK(K),ETA(K)
     1      ,BUM(K),BETA2(K),MASSE(1,K),IFRAK(MLA1),MASSE(2,K),
     2   IFRAK(MLA2),LWERT(K),JWERT(K) ,JWS
    6 CONTINUE
 1010 FORMAT (////20H ENERGIE IM SYSTEM =,2F10.4,4H MEV/)
 1012 FORMAT (4H DER,I3,25H TE KANAL IST GESCHLOSSEN /
     126H DIE KANALENERGIE BETRAEGT,2F14.8,
     2   21H MEV,DER WELLENVEKTOR
     3  ,2F14.8,16H REZIPROKE FERMI /,
     4    7H BETAZ=,F 7.4,9H   BETA0=,F 7.4,
     5  I2,A2,2H -,I2,A2,7H     L=,I1,5H   S=,I1,3H /2,
     6     5H   J=  ,I1,3H /2  /)
 1013 FORMAT (4H.DER,I3,19H TE KANAL IST OFFEN /
     126H DIE KANALENERGIE BETRAEGT,2F14.8,21H MEV,DER WELLENVEKTOR
     2    ,2F14.8,16H REZIPROKE FERMI ,2X,6H ETA = ,2F10.4/,
     3    7H BETAZ=,F 7.4,9H   BETA0=,F 7.4,
     4  I2,A2,2H -,I2,A2,7H     L=,I3,5H   S=,I3,3H /2,
     5     5H   J=  ,I3,3H /2  /)
C
C    ZH,ZBM1,ZBM2,FZ1,FZ2,FFZ1,FFZ2,FZ12,FFZ12,HILF SIND KOMPLEX
C
      DO 20 KL=1,NZKA
C
      NZPW2=NZP(KL)
      KSZE=KL
      IF(NENTK(KL)) 21,29,23
23    LWL = LWERT(KL)
      BETA0=BETA2(KL)
C
      IF(NR.EQ.0) GOTO 24
      ZH=HQUERC*(BETA0+CI*EK(KL))
      ZBM1=SQRT(RHUM(1,KL)**2 - ZH**2)
C     WRITE(NOUT, *) ' ZH,ZBM1 ', ZH,ZBM1
      ZBM2=SQRT(RHUM(2,KL)**2 - ZH**2)
C     IM AUFSCHRIEB STEHT HQUERC*BETA0, ABER VERGLEICH MIT NR
      FZ1 =SQRT((HQUERC*EK(KL))**2 +RHUM(1,KL)**2)-DREAL(ZBM1)
      FZ2 =SQRT((HQUERC*EK(KL))**2 +RHUM(2,KL)**2)-DREAL(ZBM2)
      FFZ1= IMAG(ZBM1)/(BETA0*EK(KL))
C     AUCH HIER WURDE HQUERC GEGENUEBER AUFSCHRIEB GEAENDERT
      FFZ2= IMAG(ZBM2)/(BETA0*EK(KL))
      FZ12=(FZ1+FZ2)/(BETA0**2)
      FFZ12=FFZ1+FFZ2
C     WRITE(NOUT, *) 'F1,FF1,F12,FF12 ',FZ1,FFZ1,FZ12,FFZ12
      HILF=FZ1+FZ2-2*EK(KL)/BETA0*(IMAG(ZBM1)+IMAG(ZBM2))
      WEFNOR(KL)=(4*EK(KL)**2 + BETA0**2)/(HILF*2*EK(KL))
      WEFNOR(KL)=SQRT(WEFNOR(KL))
c      write(NOUT, *) ' WEFNOR NEU ',WEFNOR(KL),HILF
24    CALL ENTWIN (VW,VW1,PQ0,PQ1,PQ2,PQ3,LWL,NAD1)
      IF(NZAOK)   1,1,20
29    CONTINUE
C      LESEN DER WERTE AUS APP FUER GESCHLOSSENE KANAELE
      DO 30   M = 1,NZPW2
      READ (NBAND3)
       READ  (NBAND3)
   30 VW(M+NZQ(KL))=  CNULL
      READ(NBAND3)
      READ(NBAND3)
      READ(NBAND3)
      READ(NBAND3)
      READ (NBAND3)
21    READ(NBAND3)
      READ (NBAND3)
   20 CONTINUE
C      ALLE KANALFUNKTIONEN ANGEPASST
C      BERECHNEN DER MATRIZEN
      DO 41   L = 1,NZAOK
      DO 41   K = 1,NZAOK
      SP(K,L) = CNULL
      SR(K,L) = CNULL
      SQ(K,L) = CNULL
      SC(K,L) = CNULL
      DO 2110 J=1+NZQ(L),NZQ(L+1)
      DO 2110 JJ=1+NZQ(K),NZQ(K+1)
      SP(K,L)=SP(K,L)+(HA(JJ,J)-ENERGI*EN(JJ,J))*DAR(J,1)*DAR(JJ,2)
      SC(K,L)=SC(K,L)+(HA(JJ,J)-ENERGI*EN(JJ,J))*DAR(J,2)*DAR(JJ,1)
      SR(K,L)=SR(K,L)+(HA(JJ,J)-ENERGI*EN(JJ,J))*DAR(J,1)*DAR(JJ,1)
2110  SQ(K,L)=SQ(K,L)+(HA(JJ,J)-ENERGI*EN(JJ,J))*DAR(J,2)*DAR(JJ,2)
C     SR=FL*(H-ENERGIE*NORM)*FL
C     SP=GL*(H-ENERGIE*NORM)*FL
C     SQ=GL*(H-ENERGIE*NORM)*GL
41    CONTINUE
      IF(NAD4.LT.3) GOTO 2144
      CALL WRIMATC(SR,NZKBMA,NZAOK,NTEX(2))
      CALL WRIMATC(SC,NZKBMA,NZAOK,NTEX(4))
      CALL WRIMATC(SP,NZKBMA,NZAOK,NTEX(1))
      CALL WRIMATC(SQ,NZKBMA,NZAOK,NTEX(3))
2144  DO 44   L = 1,NZAOK
      DO 45   K = 1,NZAOK
       SP(K,L) = SP(K,L) *WNORM(K)*WNORM(L)
       SC(K,L) = SC(K,L) *WNORM(K)*WNORM(L)
       SR(K,L) = SR(K,L) *WNORM(K)*WNORM(L)
   45  SQ(K,L) = SQ(K,L) *WNORM(K)*WNORM(L)
       IF(NAD4.LT.2) GOTO 2180
      CALL WRIMATC(SR,NZKBMA,NZAOK,NTEX(2))
      CALL WRIMATC(SC,NZKBMA,NZAOK,NTEX(4))
      CALL WRIMATC(SP,NZKBMA,NZAOK,NTEX(1))
      CALL WRIMATC(SQ,NZKBMA,NZAOK,NTEX(3))
 2180 CONTINUE
c     Asymptotische Beiträge
2179   FORMAT('KANAL ',I4,' PQ0(L),PQ3(L),PQ2(L),PQ1(L) ',8F10.4)
       if(nad4.gt.0)write(nout,2179) L,PQ0(L),PQ3(L),PQ2(L),PQ1(L)
       SP(L,L) = SP(L,L)+PQ2(L) 
       SC(L,L) = SC(L,L)+PQ3(L) 
       SR(L,L) = SR(L,L)+PQ0(L) 
   44  SQ(L,L) = SQ(L,L)+PQ1(L) 
C      PQ IST INTEGRAL UEBER ASYMPTOTISCHEN HAMILTONIAN, DA GS=G*T NICHT
C      LOESUNG ZU H - E
       IF(NAD4.LT.1) GOTO 2145
      CALL WRIMATC(SR,NZKBMA,NZAOK,NTEX(2))
      CALL WRIMATC(SC,NZKBMA,NZAOK,NTEX(4))
      CALL WRIMATC(SP,NZKBMA,NZAOK,NTEX(1))
      CALL WRIMATC(SQ,NZKBMA,NZAOK,NTEX(3))
2145  DO 145 K=1,NZAOK
      SPT(K,K)=0.
        DO 144 M=1+NZQ(K),NZQ(K+1)
      SPT(K,K)=SPT(K,K)+DAR(M,1)*VW1(M)-DAR(M,2)*VW(M)
144   CONTINUE
      SPT(K,K)=(SPT(K,K)-CI)*1000.
145   CONTINUE
        WRITE(NOUT,3140) (SPT(K,K),K=1,NZAOK)
3140  FORMAT(' ABWEICHUNG VOM WERT DER WRONSKI-DETERMINANTE ',
     *   'SOLLTE FUER REELLE ENERGIE REIN IMAGINAER SEIN',/,
     * 3(' ( ', F10.4,',',F10.4,' ) '))
C
      DO 50 L=1,NZAOK
      DO 48 I=1,NZPWX
      SS(I,L) = CNULL
      ST(I,L) = CNULL
      IF (L.GT.NZAOK) GO TO 48
      DO 49 M=1+NZQ(L),NZQ(L+1)
      SS(I,L)=SS(I,L)+DAR(M,1)*(HAEV(M,I)-ENERGI*ENEV(M,I))
      ST(I,L)=ST(I,L)+DAR(M,2)*(HAEV(M,I)-ENERGI*ENEV(M,I))
      IF(NAD4.LT.6) GOTO 49
      WRITE(NOUT, 1998) JTX(4),I,L,SS(I,L),ST(I,L)
1998  FORMAT(1X,A4,2I4,(4G21.14))
49    CONTINUE
C     SS=(H+)*(H-ENERGIE*NORM)*EIGENVEKTOR
C     ST=(H-)*(H-ENERGIE*NORM)*EIGENVEKTOR
   48 CONTINUE
   50 CONTINUE
      IF(NAD4.LT.4) GOTO 2123
      write(nout,*) 'SS ST direkt'
      DO 2122 L=1,NZAOK
      WRITE(NOUT, 141) (SS(I,L),I=1,NZPWX)
      WRITE(NOUT, 141) (ST(I,L),I=1,NZPWX)
2122  CONTINUE
2123  CONTINUE
      DO 2130 I=1,NZPWX
      DO 2140 L=1,NZKB
      NZPW2=NZP(L)
141    FORMAT(1X,10G12.5)
      IF (L.GT.NZAOK) GO TO 2140
      SS(I,L) = SS(I,L)*WNORM(L)
      ST(I,L) = ST(I,L)*WNORM(L)
      DO 51 M=1,NZPW2
      SS(I,L)=SS(I,L)+EV(M+NZQ(L),I)*VW(M+NZQ(L))/WNORM(L)
      ST(I,L)=ST(I,L)+EV(M+NZQ(L),I)*VW1(M+NZQ(L))/WNORM(L)
      IF(NAD4.LT.5) GOTO 51
      WRITE(NOUT, 1998) JTX(4),I,L,SS(I,L),ST(I,L)
51    CONTINUE
C      VW IST INTEGRAL UEBER ASYMPTOTISCHEN HAMILTONIAN
 2140 CONTINUE
 2130 CONTINUE
      DO 2132 L=1,NZAOK
      IF(NAD4.LT.3) GOTO 2132
      write(nout,*) 'SS ST direkt + aysmptotisch'
      WRITE(NOUT, 141) (SS(I,L),I=1,NZPWX)
      WRITE(NOUT, 141) (ST(I,L),I=1,NZPWX)
2132  CONTINUE
C     BERECHNUNG DER SMATRIX
      CALL RRANDB(SMAT,IBESS)
      jxc=0
      IF(IWEFU.LE.0) GOTO 201
      CALL DEKOF(NAD1)
      CALL WEFU(MZAE)
C
201   CONTINUE
      jxc=jxc+1
      if(nad7.lt.0) then
C       NUR DIE BESSERE S-MATRIX WIRD BEHANDELT
        jxc=ibess
3277   FORMAT(/,' DIE ',A7,' S-MATRIX')
        write(nout,3277) ISMAT(3)
      else
        write(nout,3277) ISMAT(jxc)
      endif
C       BERECHNUNG VON PHASE UND BETRAG 
c      DO 120 I=1,NZAOK
c      DO 122 M=1,NZAOK
      DO 120 I=1,NZOFFK
      DO 122 M=1,NZOFFK   
      SMATFAKT(I,M)=SMAT(I,M,jxc)
      IF(NOPT.LT.2) GOTO 10106
      IF(NOPT.GT.3) GOTO 10106
      RESMAT(I,M,IX)=SMAT(I,M,jxc)
10106 CONTINUE
  122 CV(M)=SMAT(I,M,jxc)
c      DO 126 M=1,NZAOK
      DO 126 M=1,NZOFFK
      PKMAT(M,I) = ABS(CV(M))
      C = DREAL(CV(M))
      IF(C.NE.0.) GOTO 706
      B =  0.
      GO TO 710
  706 B = (90./PHI)*ATAN(DIMAG(CV(M))/DREAL(CV(M)))
      IF(C.GT.0.) GOTO 710
      IF(B.GT.0.) GOTO 704
      B = B + 90.
      GO TO 710
  704 B = B - 90.
  710 CONTINUE
      PHMAT(M,I) = B
  126 CONTINUE
  120 CONTINUE
c
C     Faktorisierung der S-matrix
      IFA=0
C
C     FUER NOPT3 .NE. 0 WIRD (NMAT1,NMAT2)-ELEMENT 
C     DER S-MATRIX BETRACHTET
      IF(NOPT3.EQ.0) GOTO 279
      DETSMAT=SMATFAKT(NMAT1,NMAT2)
C
      GOTO 278
 279  CONTINUE
      CALL ZGETRF(NZAOK,NZAOK,SMATFAKT,NZKBMA,IPIV,IFA)
      DETSMAT=1.
      DO 128 M=1,NZOFFK
      DSM=SMATFAKT(M,M)
      DETSMAT=DETSMAT*DSM
c     write(13,*)'detsmat',detsmat,NZOFFK
 128  CONTINUE
 278  CONTINUE
      detsbet=abs(detsmat)
C
      DETSBET=1./DETSBET
C
      write(nout,*) 'IX = ',IX
      F(IX)=DETSBET
      WRITE(NOUT,129)DETSMAT
      WRITE(NOUT,130)DETSBET
      IF(NOPT.LT.1 .OR. NOPT.GT.2) GOTO 2070
      IF(IX.GT.1 .OR. JXX.GT.0) GOTO 2070
      WRITE(13,2030) ITER,EWERT,E2,FAKT,DETSBET,ZFAKT,DI,DR,Y,xx,kmi
 2030 FORMAT(I4,10F12.6,i5)
 2070 CONTINUE
 129  FORMAT(//'DETERMINANTE DER S-MATRIX:',2G12.6)
 130  FORMAT(/'1/BETRAG DER DETERMINANTE:',G12.6)
C   SCHREIBEN DER RECORDS AUF TAPE7 FUER POLARISATIONSPROGRAMM
      NUMPP = NUMPR +jxc
      IF(NOPT.NE.0 .OR. NAD3.EQ.0) GOTO 64
      if(nad7.lt.0) numpp=numpr
      DO 63  M=1,NZAOK
      DO 62  N=1,NZAOK
      ER1=EMOM(M)
      E5=EMOM(N)
      I1=ISTR(M)
      I2=ISTR(N)
      I3=JWERT(M)
      I4=JWERT(N)
      I5=JWS
      I6=LWERT(M)
      I7=LWERT(N)
      E3=PKMAT(M,N)
           IF(E3.GT.2.D0) E3=0.
      E4=PHMAT(M,N)
      WRITE (NPUN,1042) ER1,E5,I1,I2,I3,I4,I5,I6,I7,E3,E4,NUMPP
 62   CONTINUE
 63   CONTINUE
      MZREK = MZREK + NZAOK ** 2
64    WRITE(NOUT,131)
      DO 134 M=1,NZOFFK
  134 WRITE(NOUT,140)     (PHMAT(N,M),N=1,M)
      WRITE(NOUT,135)
      DO 136     M = 1,NZOFFK
  136 WRITE(NOUT,140)     (PKMAT(N,M),N=1,M)
131   FORMAT('S - MATRIX: PHASENMATRIX , BETRAGSMATRIX')
135   FORMAT(/)
  140 FORMAT(12F12.5)
      IF(NOPT.EQ.1 .OR. NOPT.EQ.2) GOTO 5555      
      if(nad7.ge.0 .and. jxc.lt.2) goto 201
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
5555  GOTO(1111,2222,3333,4444),IBACK
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 1    CONTINUE
      CLOSE(UNIT=NBAND3)
      WRITE(NOUT,*) ' ENDE DER RECHNUNG VON S_POLE '
            CLOSE(UNIT=NOUT,STATUS='KEEP')
      STOP
1800   WRITE(NOUT, 1801) NZRW,NZRWMA
1801   FORMAT(' TOO MANY POINTS FOR INTEGRATION',2I5)
       END
       FUNCTION XXP(A)
       IMPLICIT REAL*8(A-H,O-Z)
       XXP=0.
       IF(A.GT.-600.) XXP=EXP(A)
       RETURN
       END
      SUBROUTINE OMA(L,LGEW,BGEW,K,NZPW2,NAD1)
      IMPLICIT REAL*8(A-H,O-Z)
C     L   KANALDREHIMPULS
C     LGEW  POTENZ DER GEWICHTSFUNKTION
C     BGEW  ABFALLPARAMETER DER GEWICHTSFUNKTION
C     K  KANALNUMMER
C     NZPW2  ANZAHL DER ABFALLPARAMETER
C
      INCLUDE 'par/verma'
C
      COMMON /NA/ NAR(NZPARM,NZKMAX)
C
      COMMON /GAMH/ G(31)
C
      COMMON /ORTH/ EIGVEC(NZPARM,NZPARM)
C
      COMMON  REDM(NZKMAX), KAL, NBAND3, PAR(NZPARM,NZKMAX)
C
      DIMENSION OVMA(NZPARM,NZPARM)
C
      DO 20 I=1,NZPW2
      DO 18 J=I,NZPW2
      IND=L+L+2+NAR(I,K)+NAR(J,K)+LGEW
      IF (IND.GT.30) STOP 51
      ABFP=PAR(I,K)+PAR(J,K)+BGEW
      OVMA(I,J)=.5*G(IND+1)/(ABFP**(DBLE(IND+1)*.5))
18    OVMA(J,I)=OVMA(I,J)
       IF(NAD1.LT.3) GOTO 20
      WRITE(NOUT, 19) I,(OVMA(I,J),J=1,NZPW2)
19    FORMAT(I5,(1X,10G12.6))
20    CONTINUE
      IF(NAD1.LT.2) GOTO 23
      WRITE(NOUT, 21) (OVMA(I,I),I=1,NZPW2)
21    FORMAT(' NORMERWARTUNGSWERTE DER BF',/,(1X,10G12.6))
23    CALL HDIAG(NZPW2,0,NR,OVMA,EIGVEC,NZPARM)
C     EIGVEC(I,1) IST DER 1. EIGENVEKTOR
       IF(NAD1.LT.0) GOTO 122
      WRITE(NOUT, 22) (OVMA(I,I),I=1,NZPW2)
       IF(NAD1.LT.2) GOTO 122
      DO 24 I=1,NZPW2
24    WRITE(NOUT, 19) I,(EIGVEC(J,I),J=1,NZPW2)
22    FORMAT(' NORM DER BASISFUNKTIONEN',/,(1X,10G12.6))
122    RETURN
       END
      SUBROUTINE APP(NAD2,BETA2)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 FUK,UX
C
C
      INCLUDE 'par/verma'
      PARAMETER (NDIMP=NDIM*NDIM)
C
      COMMON /PLATZ/ VV(NDIMP)
C
      COMMON /APC/ FRR, BUM(NZKBMA), NZP(NZKMAX), WNORM(NZKMAX),
     *             NZKA, NZKB
C
      COMMON /NA/ NAR(NZPARM,NZKMAX)
C
      COMMON /REGC/ BETA0, FAK(37)
C
      COMMON /GAMH/ G(31)
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C     
      COMMON /RMATSTO/ SWCA(NZPARM,NZKMAX), 
     *       ASYHAM(NZPARM,NZPARM,NZKMAX), ASYNOR(NZPARM,NZPARM,NZKMAX),
     *       E2K(NZKMAX), BNORM, J_RMAT
C
      COMMON  REDM(NZKMAX), KL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA, IWEFU, NBAND9, IPLO, LWERT(NZKMAX),RRAD(NZKMAX)
C
      COMMON /nop/RMA(NZKMAX),NOPT
C
      DIMENSION BETA2(NZKBMA),
     *          SP(NZKBMA,3), PAP(NZPARM), SW(NZRWMA,NZPARM),
     *          SV(NZRWMA,NZPARM), UX(NZPARM,NZPARM),IPIV(NZPARM)
C
      EQUIVALENCE (VV(1),SW(1,1)), (VV(NZRWMA*NZPARM+1),SV(1,1))
C
C
      FAK(1) = 1.D0
      DO 200 M = 1,35
200   FAK(M+1)=FAK(M)/ DBLE(M)
C      FAK(N)=1/(N-1)!
      G(1)=1.772453850905516027298D0
C      Sqrt(Pi)
      G(2)=1.D0
      DO 20 I=2,30
      IF(MOD(I,2).EQ.0) GOTO 19
      G(I+1)=G(I-1)*DBLE(I/2)
      GOTO 20
19    G(I+1)=.5D0*G(I-1)*DBLE(I-1)
20    CONTINUE
C     G(K+1)=GAMMA((K+1)/2)
 1000 FORMAT (6E12.4)
      DO 115 M=1,3
  115 READ (INPUT,1000) (SP(KL,M),KL=1,NZKB)
      READ(INPUT,1000) GEW,QD,QS
      DO 1   KL = 1,NZKA
      NZPW2=NZP(KL)
       DO 116 KH=1,NZPW2
116    PAP(KH)=PAR(KH,KL)
       IF(KL.GT.NZKB) GOTO 7
      BETAZ = BUM(KL)
      LWL = LWERT(KL)
      BETA0 = BETA2(KL)
      LAM = 2*LWL  + 1
      FAKT=SP(KL,1)
      B3=.0
      NN=LWL+1
      CALL SUCH(BETAZ,NN,B3,NZRW,FR1)
C     FESTLEGUNG DES ANPASSUNGINTERVALLES,POTENZ VON R WAERE KORREKT =1!
      WRITE (NOUT,1001) KL,NZRW,FR1
1001  FORMAT(' IM',I3,'TEN KANAL IST DAS ANPASSUNGSINTERVALL',
     1  I5,' * ',F10.3)
      LGEW=-LAM*GEW
      BGEW=BETAZ*GEW
      CALL OMA(LWL,LGEW,BGEW,KL,NZPW2,NAD2)
      DO 140 JX=1,NZRW
140   Q(JX,1)=DBLE(JX)*FR1
      PFAKT=SP(KL,3)
      DO 150   K = 1,NZRW
  150 Q(K,1) = Q(K,1)* ((Q(K,1)/Q(NZRW,1))**PFAKT)
      CALL REG(LWL,NZRW)
      DO 100 K=1,NZRW
      B3=Q(K,1)
      B4=B3*B3
      FUK(K,1)=(B3**(-LAM))*EXP(-BETAZ*B4)
      FUK(K,2)=FUK(K,1)*B4*FAKT
      DO 90 M=1,NZPW2
      B1=PAP(M)
      NN=NAR(M,KL)+LWL+1
      SW(K,M)=(  B3  **NN)*XXP(-B1*B4)
   90 SV(K,M)=((DBLE(NN)/  B3  )-2.*  B1     *  B3  )*SW(K,M)
C       SV= ABLEITUNG VON SW
100   CONTINUE
      DO 110 M=1,NZPW2
      DO 110 N=M,NZPW2
      UX(M,N)=DCMPLX(.0,.0)
      DO 108 K=1,NZRW
  108 UX(M,N)=UX(M,N)+SW(K,M)*SW(K,N)*FUK(K,1)+SV(K,M)*SV(K,N)*FUK(K,2)
110   UX(N,M)=UX(M,N)
C      BESTIMMUNG DES KLEINSTEN ABFALLPARAMETERS
       B1=PAP(NZPW2)
      DO 112 M=1,NZPW2
      IF(B1.GT.PAP(M)) B1=PAP(M)
      DO 113 K=1,NZRW
      Q(K,2)=SW(K,M)*FUK(K,1)
  113 Q(K,3)=SV(K,M)*FUK(K,2)
      WRITE (NBAND3) ((Q(K,MM),K=1,NZRW),MM=1,3)
  112 WRITE (NBAND3)((TS(K,MM),K=1,NZRW),MM=1,3)
c     B1=MAX(B1,BETAZ)
C     GEWICHTSFAKTOR LEGT BESCHRAENKT KLEINSTE WEITE
      NN=LWL+1
      NZRW2=NZRW/2
      B3=.0
      CALL SUCH(B1,NN,B3,NZRW2,FR1)
C     FUNKTIONSWERTE SELBST NICHT ZU GROSS,KORREKTE R POTENZ=2K+2L+2
c     B1=FR1*DBLE(NZRW2)
      B1=FR1*DBLE(NZRW2)*0.5
      B3=Q(NZRW,1)*QD
      FR1=(B1-B3)/DBLE(NZRW2)
      B4=B3+B1
      WRITE (NOUT,1010) B3,B4
1010  FORMAT(' FUNKTIONSWERTE ZWISCHEN ',F10.5,' UND ',F10.5,
     1 ' WERDEN IM FUNCTIONAL BERUECKSICHTIGT')
      DO 120 K=1,NZRW2
  120 Q(K,1)=B3+DBLE(K)*FR1
      SP2=SP(KL,2)
      DO 122 M=1,NZPW2
      DO 122 N=M,NZPW2
      L2X=NAR(M,KL)+NAR(N,KL)+2*LWL+2
      IF(QS.EQ.0.) GOTO 124
      IF(N.GT.10.OR.M.GT.10) SP2=SP(KL,2)**((PAP(N)+PAP(M)+QS)
     $/(PAP(1)+PAP(1)+QS))
124   DO 121 K=1,NZRW2
  121 UX(M,N)=UX(M,N)+SP2*(Q(K,1)**L2X)*XXP(-(PAP(M)+PAP(N)
     1)*(Q(K,1)**2))
c
122   UX(N,M)=UX(M,N)
      WRITE(NBAND3)   ((UX(M,N),M=1,NZPW2),N=1,NZPW2)
      IFA=0
       CALL ZGETRF(NZPW2,NZPW2,UX,NZPARM,IPIV,IFA)
       IF(IFA.EQ.0) GOTO 1113
       WRITE(NOUT,*) 'PROBLEME BEI ',IFA
       STOP 'APP'
1113  WRITE(NBAND3)((UX(M,N),M=1,NZPW2),N=1,NZPW2),(IPIV(M),M=1,NZPW2)
C     ENDE ANPASSUNG
C     BESTIMMUNG DER INTEGRALE FUER NUMERISCHE INTEGRATION
      DO 6110   M = 1,NZPW2
      B2= PAP(M)
      NN= 3*LWL + 1+NAR(M,KL)
      B3= BETA0
      CALL SUCH(B2,NN ,B3,NZRW,FR2)
C       INTERVALL FUER NUMERISCHE INTEGRATION,KORREKT R POTENZ 3L+K+1
      SW(M,1)=FR2*DBLE(NZRW)
 6110 CONTINUE
      B1=   .0
      NN= 4*LWL
      B3= BETA0   *2.
      CALL SUCH(B1,NN ,B3,NZRW,FR1)
C       R POTENZ KORREKT
      NZPW21=NZPW2+1
      SW(NZPW21,1)=FR1*DBLE(NZRW)
      WRITE (NBAND3) (SW(K,1),K=1,NZPW21)
      IF(NAD2.NE.0) WRITE(NOUT,1002) (SW(K,1),K=1,NZPW21)
1002   FORMAT(' R-WERTE FUER PARAMETER ',6G12.5,/,10G12.5)
C      VORBEREITUNG FUER ANPASSUNGSVERGLEICH
7     NZRW1=NZRW
      DO 8   K = 1,NZRW1
    8 Q(K,1) = ( DBLE(K)-.5)*FRR
      DO 740  M= 1,NZPW2
      DO 740  K=1,NZRW1
      R=Q(K,1)
      SW(K,M) = (R**(NAR(M,KL)+LWL+1)) * XXP(-PAP(M)*R*R)
740   SV(K,M) =(DBLE(NAR(M,KL)+LWL+1)/R-2.*R*PAP(M))*SW(K,M)
       IF(KL.GT.NZKB) GOTO 741
      CALL REG(LWL,NZRW1)
741   IF(NAD2.LT.2) GOTO 9003
      WRITE (NOUT,1003)
1003  FORMAT(48H NUMMER UND PARAMETER DER INTERPOLATIONSFUNKTION//)
      WRITE(NOUT,1004)(K,PAP(K),NAR(K,KL),K=1,NZPW2)
1004  FORMAT(5(3X,I2,1X,2H.),F8.4,' POL',I3))
      IF(NAD2.LT.3) GOTO 9003
      DO 882  M=1,NZPW2
      WRITE (NOUT,883) M,M,PAP(M)
883   FORMAT (/ 10H WERTE DER,I3,27H TEN INTERPOLATIONSFUNKTION,/
     16H BETA(,I3,5H ) = ,F12.4/)
882   WRITE (NOUT,884) (SW(K,M),K=1,NZRW1)
884   FORMAT (10E12.4)
9003  CONTINUE
      WRITE(NBAND3)       ((SW(K,M),K=1,NZRW1),M=1,NZPW2)
      IF(KL.LE.NZKB) WRITE(NBAND3)   ((SV(K,M),K=1,NZRW1),M=1,NZPW2)
      WRITE(NBAND3)  (Q(K,1),K=1,NZRW1)
      IF(KL.LE.NZKB) WRITE (NBAND3) ((TS(K,I),K=1,NZRW1),I=1,2)
      IF(J_RMAT.EQ.0) GOTO 1
c     IF(KL.GT.NZKB) GOTO 1
      R=RRAD(KL)
      if(r.lt. 0.001) r=10.
      KL5=2*LWL + 5
      KL3=2*LWL + 3
      KL1=2*LWL + 1
      RL5=DBLE(KL5)*0.5D0
      RL3=RL5-1.D0
      RL1=RL3-1.D0
      RL2=LWL+1
      DO 840  M= 1,NZPW2
      SWCA(M,KL) = (R**(NAR(M,KL)+LWL+1)) * XXP(-PAP(M)*R*R)
      SWCA(M,KL) = SWCA(M,KL)*SQRT(2.*((2.*PAP(M))**RL3)/G(KL3))
840   CONTINUE
c     write(nout,*)'swca',r,(swca(m,kl),m=1,nzpw2)
      DO 850 M=1,NZPW2
      DO 848 MP=1,NZPW2
      PMMP=(PAP(M)+PAP(MP))
      X=PMMP*R*R
      AHX=2.*PAP(M)*PAP(MP)/(PMMP**2)*G(KL5)*GAMMQ(RL5,X)-
     +   (LWL+1)*G(KL3)*GAMMQ(RL3,X)+
     +   (2*LWL+1)*(LWL+1)*0.5*G(KL1)*GAMMQ(RL1,X)
      ASYHAM(M,MP,KL)=AHX/(REDM(KL)*(PMMP**(LWL+0.5)))
      ASYHAM(M,MP,KL)=ASYHAM(M,MP,KL)*(RMA(KL)**1.5)+
     *   E2K(KL)/(REDM(KL)*(PMMP/RMA(KL))**(LWL+1))
     *    *G(2*LWL+2)*GAMMQ(RL2,X)*SQRT(RMA(KL))
      ASYHAM(M,MP,KL)=ASYHAM(M,MP,KL)
      ASYNOR(M,MP,KL)=G(KL3)*GAMMQ(RL3,X)/(PMMP**RL3)
      ASYNOR(M,MP,KL)=0.5D0*ASYNOR(M,MP,KL)*(RMA(KL)**1.5)
c     write(nout,*)'asynor',gammQ(rl3,x),pmmp,wnorm(kl),rl3,RMA(kl)
c     write(nout,*) 'coul', E2K(KL)/(REDM(KL)*(PMMP/RMA(KL))**(LWL+1))
c    *  *G(2*LWL+2)*GAMMQ(RL2,X)*SQRT(RMA(KL))/BNORM
848   CONTINUE
850   CONTINUE

    1 CONTINUE
      WRITE (NOUT,1020)
 1020 FORMAT ( /6X,6H KANAL,6X,6H BETAZ,6X,6H BETA0,6X,6H FAKT1,6X,6H FA
     1KT2,6X,6H FAKT3/)
      DO 1021 K=1,NZKB
 1021 WRITE (NOUT,1400) K,BUM(K),BETA2(K),SP(K,1),SP(K,2),SP(K,3)
 1400 FORMAT (I12,  E12.4,4F12.4)
      RETURN
      END
      SUBROUTINE HDIAG(N,IEGEN,NR,H,U,NDIMH)
      IMPLICIT REAL*8(A-H,O-Z)
C          THIS SUBROUTINE COMPUTES THE EIGENVALUES AND EIGENVECTORS
C     OF A REAL SYMMETRIC MATRIX, H, OF ORDER N (WHERE N MUST BE LESS
C     THAN 81), AND PLACES THE EIGENVALUES IN THE DIAGONAL ELEMENTS OF
C     THE MATRIX H AND PLACES THE EIGENVECTORS (NORMALIZED) IN THE
C     COLUMNS OF THE MATRIX U.  IEGEN IS SET AS 1 IF ONLY EIGENVALUES
C     ARE DESIRED, AND IS SET TO 0 WHEN VECTORS ARE REQUIRED.  NR CON-
C     TAINS THE NUMBER OF ROTATIONS DONE.
C
C     THE SUBROUTINE OPERATES ONLY ON THE ELEMENTS OF H THAT ARE TO THE
C     RIGHT OF THE MAIN DIAGONAL AND THUS ONLY A TRIANGULAR SECTION NEED
C     BE STORED IN THE ARRAY H.
C
      INCLUDE 'par/verma'
C
      DIMENSION X(NZKBMA),IQ(NZKBMA),H(NDIMH,NDIMH),U(NDIMH,NDIMH)
C
      IF(N.GT.NZKBMA) STOP 'HDIAG CALLED WITH N .GT. DIMENSION NZKBMA'
      IF (IEGEN.NE.0) GOTO 15
       DO 14 I = 1,N
      DO 14 J = 1,N
      IF (I.NE.J) GOTO 12
       U(I,J)=1.
      GO TO 14
   12 U(I,J)=0.
   14 CONTINUE
   15 NR = 0
      IF (N.LT.2) GOTO 1000
C     SCAN FOR LARGEST OFF-DIAGONAL ELEMENT IN EACH ROW
C     X(I) CONTAINS LARGEST ELEMENT IN ITH ROW
C     IQ(I) HOLDS SECOND SUBSCRIPT DEFINING POSITION OF ELEMENT
      NMI1 = N - 1
      DO 30 I = 1,NMI1
      X(I) = 0.
      IPL1 = I + 1
      DO 30 J = IPL1,N
       IF (X(I).GE.ABS(H(I,J)))GOTO 30
       X(I) =  ABS(H(I,J))
      IQ(I) = J
   30 CONTINUE
C     SET INDICATOR FOR SHUT-OFF.RAP=2**-27,NR=NO OF ROTATIONS
      RAP = 1.E-9
      HDTEST = 1.0E38
C     FIND MAXIMUM OF X(I) S FOR PIVOT ELEMENT AND
C     TEST FOR END OF PROBLEM
   40 DO 70 I = 1,NMI1
      IF (I.EQ.1)GOTO 60
       IF(XMAX.GE.X(I)) GOTO 70
   60 XMAX = X(I)
      IPIV = I
      JPIV = IQ(I)
   70 CONTINUE
C     IS MAX. X(I) EQUAL TO ZERO, IF LESS THAN HDTEST, REVISE HDTEST
      IF(XMAX.EQ.0.) GOTO 1000
       IF (HDTEST.LE.0) GOTO 90
       IF(XMAX.GT.HDTEST) GOTO 148
   90 HDIMIN = ABS (H(1,1))
      DO 110 I = 2,N
      IF (HDIMIN.LE.ABS(H(I,I))) GOTO 110
        HDIMIN = ABS (H(I,I))
  110 CONTINUE
      HDTEST = HDIMIN*RAP
C     RETURN IF MAX H(I,J)LESS THAN 2**-27ABSF(H(K,K)-MIN)
      IF (HDTEST.GE.XMAX) GOTO 1000
  148 NR = NR+1
C     COMPUTE TANGENT, SINE AND COSINE,H(I,I),H(J,J)
      TANG = H(IPIV,IPIV)-H(JPIV,JPIV)
      IF (TANG.GE.0.) GOTO 1151
      SANG = -2.
      GO TO 1152
 1151 SANG = 2.
 1152 SQTANG = TANG*TANG + 4.*H(IPIV,JPIV)**2
      DENOM = ABS (TANG)+ SQRT(SQTANG)
      TANG = SANG*H(IPIV,JPIV)/DENOM
      COSINE=1./ SQRT(1.+TANG**2)
      SINE = TANG*COSINE
      HII = H(IPIV,IPIV)
      H(IPIV,IPIV)=COSINE**2*(HII+TANG*(2.*H(IPIV,JPIV)+TANG*H(JPIV,JPIV
     1)))
      H(JPIV,JPIV)=COSINE**2*(H(JPIV,JPIV)-TANG*(2.*H(IPIV,JPIV)-TANG*H
     1II))
      H(IPIV,JPIV)=0.
C     PSEUDO RANK THE EIGENVALUES
C     ADJUST SINE AND COSINE FOR COMPUTATION OF H(IK) AND U(IK)
      IF (H(IPIV,IPIV).GE.H(JPIV,JPIV)) GOTO   153
       HTEMP = H(IPIV,IPIV)
      H(IPIV,IPIV) = H(JPIV,JPIV)
      H(JPIV,JPIV) = HTEMP
C     RECOMPUTE SINE AND COS
      IF (SINE.GE.0.) GOTO 1155
      HTEMP = COSINE
      GO TO 1156
 1155 HTEMP = -COSINE
 1156 COSINE = ABS (SINE)
      SINE = HTEMP
  153 CONTINUE
C     INSPECT THE IQS BETWEEN I+1 AND N-1 TO DETERMINE
C     WHETHER A NEW MAXIMUM VALUE SHOULD BE COMPUTED SINCE
C     THE PRESENT MAXIMUM IS IN THE I OR J ROW.
      DO 350 I = 1,NMI1
      IF (I - IPIV) 210,350,200
  200 IF (I.EQ.JPIV) GOTO 350
  210 IF (IQ(I).EQ.IPIV)GOTO 240
      IF (IQ(I).NE.JPIV) GOTO 350
  240 K = IQ(I)
      HTEMP = H(I,K)
      H(I,K) = 0.
      IPL1 = I +1
      X(I) = 0.
C     SEARCH IN DEPLETED ROW FOR NEW MAXIMUM
      DO 320 J = IPL1,N
      IF (X(I).GT.ABS (H(I,J))) GOTO 320
      X(I) = ABS (H(I,J))
      IQ(I) = J
  320 CONTINUE
      H(I,K) = HTEMP
  350 CONTINUE
      X(IPIV) = 0.
      X(JPIV)=0.
C     CHANGE THE OTHER ELEMENTS OF H
      DO 530 I = 1,N
      IF (I - IPIV) 370,530,420
  370 HTEMP = H(I,IPIV)
      H(I,IPIV) = COSINE*HTEMP + SINE*H(I,JPIV)
      IF (X(I).GE.ABS (H(I,IPIV))) GOTO 390
      X(I) = ABS (H(I,IPIV))
      IQ(I) = IPIV
  390 H(I,JPIV) = -SINE*HTEMP+COSINE*H(I,JPIV)
      IF (X(I).GE.ABS(H(I,JPIV))) GOTO 530
  400 X(I) = ABS (H(I,JPIV))
      IQ(I) = JPIV
      GO TO 530
  420 IF (I-JPIV)430,530,480
  430 HTEMP = H(IPIV,I)
      H(IPIV,I) = COSINE*HTEMP + SINE*H(I,JPIV)
      IF (X(IPIV).GE.ABS(H(IPIV,I))) GOTO 450
      X(IPIV) = ABS (H(IPIV,I))
      IQ(IPIV) = I
  450 H(I,JPIV) = -SINE*HTEMP + COSINE*H(I,JPIV)
      IF (X(I) - ABS (H(I,JPIV))) 400,530,530
  480 HTEMP = H(IPIV,I)
      H(IPIV,I) = COSINE*HTEMP + SINE*H(JPIV,I)
      IF (X(IPIV).GE.ABS (H(IPIV,I))) GOTO 500
      X(IPIV) = ABS (H(IPIV,I))
      IQ(IPIV) = I
  500 H(JPIV,I) = -SINE*HTEMP + COSINE*H(JPIV,I)
      IF (X(JPIV).GE.ABS (H(JPIV,I))) GOTO 530
      X(JPIV) = ABS (H(JPIV,I))
      IQ(JPIV) = I
  530 CONTINUE
C     TEST FOR COMPUTATION OF EIGENVECTORS
      IF(IEGEN.NE.0) GOTO 40
       DO 550 I = 1,N
      HTEMP = U(I,IPIV)
      U(I,IPIV) = COSINE*HTEMP+SINE*U(I,JPIV)
  550 U(I,JPIV)=-SINE*HTEMP+COSINE*U(I,JPIV)
      GO TO 40
 1000 RETURN
      END
       SUBROUTINE WRIMAT(A,NDIM,NORD,KTEX)
       IMPLICIT REAL*8(A-H,O-Z)
C
      CHARACTER KTEX*3
C
       DIMENSION A(NDIM,NDIM)
       DATA NOUT/6/
       WRITE(NOUT,1) KTEX
       DO 10 I=1,NORD
10     WRITE(NOUT,11) (A(I,L),L=1,NORD)
1      FORMAT(' MATRIX-',A3)
11     FORMAT(2X,10G13.7)
       RETURN
       END
       SUBROUTINE WRIMATC(A,NDIM,NORD,KTEX)
       IMPLICIT REAL*8(A-H,O-Z)
       COMPLEX*16 A
C
      CHARACTER KTEX*3
C
       DIMENSION A(NDIM,NDIM)
       DATA NOUT/6/
       WRITE(NOUT,1) KTEX
       DO 10 I=1,NORD
10     WRITE(NOUT,11) (A(I,L),L=1,NORD)
1      FORMAT(' MATRIX(KOMPLEX)-',A3)
11     FORMAT(2X,10G14.8)
       RETURN
       END
      SUBROUTINE YINT(A,B,KZ,Z,K1,K2,LWL,RAR,NZPW2,FW)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 FWERT,EA,EB,W,TA,TB,U,Z, CNULL
C
       EXTERNAL FW
      DATA  CNULL/(0.D0,0.D0)/
C
C      YINT IST IM WESENTLICHEN EINE ROMBERG INTEGRATIONSROUTINE
C      MIT BULIRSCHFOLGE VON SCHRITTWEITEN
C      SIEHE STOER-(BULIRSCH) NUMERISCHE MATHEMATIK,SPRINGER 1973
C     YINT BESTIMMT INTEGRALE UEBER X**(L+1)*EXP(-X*X*PAR)(2*GL'TS'+GL*TS'')
C     FUER K=1,NZPW2 UND K2=NZPW2+1 UEBER GL**2*TS**2
C     SIEHE DIPLOMARBEIT BAUER
C
      INCLUDE 'par/verma'
      PARAMETER (NZP21=2*NZPARM+4)
C
      DIMENSION U(10,NZP21), TA(10,NZP21), TB(10,NZP21),
     *          H(10), EA(NZP21), EB(NZP21), ERG(NZP21),
     *          W(NZP21), Z(NZP21), FWERT(NZP21),
     *          RAR(NZPARM,NZKMAX)
C
C
      DO 99 K=1,2*NZPW2+4
      W(K)= CNULL
      Z(K)= CNULL
      DO 99 J=1,10
      U(J,K)= CNULL
      TA(J,K)= CNULL
      TB(J,K)= CNULL
 99   CONTINUE
      KK = 2
      MM = 3
      V = 0.
      EPS=1.E-12
      NF=0
      AB = B - A
      H1 = 0.5   * AB
      H2 = 0.333333333333     * AB
      M = 1
       CALL FW(B,K1,K2,FWERT,LWL,RAR,NZPW2)
      DO 1 K=2*K1-1,K2
      EA(K)=.5*FWERT(K)
1      CONTINUE
       CALL FW(A,K1,K2,FWERT,LWL,RAR,NZPW2)
      DO 2 K=2*K1-1,K2
      EA(K)=EA(K)+.5*FWERT(K)
      EB(K)=EA(K)
      ERG(K)=ABS(EA(K))
2      CONTINUE
      DO 500   I = 1,10
      IF (M.GT.0) GOTO 200
       DO 150   J = 1,MM,6
      C = J*H2
      CALL  FW (A+C  ,K1,K2,FWERT,LWL,RAR,NZPW2)
      DO 4 K=2*K1-1,K2
      W(K)=W(K)+FWERT(K)
4     CONTINUE
      CALL  FW (B-C ,K1,K2,FWERT,LWL,RAR,NZPW2)
      DO 150 K=2*K1-1,K2
      W(K)=W(K)+FWERT(K)
150   CONTINUE
      DO 5 K=2*K1-1,K2
      TB(1,K)=W(K)+EB(K)
       EB(K)=EA(K)
5     CONTINUE
      M = 1
      KK = KK*2
      H(I) = H2
      H2 = H2*0.5
      GO TO 300
 200   DO 250   J = 1,KK,2
      C = J*H1
        CALL FW(A + C,K1,K2,FWERT,LWL,RAR,NZPW2)
      DO 251 K=2*K1-1,K2
      ERG(K)=ERG(K)+ABS(FWERT(K))
      EA(K)=EA(K)+FWERT(K)
251   CONTINUE
250   CONTINUE
      DO 6 K=2*K1-1,K2
      TB(1,K)=EA(K)
6      CONTINUE
      M = 0
      H(I) = H1
       H1 = 0.5   * H1
       IF (I.EQ.1) GOTO 300
       MM = MM*2
  300 DO 7 K=2*K1-1,K2
      TB(1,K)=H(I)*TB(1,K)
7      CONTINUE
       IF   (I.EQ.1) GOTO     410
       IF (I.GT.KZ) GOTO 304
        LL = I
       GO TO 305
304   LL=KZ
 305   DO  350  L = 2,LL
        J = L-1
       N = I-J
       V = H(N)*H(N)/(H(I)*H(I)) -1.
      DO 351 K=K1,K2
      TB(L,K)=TB(J,K)+(TB(J,K)-TA(J,K))/V
351   CONTINUE
350   CONTINUE
      LT=LL-1
      DO 400  J=1,LT
       N = I-J
       V = 1.   + 2.   * H(I) * H(I) / (( H(N) + H(I))*(H(N) - H(I)))
      DO 401 K=2*K1-1,K2
      U(J,K)=(1.+V)*TB(J,K)-V*TA(J,K)
401   CONTINUE
400   CONTINUE
      J = LL - 1
      DO 8 K=2*K1-1,K2
      IF (ERG(K).GT. 1.D-12 ) GO TO 9
    8 CONTINUE
      GO TO 700
    9 V=.0
      DO 14 K=2*K1-1,K2
      V=MAX(V,ABS((TB(LL,K)-U(J,K))/ERG(K)))
14    CONTINUE
       IF ( ABS(V) - EPS)   600,600,410
 700  NF=NF+1
      IF(NF.GE.2) GO TO 600
 410   DO   420  J = 1,10
       DO 421 K=2*K1-1,K2
      TA(J,K)=TB(J,K)
421    CONTINUE
420    CONTINUE
 500   CONTINUE
  600 DO 10 K=2*K1-1,K2
       Z(K)=TB(LL,K)
10     CONTINUE
      RETURN
      END
      SUBROUTINE FW(A,K1,K2,FWERT,LWL,RAR,NZ)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 FUK,FWERT,CI
C
C     Vorbereitung für asomptot. Beiträge:
C     es werden Hankelfunktionen verwendet 
C     es ergeben sich nun weitere Beiträge,
C     vorher:
C     FW(K)=A**(L+1)*EXP(-A*A*PAR(K))*(2GL'*TS'+GL*TS'')
C     FW(K2)=GL**2*TS'**2
C     jetzt:
C     FW(2*K-1)=A**(L+1)*EXP(-A*A*PAR(K))*(2H+'*TS'+H+*TS'')
C     FW(2*K)=A**(L+1)*EXP(-A*A*PAR(K))*(2H-'*TS'+H-*TS'')
C     FW(2*NZ+1)=(H+**2 )*TS'**2
C     FW(2*NZ+2)=(H-**)*TS'**2 
C     FW(2*NZ+3)=(H+*H- )*TS'**2
C     FW(2*NZ+4)=(H-'*H+ - H-*H+')*(2*TS*TS') ohne I !!!!!!
C
C
      INCLUDE 'par/verma'
C
      COMMON /TUT/ KL
C
      COMMON /NA/ NAR(NZPARM,NZKMAX)
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      DIMENSION FWERT(NZPARM+4),RAR(NZPARM,NZKMAX)
      DATA CI/(0.D0,1.D0)/
C
      Q(1,1)=A
      CALL REG(LWL,1)
      CALL COULF(LWL,1)
C
10    DO 11 K=K1,NZ
      AH=A**(LWL+NAR(K,KL)+1)
      FWERT(2*K-1)=AH*EXP(-RAR(K,KL)*A*A) *(2.*FUK(1,3)*TS(1,2)+
     *       FUK(1,2)* TS(1,3))
      FWERT(2*K)=AH*EXP(-RAR(K,KL)*A*A) *((2.*FUK(1,3)-4.*CI*FUK(1,4))*
     *    TS(1,2)+ (FUK(1,2)-2.*CI*FUK(1,1))* TS(1,3))
11    CONTINUE
      FWERT(2*NZ+1)  =(FUK(1,2)**2 )*TS(1,2)**2
      FWERT(2*NZ+2)  =((FUK(1,2) -2.*CI* FUK(1,1))**2)*TS(1,2)**2
      FWERT(2*NZ+3)=(FUK(1,2)**2 -2.*CI*FUK(1,1)*FUK(1,2))*
     *              (TS(1,2)*TS(1,2))
      FWERT(2*NZ+4)=
     *   (FUK(1,4)*FUK(1,2)-FUK(1,1)*FUK(1,3))*(2.*TS(1,1)*TS(1,2))
      RETURN
      END
      SUBROUTINE FWREL(A,K1,K2,FWERT,LWL,RAR,NZ)
c
c     Noch nicht auf H+ und H- umgestellt!!!!!!!!!!!!!!!! hmh
c
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 FUK
C     FW(2K-1)=A**(L+1)*EXP(-A*A*PAR(K))*GL*TS''
C     FW(2K)=A**(L+1)*EXP(-A*A*PAR(K))*(GL'*TS')
C     FW(2K2-1)=GL**2*TS*TS''
C     FW(2K2)=GL*TS*GL*TS'
C
      INCLUDE 'par/verma'
C
      COMMON /TUT/ KL
C
      COMMON /NA/ NAR(NZPARM,NZKMAX)
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      DIMENSION FWERT(2*NZPARM+2), RAR(NZPARM,NZKMAX)
C
      Q(1,1)=A
      CALL REG(LWL,1)
      CALL COULF(LWL,1)
       DO 1 K=MAX0(K1/2,1),NZ/2
      AH=A**(LWL+NAR(K,KL)+1)
      FWERT(2*K-1)=AH*EXP(-RAR(K,KL)*A*A)*FUK(1,2)* TS(1,3)
    1 FWERT(2*K)=AH*EXP(-RAR(K,KL)*A*A) *FUK(1,3)*TS(1,2)
      FWERT(K2-1)=TS(1,3)*TS(1,1)*FUK(1,2)**2
      FWERT(K2)=FUK(1,2)*FUK(1,3)*TS(1,2)*TS(1,1)
      RETURN
      END
      SUBROUTINE ENTWIN (VW,VW1,PQ0,PQ1,PQ2,PQ3,LWL,NAD1)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 FUK,BB,AA1,C, CI, BS,CS,AB1,DAR,AB2,AB11,AB22,
     *           ZZ,VW,PQ0,PQ1,PQ2,PQ3,FZ12,FFZ12,D1,D2,D3,D4,
     *           AA2,AA3,AA4,VW1,V,UX,AH, CNULL
C
      INCLUDE 'par/verma'
      PARAMETER (NDIMP=NDIM*NDIM)
C
      COMMON /PLATZ/ VV(NDIMP)
C
      COMMON /ENT/ RHF, DAR(NDIM,2),NZQ(NZKMAX+1)
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      COMMON /YIN/ IDX(NZPARM+1)
C
      COMMON /RELAS/ FZ12,FFZ12,NR
C
      COMMON  REDM(NZKMAX), KL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA
C
C
      DIMENSION ZZ(2*NZPARM+4), XW(NZPARM+1), SV(NZRWMA,NZPARM),
     *       AH(NZPARM,NZPARM)
      DIMENSION VW(NDIM), V(NZPARM,2), VW1(NDIM),
     *          SW(NZRWMA,NZPARM), UX(NZPARM,NZPARM), PQ0(NZKBMA),
     *          PQ1(NZKBMA), PQ2(NZKBMA),IPIV(NZPARM),PQ3(NZKBMA)
      DIMENSION YS(17)
C
C
      EQUIVALENCE (VV(1),SW(1,1)), (VV(NZPARM*NZRWMA+1),SV(1,1))
C
      EXTERNAL FW,FWREL
C
      CHARACTER*1 TRANS
C
      SAVE YS
C
c     DATA YS/.1,.2,.3,.4,.5,.8,1.2,2.,3.5,6.,9.,15.,30.,50.,100.,200.,
c    * 400. /
      DATA YS/.05,.1,.2,.3,.5,.8,1.1,1.5,2.5,3.5,6.,9.,15.,25.,50.,
     * 100.,200./
      DATA CI/(0.D0,1.D0)/, CNULL/(0.D0,0.D0)/
C
      TRANS= 'N'
C
C       ENTWICKELN DER RADIALFUNKTIONEN
      DO 100 M=1,NZPW2
      READ (NBAND3)((Q(K,MM),K=1,NZRW),MM=1,3)
      READ (NBAND3)((TS(K,MM),K=1,NZRW),MM=1,3)
      IF (M.EQ.1) CALL COULF(LWL,NZRW)
      V(M,1)=.0
      V(M,2)=.0
      IF (NAD1.GT.2 .AND. M.EQ.1) WRITE(NOUT,98)
      DO 100 K=1,NZRW
c     zum ausgeben von hankelfkt. 
c
c     D1=H+, D2=H-, D3=HP-, D4=HP+
c
c     CALL REG(LWL,NZRW)   
c         
c   ts factor regularizes the function
      D1=fuk(k,2)*ts(k,1)
      D2=(fuk(k,2)- 2.*ci*fuk(k,1))*ts(k,1)
      D3=(fuk(k,3)- 2.*ci*fuk(k,4))*ts(k,1)+
     *    (fuk(k,2)- 2.*ci*fuk(k,1))*ts(k,2)
      D4=fuk(k,3)*ts(k,1)+fuk(k,2)*ts(k,2)
c
      IF(NAD1.LT.3)GOTO 95
 98   FORMAT('   Q                     H+                     H-',
     *       '                      HP-                    HP+')
      IF(M.EQ.1) WRITE(NOUT,99) Q(K,1),D1,D2,D3,D4,Q(K,2),
     *               Q(K,3)
 99   FORMAT(12G12.5)
 95   CONTINUE
      V(M,1)=V(M,1)+(D1*Q(K,2)+D4*Q(K,3))
 100  V(M,2)=V(M,2)+(D2*Q(K,2)+D3*Q(K,3))
      READ (NBAND3)   ((UX(M,N),M=1,NZPW2),N=1,NZPW2)
      IFA=0
      READ(NBAND3)((AH(M,N),M=1,NZPW2),N=1,NZPW2),(IPIV(M),M=1,NZPW2)
      CALL ZGETRS(TRANS,NZPW2,2,AH,NZPARM,IPIV,V,NZPARM,IFA)
      IF(IFA.NE.0) WRITE(NOUT, 37) IFA
37    FORMAT(' UX ILLCONDITIONED',2I10)
      DO 44 M=1,NZPW2
      DAR(M+NZQ(KL),1)=V(M,1)
44    DAR(M+NZQ(KL),2)=V(M,2)
      IF(NAD1.GT.0) WRITE(NOUT,757)(M,(DAR(M+NZQ(KL),J)
     1 ,J=1,2),M=1,NZPW2)
757   FORMAT(I5,2X,4G20.12)
C      DAR(.,1) UND DAR(.,2) ENTHAELT DIE ENTWICKLUNGSKOEFIZIENTEN
C      FUER H+ UND H- COULOMBFUNKTION
C      NUMERISCHE BERECHNUNG DER INTEGRALE MIT DER REGULARISIERTEN
C      IRREGULAEREN COULOMBFUKTION, SIEHE DIPLOM-ARBEIT BAUER
      DO 900    M = 1,NZPW2
      VW(M+NZQ(KL))= CNULL
900   VW1(M+NZQ(KL))= CNULL
      PQ0(KL) = CNULL
      PQ1(KL) = CNULL
      PQ2(KL) = CNULL
      PQ3(KL) = CNULL
      A=1.E-12
      HMR=1./REDM(KL)
C     WRITE(NOUT, *) ' HMR',HMR
      K2=NZPW2+1
      READ (NBAND3) (XW(K),K=1,K2)
      KYS=1
31    B=A+YS(KYS)*RHF
      KZ=9
      K1=1
      DO 132 K=1,K2
       IDX(K)=0
      IF(A.GT.XW(K)) GOTO 132
      IDX(K)=1
132   CONTINUE
      DO 133 K=1,K2
      IF(IDX(K).NE.0) GOTO 134
133   CONTINUE
      GOTO 140
134   K1=MIN0(K,NZPW2)
      IF(NR.NE.0) GOTO 138
      CALL YINT(A,B,KZ,ZZ,K1,2*NZPW2+4,LWL,PAR,NZPW2,FW)
      DO 137 K=K1,NZPW2
c     VW(K+NZQ(KL))=VW(K+NZQ(KL))-HMR*ZZ(2*K-1)-CI*HMR*ZZ(2*K)
c     VW1(K+NZQ(KL))=VW1(K+NZQ(KL))-HMR*ZZ(2*K-1)+CI*HMR*ZZ(2*K)
      VW(K+NZQ(KL))=VW(K+NZQ(KL))-HMR*ZZ(2*K-1)
      VW1(K+NZQ(KL))=VW1(K+NZQ(KL))-HMR*ZZ(2*K)
137   CONTINUE      
c     asympt. Beitraege 
      PQ0(KL)=PQ0(KL)+HMR*ZZ(2*NZPW2+1)
      PQ1(KL)=PQ1(KL)+HMR*ZZ(2*NZPW2+2)
      PQ2(KL)=PQ2(KL)+HMR*(ZZ(2*NZPW2+3)-CI*ZZ(2*NZPW2+4))
      PQ3(KL)=PQ3(KL)+HMR*(ZZ(2*NZPW2+3)+CI*ZZ(2*NZPW2+4))
      GOTO 139
138   CALL YINT(A,B,KZ,ZZ,2*K1-1,2*K2,LWL,PAR,2*NZPW2,FWREL)
      stop 'nrel.ne.0  not yet supported'
      DO 237 K=K1,NZPW2
237   VW(K+NZQ(KL))=VW(K+NZQ(KL))-FZ12*ZZ(2*K-1)+FFZ12*ZZ(2*K)
      PQ0(KL)=PQ0(KL)-FZ12*ZZ(2*K2-1)+FFZ12*ZZ(2*K2)
      PQ1(KL)=PQ1(KL)-FZ12*ZZ(2*K2)+FFZ12*ZZ(2*K2+1)
      PQ2(KL)=PQ2(KL)-FZ12*ZZ(2*K2+1)+FFZ12*ZZ(2*K2+2)
      PQ3(KL)=PQ3(KL)-FZ12*ZZ(2*K2+2)+FFZ12*ZZ(2*K2+3)
C     WRITE(NOUT, 40) (ZZ(K),K=1,2*K2)
139   IF(NAD1.GT.2) WRITE(NOUT, 38) KYS,(VW(K+NZQ(KL)),K=1,NZPW2),
     *                              (VW1(K+NZQ(KL)),K=1,NZPW2),
     *                               PQ0(KL),PQ1(KL),PQ2(KL),PQ3(KL)
     *                          ,(ZZ(K),K=2*NZPW2+1,2*NZPW2+4)
      A=B
      KYS=KYS+1
       GOTO 31
140   CONTINUE
      IF(NAD1.LE.0) GOTO 39
      WRITE(NOUT, 38) KYS,(VW(K+NZQ(KL)),K=1,NZPW2),
     *                (VW1(K+NZQ(KL)),K=1,NZPW2),
     *                 PQ0(KL),PQ1(KL),PQ2(KL),PQ3(KL)   
38    FORMAT(' COULINT KYS=',I3,/,(8G15.8))
C       AUSSCHREIBEN DER FUNKTIONSWERTE UND BERECHNEN DER QUADRATISCHEN
C       ABWEICHUNG QAF UND QAG
39    NZRW1=NZRW
C39    NZRW1=NZRW
      READ (NBAND3) ((SW(K,M),K=1,NZRW1),M=1,NZPW2)
      READ (NBAND3) ((SV(K,M),K=1,NZRW1),M=1,NZPW2)
      READ (NBAND3)  (Q(K,1),K=1,NZRW1)
      READ   (NBAND3)   ((TS(K,I),K=1,NZRW1),I=1,2)
      IF(NAD1.LT.0) GOTO 9008
      CALL COULF(LWL,NZRW1)
      IF(NAD1.GT.1)      WRITE (NOUT,1200) KL
 1200 FORMAT(//35H DARSTELLUNG DER STREUFUNKTIONEN IM,I3,10H TEN.KANAL//
     1 ' R (FM)       H+(KR)                  H-(KR)                 '    
     1 ,'  HP-(KR)                  HP+(KR)             T-1   ',
     1  //  ' R (FM)       H+(KR) APP              H-(KR) APP     '
     1 ,'          HP- APP                  HP+ APP             T-1  '
     1 ,    '  ',/)
      AB11=0.
      AB22=0.
      BB11=0.
      BB22=0.
      DO 27  K=1,NZRW1
c  
      aa1=fuk(k,2)*ts(k,1)
      aa2=(fuk(k,2)- 2.*ci*fuk(k,1))*ts(k,1)
      aa3=(fuk(k,3)- 2.*ci*fuk(k,4))*ts(k,1)+
     *    (fuk(k,2)- 2.*ci*fuk(k,1))*ts(k,2)
      aa4=fuk(k,3)*ts(k,1)+fuk(k,2)*ts(k,2)
c
      BB=.0
      C=0.
      BS=0.
      CS=0.
      DO 28  M=1,NZPW2
      BB= BB+DAR(M+NZQ(KL),1)*SW(K,M)
      BS=BS+DAR(M+NZQ(KL),1)*SV(K,M)
      CS=CS+DAR(M+NZQ(KL),2)*SV(K,M)
   28 C = C+DAR(M+NZQ(KL),2)*SW(K,M)
C     REAL- UND IMAGINAERTEILE WERDEN GETRENNT BETRACHTET FUER QAF
      BB1=(ABS(AA1))**2
      BB2=(ABS(AA2))**2
      AB1 =DCMPLX(DREAL(AA1-BB)**2,DIMAG(AA1-BB)**2)
      AB2 =DCMPLX(DREAL(AA2-C)**2,DIMAG(AA2-C)**2)
      AB11=AB11+AB1
      AB22=AB22+AB2
      BB11=BB11+BB1
      BB22=BB22+BB2
      IF(NAD1.LT.2) GOTO 27
      B1=TS(K,1) - 1.
      WRITE(NOUT,1201)Q(K,1),AA1,AA2,AA3,AA4,B1
      WRITE(NOUT,1201)Q(K,1),BB,C,CS,BS,B1
27    CONTINUE
      AB11=AB11/BB11
      AB22=AB22/BB22
      WRITE(NOUT,7058) AB11,AB22
7058  FORMAT(2X,7H RQAF =,E12.4,2X,7H IQAF =,E12.4, 
     *       2X,7H RQAG =,E12.4,2X,7H IQAG =,E12.4)
1201  FORMAT(1F7.4,1X,1P17E12.4)
9008  RETURN
      END
      SUBROUTINE REG(L,LL)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 FUK
C
      INCLUDE 'par/verma'
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      COMMON /REGC/ BETA0, FAK(37)
C
      L2= L + L
      FL1=DBLE(L+1)
C      REG BERECHNET REGULARISIERUNGSFAKTOR TS=1-EXP(BETA0*R)*SUMME
      DO 100 K=1,LL
      R=Q(K,1)
      BETAR=R*BETA0
      Y=BETAR**L2
      IF(BETAR.LT.600.) GOTO 1
      P1=0.
      TS(K,1)=1.
      GOTO 20
1     P1=EXP(-BETAR)
      IF(BETAR.GT.FL1) GOTO 4
      IH=5.*BETAR/FL1
      LDOE=10+IH
      P2=1.
      X=1.
      DO 2  J=1,LDOE
      X=X*BETAR
2     P2=P2+X/FAK(L2+2)*FAK(L2+2+J)
      TS(K,1)=P2*FAK(L2+2)*P1*Y*BETAR
      GOTO 20
4     IF(L2.NE.0) GOTO 6
      TS(K,1)=1.-P1
      TS(K,2)=BETA0*P1
      TS(K,3)=-BETA0*(BETA0*P1)
      GOTO 100
6     P2=0.
      X=1.
      DO 8 J=1,L2
      X=X*BETAR
8     P2=P2+X*FAK(J+1)
      TS(K,1)=1.-P1-P1*P2
20    TS(K,2)=P1*Y*FAK(L2+1)*BETA0
      TS(K,3)=P1*Y*FAK(L2+1)*BETA0*(DBLE(L2)/BETAR-1.)*BETA0
100    CONTINUE
      RETURN
      END
      SUBROUTINE RRANDB(SMAT,IBESS)
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'par/verma'
C
      COMPLEX*16 SMAT,HSPP,HSPM,HSMP,HSMM,W1,W2,XSGG,AM,Z,ZB,ENERGI,
     *           FUK,SP,SC,SR,SQ,SS,ST,AN1,CNULL,CI,D,AMB,CRIMA, ZX
      COMPLEX*16 DKO,SKO,SKOF,ZXL
      CHARACTER HTEX*3
C
      COMMON /RRC/ YY(NZKBMA,NZKBMA), ST(NDIM,NZKBMA), SS(NDIM,NZKBMA),
     *             SP(NZKBMA,NZKBMA), SQ(NZKBMA,NZKBMA), RQ(NDIM),
     *             SR(NZKBMA,NZKBMA), SC(NZKBMA,NZKBMA), ENERGI
C
      COMMON /NAD0/ NAD5, NAD6, NAD7, IBAC
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      COMMON  REDM(NZKMAX), KL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA, IWEFU, NBAND9, IPLO, LWERT(NZKMAX),RRAD(NZKMAX)
C    
      COMMON /DEK/ am(NZKBMA,NZKBMA), z(NZKBMA,NZKBMA),
     *              D(NDIM,NZKBMA),
     1          DKO(NZKBMA+NDIM,NZKBMA),SKO(NZKBMA+NDIM,NZKBMA+NDIM),
     1          SKOF(NZKBMA+NDIM,NZKBMA+NDIM),
     1          ZXL(NZKBMA+NDIM,NZKBMA)
C
      DIMENSION SMAT(NZKBMA,NZKBMA,2),
     *          HSPP(NZKBMA,NZKBMA), HSPM(NZKBMA,NZKBMA), 
     *          HSMM(NZKBMA,NZKBMA), HSMP(NZKBMA,NZKBMA),
     *          HSFF(NZKBMA,NZKBMA), 
     *          ZX(NZKBMA,NZKBMA),W111(NZKBMA),
     *          W1(NZKBMA,NZKBMA),W2(NZKBMA,NZKBMA),
     *          XSGG(NZKBMA,NZKBMA),W22(NZKBMA),
     *          XSGGR(NZKBMA,NZKBMA),
     *          amb(NZKBMA,NZKBMA),
     *          zb(NZKBMA,NZKBMA),
     *          AMAT(NZKBMA,NZKBMA)
      DIMENSION ZC(NZKBMA,NZKBMA), ZZ(NZKBMA,NZKBMA),
     *          ZZB(NZKBMA,NZKBMA),HTEX(9),BCOS(NZKBMA),
     *          BSIN(NZKBMA),BPHAS(NZKBMA)
      CHARACTER*1 TRANS
C
      SAVE /DEK/
C
      DATA HTEX/'HPP','HPM','HMP','HMM','AM','AMB','SMA','ZB','Z'/
      DATA CI/(0.D0,1.D0)/, CNULL/(0.D0,0.D0)/, CEINS/(1.D0,0.D0)/
C
      TRANS= 'N'
122    FORMAT(1X,16F10.5)
26      FORMAT(' EIGENPHASEN')
   27 FORMAT(' EIGENVEKTOREN ZEILENWEISE',/)
      W0=.0
      NO=NZAOK
      NX=NZPWX
c
      DO 2  L=1,NO
      DO 2  K=1,NO
      HSMM(K,L)=SQ(K,L)
      HSPM(K,L)=SC(K,L)
      HSMP(K,L)=SP(K,L)
      HSPP(K,L)=SR(K,L)
      DO 200 M=1,NX
      AN1=1.D0/(ENERGI-RQ(M))
      HSMM(K,L)=HSMM(K,L)+ST(M,K)*ST(M,L)*AN1
      HSPM(K,L)=HSPM(K,L)+SS(M,K)*ST(M,L)*AN1
      HSMP(K,L)=HSMP(K,L)+ST(M,K)*SS(M,L)*AN1
      HSPP(K,L)=HSPP(K,L)+SS(M,K)*SS(M,L)*AN1
200   CONTINUE
 2    CONTINUE
c
      IF(NAD7.LT.4) GO TO 339
      CALL WRIMATC(HSPP,NZKBMA,NO,HTEX(1))
      CALL WRIMATC(HSPM,NZKBMA,NO,HTEX(2))
      CALL WRIMATC(HSMP,NZKBMA,NO,HTEX(3))
      CALL WRIMATC(HSMM,NZKBMA,NO,HTEX(4))
 339  CONTINUE
C
C     Bestimmung der S-Matrix
      IF(NAD7.GT.2) WRITE(NOUT,*) ' DIREKTE VARIATION S-MATRIX'
      DO 4  I=1,NO
      DO 4  K=1,NO
      W2(K,I)=HSPM(K,I)
 4    CONTINUE
      DO 7  LL=1,NO
      DO 7  KK=1,NO
      XSGG(KK,LL)=HSPP(KK,LL)
7     CONTINUE
      IFA=0
      CALL ZGETRF(NO,NO,XSGG,NZKBMA,IPIV,IFA)
      IF(IFA.NE.0) STOP 7
      CALL ZGETRS(TRANS,NO,NO,XSGG,NZKBMA,IPIV,W2,NZKBMA,IFA)
      IF(IFA.NE.0) STOP 3
      DO 3  I=1,NO
      DO 3  K=1,NO
    3 AM(K,I)=W2(K,I)
      IF(NAD7.GT.2) CALL WRIMATC(AM,NZKBMA,NO,HTEX(5))
C     AM IST DIE DIREKT BERECHNETE TRANSPONIERTE S-MATRIX
      DO 6  L=1,NO
      DO 6  K=1,NO
      Z(K,L)=CI *HSMM(K,L)
      DO 6  M=1,NO
      Z(K,L)=Z(K,L)-CI *AM(M,K)*HSPM(M,L)
6     CONTINUE
C
      IF(NAD7.GT.1) WRITE(NOUT,*) ' VOLLE S-MATRIX'
      DO 55 L=1,NO
      IF(NAD7.GT.1) WRITE(NOUT,608)(Z(L,LH),LH=1,L)
608   FORMAT(1X,10F7.4)      
      DO 55 K=1,NO
 55    SMAT(K,L,1)=Z(K,L)   
c
      IF(NAD7.GT.2) WRITE(NOUT,*) ' DIREKTE VARIATION SINV-MATRIX'
      DO 104 I=1,NO
      DO 104 K=1,NO
      W2(K,I)=HSMP(K,I)
104    CONTINUE
      DO 107  LL=1,NO
      DO 107  KK=1,NO
      XSGG(KK,LL)=HSMM(KK,LL)
107     CONTINUE
      IFA=0
      CALL ZGETRF(NO,NO,XSGG,NZKBMA,IPIV,IFA)
      IF(IFA.NE.0) STOP 107
      CALL ZGETRS(TRANS,NO,NO,XSGG,NZKBMA,IPIV,W2,NZKBMA,IFA)
      IF(IFA.NE.0) STOP 103
      DO 103  I=1,NO
      DO 103  K=1,NO
  103 AMB(K,I)=W2(K,I)
      IF(NAD7.GT.2) CALL WRIMATC(AMB,NZKBMA,NO,HTEX(6))
C     AMB IST DIE DIREKT BERECHNETE TRANSPONIERTE SINV-MATRIX
C
      DO 106  L=1,NO
      DO 106  K=1,NO
      ZB(K,L)=-CI *HSPP(K,L)
      DO 106  M=1,NO
      ZB(K,L)=ZB(K,L)+CI *AMB(M,K)*HSMP(M,L)
106     CONTINUE
C
      IF(NAD7.GT.1) WRITE(NOUT,*) ' VOLLE SINV-MATRIX'
      DO 204 I=1,NO
      DO 204 K=1,NO
      W2(K,I)=CNULL
      IF(I.EQ.K) W2(K,K)=1.
204    CONTINUE
      DO 207  LL=1,NO
      DO 207  KK=1,NO
      XSGG(KK,LL)=ZB(KK,LL)
207     CONTINUE
      IFA=0
      CALL ZGETRF(NO,NO,XSGG,NZKBMA,IPIV,IFA)
      IF(IFA.NE.0) STOP 207
      CALL ZGETRS(TRANS,NO,NO,XSGG,NZKBMA,IPIV,W2,NZKBMA,IFA)
      IF(IFA.NE.0) STOP 203
      DO 203  I=1,NO
      DO 203  K=1,NO
  203 SMAT(K,I,2)=W2(K,I)
      IF(NAD7.GT.2) CALL WRIMATC(W2,NZKBMA,NO,HTEX(7))
      DO 155 L=1,NO
      DO 155 K=1,NO
155    ZB(K,L)=SMAT(K,L,2)

      CALL SMATEST(SMAT,NO,NAD7,IBESS)
C
C     SMAT * SMAT(INVERS)= 1 !!! FUER REELLE ENERGIEN
C    
      DO 41  L=1,NO
      DO 41  K=1,NO
      ZX(K,L)= CNULL
      DO 41  M=1,NO
41    ZX(K,L)=ZX(K,L)+AM(K,M)*CONJG(AM(L,M))
      WRITE(NOUT,45)
45    FORMAT(/,'  KONTROLLMAT S-DIREKT')
      DO 42  K=1,NO
42    WRITE(NOUT,122) (ZX(L,K),L=1,K)
C
C     SMAT * SMAT(INVERS)= 1 !!! FUER REELLE ENERGIEN VOLLE S-MATRIX
C    
      DO 441  L=1,NO
      DO 441  K=1,NO
      ZX(K,L)= CNULL
      DO 441  M=1,NO
441    ZX(K,L)=ZX(K,L)+Z(K,M)*CONJG(Z(L,M))
      WRITE(NOUT,445)
445    FORMAT(/,'  KONTROLLMAT VOLLE S-MATRIX')
      DO 442  K=1,NO
442    WRITE(NOUT,122) (ZX(L,K),L=1,K)
C
C
      IF (NAD5.EQ.0) GO TO 4711
        CALL AMATRI(Z,YY,AMAT,NO)
      DO 43 L=1,NO
      DO 43 K=1,NO
 43   ZZ(K,L)=AMAT(K,L)
      CALL HDIAG( NO,0,M,ZZ,HSFF,NZKBMA)
      DO 60   K = 1,NO
 60   ZZ(K,K) = 57.295779513D0 * ATAN(ZZ(K,K))
      WRITE(NOUT,26)
      WRITE(NOUT,122) (ZZ(K,K),K=1,NO)
      WRITE(NOUT,27)
      DO 61   K = 1,NO
   61  WRITE(NOUT,122)   (HSFF(L,K),L=1,NO)
      IF(IBAC.LE.0) GOTO 4711
      DO 66 KL=1,NO
      Q(1,1)=RRAD(KL)
      LWL=LWERT(KL)
      CALL COULF(LWL,1)
      HX=1./ABS(FUK(1,2))
      BCOS(KL)=DREAL(FUK(1,2))*HX
      BSIN(KL)=DREAL(FUK(1,1))*HX
c 180/Pi = 57.29...
66    BPHAS(KL)= 57.295779513D0 * ATAN2(BSIN(KL),BCOS(KL))
      WRITE(NOUT,123)(BPHAS(K),K=1,NO)
123   FORMAT(' BACKGROUNDPHASEN ',(1X,10F10.4))
      DO 70 J=1,NO
      DO 69 K=1,NO
      ZZB(K,J)=-AMAT(K,J)*BSIN(J)
69    ZZ(K,J)=AMAT(K,J)*BCOS(J)
      ZZB(J,J)=ZZB(J,J)+BCOS(J)
70    ZZ(J,J)=ZZ(J,J)+BSIN(J)
72    DO 73 I=1,NO
      DO 74  K=1,NO
74    W111(K)=ZZ(K,I)
      DO 77  KK=1,NO
      DO 77  LL=1,NO
77    XSGGR(LL,KK)=ZZB(KK,LL)
      CALL RLG1(XSGGR,W111,W22,NO)
      DO 73  K=1,NO
   73 ZC(K,I)=W22(K)
C     ZC IST DIE TRANSFORMIERTE K-MATRIX
      CALL HDIAG( NO,0,M,ZC,HSFF,NZKBMA)
      DO 80   K = 1,NO
80    ZC(K,K) = 57.295779513D0 * ATAN(ZC(K,K))
      WRITE(NOUT,26)
      WRITE(NOUT,122) (ZC(K,K),K=1,NO)
      WRITE(NOUT,27)
      DO 81   K = 1,NO
   81  WRITE(NOUT,122)   (HSFF(L,K),L=1,NO)
4711  CONTINUE
      RETURN
      END
      SUBROUTINE SMATEST(SMAT,NO,NAD7,IBESS)
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'par/verma'
C
      COMPLEX*16 SMAT(NZKBMA,NZKBMA,2), ZX(NZKBMA,NZKBMA),
     *           CNULL,CEINS,CDEL
      DIMENSION A(2)
      DATA CNULL/(0.D0,0.D0)/,CEINS/(1.D0,0.D0)/
      DO 10 I=1,2
      A(I)=0.
      IF(NAD7.GT.2) WRITE(NOUT,*)' S-MATRIX',I,' UNITARITY TEST'
      DO 5 L=1,NO
      DO 4 K=1,NO
      ZX(K,L)=CNULL
      CDEL=CNULL
      DO 3 M=1,NO
      ZX(K,L)=ZX(K,L)+SMAT(K,M,I)*CONJG(SMAT(L,M,I))
3     CONTINUE
      IF(K.EQ.L) CDEL=CEINS
      A(I)=A(I)+ (ABS(ZX(K,L) - CDEL))
4     CONTINUE
      IF(NAD7.GT.2) WRITE(NOUT,15)(ZX(K,L),K=1,NO)
15    FORMAT(12F10.5)
5     CONTINUE
10    CONTINUE
      IBESS=1
      IF(A(2).LT.A(1)) IBESS=2
      WRITE(NOUT,100) A(1),A(2),IBESS
100   FORMAT(/,' QUADRATISCHE ABWEICHUNG DER S-MATRIZEN ',F10.5,
     *   ' UND ',F10.5 ,', DIE ',I3,'.TE IST BESSER')
      RETURN
      END
      SUBROUTINE SUCH(B1,NN ,B3,NZRW,FR)
      IMPLICIT REAL*8(A-H,O-Z)
C      SUCH SUCHT DAS MAXIMUM DER FUNKTION F(X)=X**NN*EXP(-B1*X*X-B3*X)
C       SUCH BESTIMMT XR SO DASS F(XR)=MAX(F(X))*10**-10,FR=XR/NZRW
      C = .1
      D1 = (C**NN) * EXP(-B1*C*C-B3*C)
      D3 = D1
    6 C = C + .1
      D2 = (C**NN) * EXP(-B1*C*C-B3*C)
      D3 = MAX(D2,D3)
      IF(D2-D1)    1,2,2
    1 IF (D2-(1.E-9)*D3) 3,3,2
    3 FR = C/ DBLE(NZRW)
      RETURN
    2 D1 = D2
       GO TO 6
      END
      SUBROUTINE COULF(L,NZRW)  
C 
C     Einbauen der Complexen Coulombfkt. COULCC
C     Fuer mode1=11 werden F und H+ berechnet und in FUK zurueckgegeben h.m.h
C
      IMPLICIT REAL*8(A-H,O-Z)
C
      COMPLEX*16 XX,ETA1,ZLMIN,FC(50),GC(50),FCP(50),GCP(50),
     X           SIG(50),FUK,ETA,EK,WK,WEFNOR,FF
C 
C
      INCLUDE 'par/verma'
C
      COMMON /COUL/ RHG, WEFNOR(NZKBMA), EK(NZKBMA), ETA(NZKBMA)
C
      COMMON  REDM(NZKMAX), KL
C
C     RHG (Eingabe in INVER)
C     EK = SQRT(Energie*reduzierte Masse)
C     WEFNOR=(4.*Energie/red.Masse)**(-.25)
C     ETA(K) = E2K(K)/EK(K)
C
C     REDM (reduzierte Masse)
C     KL sind die Kanaele
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      ETA1=ETA(KL)
      RL=L
      ZLMIN=DCMPLX(RL,.0D0)
C
      DO 100 M=1,NZRW
      XX=Q(M,1)*EK(KL)
      FF = WEFNOR(KL)
      WK =EK(KL)
C
c       aus main:
c       WEFNOR(K)=(REDM(K)/(2.*EK2))**.5
C
      KFN= 0
      IFAIL=1
      N1=1
      MODE1=11
       sig(1)=0.
      CALL COULCC(XX,ETA1,ZLMIN,N1,FC,GC,FCP,GCP,SIG,MODE1,KFN,IFAIL)
       IF(IFAIL.NE.0) WRITE(NOUT,112) IFAIL,XX,ETA1,ZLMIN,FF
  112  FORMAT('PROBLEME:',I3,8F12.8)
c
c      FUK(M,1)=FC(1)
c      FUK(M,2)=H+(1)
c      FUK(M,3)=H+P(1) P='(Ableitung)
c      FUK(M,4)=FCP(1)
c
      FUK(M,1)=FC(1)*FF
      FUK(M,2)=GC(1)*FF
      FUK(M,3)=GCP(1)*FF*WK
      FUK(M,4)=FCP(1)*FF*WK
100   CONTINUE
C     ABLEITUNG NACH R, NICHT RHO=K*R
      RETURN
      END
      SUBROUTINE AMATRI(A,B,AMAT,NO)
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'par/verma'
C
      COMPLEX*16 CU,CV,CW,CC,A, CI, CNULL
C
      DIMENSION A(NZKBMA,NZKBMA), B(NZKBMA,NZKBMA), CV(NZKBMA),
     *          AMAT(NZKBMA,NZKBMA), CU(NZKBMA,NZKBMA),
     *          CW(NZKBMA)
      DATA CI/(0.D0,1.D0)/, CNULL/(0.D0,0.D0)/
C     A-METHODE: A=S-MATRIX, B=EINHEITSMATRIX
      DO 10 I=1,NO
      DO 11 M=1,NO
      CV(M)= CNULL
      DO 11 N=1,NO
   11 CU(N,M)=A(M,N)+B(M,N)
      CV(I)=DCMPLX(1.,0.)
      CALL CLG(CU,CV,CW,NO)
      DO 10 M=1,NO
      AMAT(M,I)=.0
      DO 10 N=1,NO
      CC=A(M,N)-B(M,N)
   10 AMAT(M,I) = AMAT(M,I)-CI *CC*CW(N)
      RETURN
      END
      SUBROUTINE RLG1(U,V,VZ,N)
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'par/verma'
C
      DIMENSION U(NZKBMA,NZKBMA), V(NZKBMA), VZ(NZKBMA)
C
C     SUBROUTINE ZUR LOESUNG REELLER LINEARER GLEICHUNGEN U*X=V
C      LOESUNG IN VZ ORDNUNG N
      N1=N-1
      IF (N1) 200,200,201
201   CONTINUE
      DO 1 K=1,N1
      A=0
      M=0
      DO 2 L=K,N
      IF( ABS(U(K,L))-A)   2,3,3
    3 A =  ABS(U(K,L))
      M=L
    2 CONTINUE
      IF (M-K) 4,5,4
    4 DO 6 L=K,N
      A=U(L,K)
      U(L,K)=U(L,M)
    6 U(L,M)=A
      A=V(K)
      V(K)=V(M)
      V(M)=A
5     K1=K+1
      DO 10  L=K1,N
      A=U(K,L)/U(K,K)
      U(K,L)=0.
      V(L)=V(L)-A*V(K)
      DO 10 M=K1,N
   10 U(M,L)=U(M,L)-A*U(M,K)
    1 CONTINUE
  200 VZ(N)=V(N)/U(N,N)
      IF(N1) 202,202,203
  203 DO 20 K=1,N1
      KK=N-K+1
      A=0
      DO 21 L=KK,N
   21 A=A+U(L,KK-1)*VZ(L)
   20 VZ(KK-1)=(V(KK-1)-A)/U(KK-1,KK-1)
  202 RETURN
      END
      SUBROUTINE CLG(T,V,VZ,N)
      IMPLICIT REAL*8(A-H,O-Z)
C
      INCLUDE 'par/verma'
C
      COMPLEX*16 T, V, VZ, A
C
      DIMENSION T(NZKBMA,NZKBMA), V(NZKBMA), VZ(NZKBMA)
C
      N1=N-1
      IF (N1) 200,200,201
201   CONTINUE
      DO 1 K=1,N1
      B = .0
      M=0
      DO 2 L=K,N
      C = DREAL(T(K,L))**2 + DIMAG(T(K,L))**2
      IF(C-B)  2,3,3
    3 B = C
      M=L
    2 CONTINUE
      IF (M-K) 4,5,4
    4 DO 6 L=K,N
      A=T(L,K)
      T(L,K)=T(L,M)
    6 T(L,M)=A
      A=V(K)
      V(K)=V(M)
      V(M)=A
    5 K1=K+1
      DO 10 L=K1,N
      A=T(K,L)/T(K,K)
      T(K,L) = DCMPLX(.0,.0)
      V(L)=V(L)-A*V(K)
      DO 10 M=K1,N
   10 T(M,L)=T(M,L)-A*T(M,K)
    1 CONTINUE
  200 VZ(N)=V(N)/T(N,N)
      IF(N1) 202,202,203
  203 DO 20 K=1,N1
      KK=N-K+1
      A = DCMPLX(.0,.0)
      DO 21 L=KK,N
   21 A=A+T(L,KK-1)*VZ(L)
   20 VZ(KK-1)=(V(KK-1)-A)/T(KK-1,KK-1)
  202 RETURN
      END
      SUBROUTINE RLG(U,VV,W,N,NN)
      IMPLICIT REAL*8(A-H,O-Z)
C     SUBROUTINE ZUR LOESUNG REELLER LINEARER GLEICHUNGEN  U*X=VV(.,NN)
C      LOESUNG WIRD IN W(.,NN) GESPEICHERT
C
      INCLUDE 'par/verma'
C
      DIMENSION V(NDIM), VZ(NDIM), U(NDIM,NDIM),
     *          VV(NDIM), W(NDIM,NDIM)
C
      N1=N-1
      DO 30   K=1,N
   30 V(K) = VV(K)
      IF (N1) 200,200,201
201   CONTINUE
      DO 1 K=1,N1
      A=0
      M=0
      DO 2 L=K,N
      IF( ABS(U(K,L))-A)   2,3,3
    3 A =  ABS(U(K,L))
      M=L
    2 CONTINUE
      IF (M-K) 4,5,4
    4 DO 6 L=K,N
      A=U(L,K)
      U(L,K)=U(L,M)
    6 U(L,M)=A
      A=V(K)
      V(K)=V(M)
      V(M)=A
    5 K1=K+1
      DO 10 L=K1,N
      A=U(K,L)/U(K,K)
      U(K,L)=0
      V(L)=V(L)-A*V(K)
      DO 10 M=K1,N
   10 U(M,L)=U(M,L)-A*U(M,K)
    1 CONTINUE
  200 VZ(N)=V(N)/U(N,N)
      IF(N1) 202,202,203
  203 DO 20 K=1,N1
      KK=N-K+1
      A=0
      DO 21 L=KK,N
   21 A=A+U(L,KK-1)*VZ(L)
   20 VZ(KK-1)=(V(KK-1)-A)/U(KK-1,KK-1)
  202 DO 40   K=1,N
   40 W(K,NN) = VZ(K)
      RETURN
      END
      SUBROUTINE DEKOF(NAD1)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 A,SP,SC,SR,SQ,SS,ST,ENERGI,AN,D,ZW,
     *            CNULL,  SKO, DKO, SKOF, ZXL, CWORK
C   BERECHNUNG DER KOEFFIZIENTEN D DURCH INVERSION, SIEHE
C   J.CHEM.PHYS.88(1988)6233 H.M.H.     
C
      INCLUDE 'par/verma'
C
      COMMON /APC/ FRR, BUM(NZKBMA), NZP(NZKMAX), WNORM(NZKMAX),
     *             NZKA, NZKB
C
      COMMON /RRC/ YY(NZKBMA,NZKBMA), ST(NDIM,NZKBMA), SS(NDIM,NZKBMA),
     *             SP(NZKBMA,NZKBMA), SQ(NZKBMA,NZKBMA), RQ(NDIM),
     *             SR(NZKBMA,NZKBMA), SC(NZKBMA,NZKBMA), ENERGI
C
      COMMON  REDM(NZKMAX), KL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA
C
      COMMON /DEK/ A(NZKBMA,NZKBMA,2), D(NDIM,NZKBMA),
     1          DKO(NZKBMA+NDIM,NZKBMA),SKO(NZKBMA+NDIM,NZKBMA+NDIM),
     1          SKOF(NZKBMA+NDIM,NZKBMA+NDIM),
     1          ZXL(NZKBMA+NDIM,NZKBMA)

C
      COMMON /NAD0/ NAD5, NAD6, NAD7, IBAC
C
      COMMON /EVEC/ EV(NDIM,NDIM)
C
      DIMENSION ZW(NDIM,NZKBMA), RWORK(NZKBMA+NDIM), CWORK(NZKBMA+NDIM),
     *          FERR(NZKBMA+NDIM), RXW(NZKBMA+NDIM), CXW(NZKBMA+NDIM),
     *          BERR(NZKBMA+NDIM), IPIV(NZKBMA+NDIM)
C
      SAVE /DEK/
      CHARACTER*1 FACT, TRANS, EQUED
      DATA  CNULL/(0.D0,0.D0)/
C
      DO 7045   K = 1,NZAOK
      DO 7044   L = 1,NZAOK
      SKO(L,K)=SR(L,K)
      DKO(L,K)=SC(L,K)
7044  CONTINUE      
7045  CONTINUE      
      DO 7050 L=1,NZAOK 
      DO 7048 I=1,NZPWX
      dko(i+nzaok,l)=st(i,l)
      sko(i+nzaok,l)=ss(i,l)
      sko(l,i+nzaok)=ss(i,l)
 7048 CONTINUE
 7050 CONTINUE
      DO 7059 I=1,NZPWX
      DO 7058 J=1,NZPWX
      SKO(J+NZAOK,I+NZAOK)=CNULL
 7058 CONTINUE
       SKO(I+NZAOK,I+NZAOK)=RQ(I)-ENERGI
 7059 CONTINUE
      FACT='n'
      TRANS='N'
      CALL ZGESVX(FACT,TRANS,NZAOK+NZPWX,NZAOK,SKO,NZKBMA+NDIM,SKOF,
     * NZKBMA+NDIM,IPIV,EQUED,RXW,CXW,DKO,NZKBMA+NDIM,ZXL,NZKBMA+NDIM,
     * RCOND,FERR,BERR,CWORK,RWORK,INFO)
c      do i=1,2
c      write(nout,*)i,'sko',(sko(i,j),j=1,2)
c      end do
c      write(nout,*)'dko',(dko(j,1),j=1,2)
c      write(nout,*) 'info',info
c      write(nout,*) 'zxl', (zxl(1,1))
       do j=1,nzaok
       write(nout,*) 'zxl', (zxl(j,i),i=1,nzaok)
       end do
c
      DO 7120 I=1,NZPWX
      DO 7131 L=1,NZAOK
      ZW(I,L)=0.
      DO 7130 J=1,NZPWX
      ZW(I,L)=ZW(I,L)+ZXL(J+NZAOK,L)*EV(I,J)
7130    CONTINUE
7131    CONTINUE
7120    CONTINUE
      DO 7140 L=1,NZAOK
      I=0
      DO 7140 KL=1,NZKA
      NZPW=NZP(KL)
      DO 7140 IH=1,NZPW
      I=I+1
7140    D(I,L)=-ZW(I,L)/WNORM(KL)
      IF(NAD1.LE.0) GOTO 1
      WRITE(NOUT,1000)
1000  FORMAT(1X,'D-KOEFFIZIENTEN')
      WRITE(NOUT,1001)((D(I,L),I=1,NZPWX),L=1,NZAOK)
1001  FORMAT(1X,10G12.6)
1     CONTINUE
      RETURN
      END
      SUBROUTINE WEFU(MZAE)
      IMPLICIT REAL*8(A-H,O-Z)
      COMPLEX*16 A,FUK,DAR,EMOM,EK,ETA,WEFNOR,D,CWF,CWF1,
     *           WF1,WF2,WF3,WF4,WF5 ,EIHALF, CI,CWFMINUS
      COMPLEX*16 DKO,SKO,SKOF,ZXL
C     AUSGABE DER WELLENFUNKTION
C
      INCLUDE 'par/verma'
      PARAMETER (NDIMP=NDIM*NDIM)
C
      CHARACTER METH*10
C
      COMMON /ENT/ RHF, DAR(NDIM,2),NZQ(NZKMAX+1)
C
      COMMON /APC/ FRR, BUM(NZKBMA), NZP(NZKMAX), WNORM(NZKMAX),
     *             NZKA, NZKB
C
      COMMON /PLO/ CWF1(NZKBMA,NZKMAX,NZPARM), EMOM(NZKBMA),
     *  NENTK(NZKMAX), MTDLL1
C
      COMMON /COUL/ RHG, WEFNOR(NZKBMA), EK(NZKBMA), ETA(NZKBMA)
C
      COMMON  REDM(NZKMAX), KLKLKL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA, IWEFU, NBAND9, IPLO, LWERT(NZKMAX),RRAD(NZKMAX)
C
      COMMON /QX/ Q(NZRWMA,3),FUK(NZRWMA,4),TS(NZRWMA,3)
C
      COMMON /DEK/ A(NZKBMA,NZKBMA,2), D(NDIM,NZKBMA),
     1          DKO(NZKBMA+NDIM,NZKBMA),SKO(NZKBMA+NDIM,NZKBMA+NDIM),
     1          SKOF(NZKBMA+NDIM,NZKBMA+NDIM),
     1          ZXL(NZKBMA+NDIM,NZKBMA)
C
      COMMON /RMATSTO/ SWCA(NZPARM,NZKMAX), 
     *       ASYHAM(NZPARM,NZPARM,NZKMAX), ASYNOR(NZPARM,NZPARM,NZKMAX),
     *       E2K(NZKMAX), BNORM, J_RMAT
C
      DIMENSION CWF(NZKBMA,NZKMAX,NZPARM), METH(2), SW(NZRW,NZPARM),
     *          CWFMINUS(NZKBMA,NZKMAX,NZPARM)
C
      SAVE METH, EIHALF, CI
C
      DATA METH/'S-DIREKT  ','S-INVERS  '/
      DATA EIHALF/(0.D0,0.5D0)/,CI/(0.D0,1.0D0)/
C
      NO=NZAOK
      WRITE(NELMA)((A(K,L,1),L=1,NO),K=1,NO)
      WRITE(NELMA)((A(K,L,2),L=1,NO),K=1,NO)
      DO 1 MTD=1,2
      WRITE(NOUT,1001)METH(MTD)
1001  FORMAT(1X,A10)
      DO 101 I=1,NO
      DO 101 J=1,NZKA
      DO 101 M=1,NZPARM
      CWFMINUS(I,J,M)=0.
      CWF1(I,J,M)=0.
101   CWF(I,J,M)=0.
      DO 10 KK=1,NO
      I=0
       DO 20 KL=1,NO
      DEL =0.
      IF(KL.EQ.KK) DEL=1.
      NZPW=NZP(KL)
      DO 21 M=1,NZPW
      I=I+1
C   i/2( h(-) - S*h(+) + L2-Fkt )
      CWF(KK,KL,M)=EIHALF*(DAR(M+NZQ(KL),2)*DEL-DAR(M+NZQ(KL),1)
     1  *A(KK,KL,MTD)+D(I,KK))
      CWFMINUS(KK,KL,M)=EIHALF*(DAR(M+NZQ(KL),2)*DEL-DAR(M+NZQ(KL),1)
     1  *A(KK,KL,MTD)+D(I,KK))*A(KK,KL,MTD)
21    CONTINUE
20    CONTINUE
       IF(NO.EQ.NZKA) GOTO 10
       DO 22 KL=NO+1,NZKA
       NZPW=NZP(KL)
       DO 22 M=1,NZPW
       I=I+1
       CWF(KK,KL,M)=CWF(KK,KL,M)+EIHALF*D(I,KK)
22     CWFMINUS(KK,KL,M)=CWFMINUS(KK,KL,M)+EIHALF*D(I,KK)
10     CONTINUE
       DO 70 K=1,NO
       DO 69 L=1,NZKA
       NZPW=NZP(L)
      IF(IWEFU.GT.1) THEN
                     WRITE(NOUT,1000) K,L,NZPW,NO,NZKA,
     *                                (CWF(K,L,M),M=1,NZPW)
                     WRITE(NOUT,1002) (CWFMINUS(K,L,M),M=1,NZPW)
      ENDIF
1000  FORMAT(1X,5I3,/,'PSI(+)',/,(2E13.6))
1002  FORMAT('PSI(-)',/,(2E13.6))
      IF(IELMA.GT.0) WRITE(NELMA)(CONJG(CWF(K,L,M)),M=1,NZPW)
C      EXODUS HAT DIE STREUWELLE IM 'BRA', DAHER WIRD C* UEBERGEBEN      
69     CONTINUE
70    CONTINUE
      IF(IPLO.GT.0)  CALL CWFPLO(CWF,MZAE)
       IF(IWEFU.LE.2.AND.IPLO.LE.0) GOTO 1
C     DER FOLGENDE TEIL IST NOCH NICHT FUER UMGESTELLT FUER EM-UEBERGAENGE

      NZRW1=NZRW
      DO 80 KK=1,NO
      REWIND NBAND3
      IF(IWEFU.GE.3) WRITE(NOUT,1003) KK
1003  FORMAT(3X,'R(FM)   WELLENFUNKTION IM KANAL',I3,
     */,' R(FM) W-FUNKTION, N**1/2*W-FUNK., D*Gauss, -I+S*O,'
     *,' -I+S*O +WF IM WECHSELWIRKUNGBEREICH')
      DO 40 KL=1,NZKA
      DO 41 I=1,4
      DO 41 II=1,NZRW1
41    FUK(II,I)=0.
      NZPW=NZP(KL)
      IF(KL.LE.NZKB) GOTO 42
      READ(NBAND3)((SW(K,M),K=1,NZRW1),M=1,NZPW)
      READ(NBAND3)(Q(K,1),K=1,NZRW1)
      GOTO 58
42    DO 14 M=1,NZPW
      READ(NBAND3)
14    READ(NBAND3)
      READ(NBAND3)
      READ(NBAND3)
      READ(NBAND3)
      READ(NBAND3)((SW(K,M),K=1,NZRW1),M=1,NZPW)
      READ(NBAND3)
      READ(NBAND3)(Q(K,1),K=1,NZRW1)
      READ(NBAND3) ((TS(K,I),K=1,NZRW1),I=1,2)
58    IF(IWEFU.GE.3) WRITE(NOUT,1000) KK,KL
      IF(IPLO.LE.0) GOTO 59
      MTDLL2=10*(MTDLL1 - 1)+MTD
       WRITE(NELMA) KK,KL,NZRW1,EMOM(KL),MTDLL2,REDM(KL),NZPW,EK(KL),
     *       NENTK(KL),LWERT(KL),NZAOK
59     IF(KL.GT.NO) GOTO 60
      LWL=LWERT(KL)
      KLKLKL=KL
      CALL COULF(LWL,NZRW1)
  60  CONTINUE
      IF(IPLO.GE.1) WRITE(NELMA)(CWF1(KK,KL,M),M=1,NZPW)
      IF(IPLO.GE.1) WRITE(NELMA)(PAR(M,KL),M=1,NZPW)
      DO 52 K=1,NZRW1
      WF1=0.
      WF2=0.
      WF3=0.
      DO 53 M=1,NZPW
      I=NZPW*(KL-1)+M
      WF2=WF2+CWF1(KK,KL,M)*SW(K,M)
      WF3=WF3+D(I,KK)*SW(K,M)
53    WF1=WF1+CWF(KK,KL,M)*SW(K,M)
      IF(KL.GT.NO) GOTO 63
      WF4=A(KK,KL,MTD)*FUK(K,2)*TS(K,1)
c regulaere ebene welle ohne streuung
      IF(KL.EQ.KK) WF4=WF4-(FUK(K,2)-2.*CI*FUK(K,1))*TS(K,1)
63    WF5=WF4-WF3
      IF(IWEFU.GE.3) WRITE(NOUT,1004) Q(K,1),WF1,WF2,WF3,WF4*EIHALF,
     * EIHALF* WF5
      IF(IPLO.GE.1) WRITE(NELMA) Q(K,1),WF1,WF2,WF3,WF4,WF5
1004  FORMAT(F8.4,16E12.4)
52    CONTINUE
40    CONTINUE
80    CONTINUE
1     CONTINUE
      RETURN
      END
      SUBROUTINE CWFPLO(CWF,MMM)
      IMPLICIT REAL*8(A-H,O-Z)
C
      COMPLEX*16 EMOM,CWF,CWF1
C
      INCLUDE 'par/verma'
      PARAMETER (NDIMP=NDIM*NDIM)
C
      COMMON /PLATZ/ VV(NDIMP)
C
      COMMON /APC/ FRR, BUM(NZKBMA), NZP(NZKMAX), WNORM(NZKMAX),
     *             NZKA, NZKB
C
      COMMON /PLO/ CWF1(NZKBMA,NZKMAX,NZPARM), EMOM(NZKBMA),
     *  NENTK(NZKMAX), MTDLL1
C
      COMMON  REDM(NZKMAX), KLKLKL, NBAND3, PAR(NZPARM,NZKMAX),
     *        NZRW, NZPWX, NZPW2, INPUT, NZAOK, NELMA,
     *        IELMA, IWEFU, NBAND9, IPLO
C
      DIMENSION CWF(NZKBMA,NZKMAX,NZPARM), ALPHA(NDIM,NDIM)
C
      EQUIVALENCE (ALPHA(1,1),VV(1))
C
      MMM=MMM+1
      REWIND NBAND9
      READ(NBAND9) NY,((ALPHA(M,N),M=1,NY),N=1,NY)
      IF(MMM.GT.1) GOTO 5
      IF(IWEFU.LE.3) GOTO 5
      DO 2 N=1,NY
2     WRITE(NOUT,1001)(ALPHA(N,NN),NN=1,NY)
1001  FORMAT(1X,'EV VON N',10E12.4,/1X,10E12.4)
5      DO 10 K=1,NZAOK
      NN=0
      DO 20 L=1,NZKA
      NZPW=NZP(L)
      DO 20 M=1,NZPW
      NN=NN+1
      I2=0
       DO 20 IL=1,NZKA
      NZPWS=NZP(IL)
      DO 20 IM=1,NZPWS
      I2=I2+1
      CWF1(K,L,M)=CWF1(K,L,M)+CWF(K,IL,IM)*ALPHA(NN,I2)
20    CONTINUE
10    CONTINUE
      IF(IWEFU.LE.3) GOTO 30
      DO 22 K=1,NZAOK
      DO 22 L=1,NZKA
      NZPW=NZP(L)
22    WRITE(NOUT,1003)(CWF1(K,L,M),M=1,NZPW)
1003  FORMAT(1X,'CWF1',10E12.4,/1X,10E12.4)
30    CONTINUE
      RETURN
      END
      SUBROUTINE gcf(gammcf,a,x,gln)
C     INCOMPLETE GAMMA FUNCTION Q(A,X)=GAMMA(A,X)/GAMMA(A)      
      INTEGER ITMAX
      DOUBLE PRECISION a,gammcf,gln,x,EPS,FPMIN
      PARAMETER (ITMAX=100,EPS=3.d-7,FPMIN=1.d-30)
CU    USES gammln
      INTEGER i
      DOUBLE PRECISION an,b,c,d,del,h,gammln
      gln=gammln(a)
      b=x+1.d0-a
      c=1.d0/FPMIN
      d=1.d0/b
      h=d
      do 11 i=1,ITMAX
        an=-i*(i-a)
        b=b+2.d0
        d=an*d+b
        if(abs(d).lt.FPMIN)d=FPMIN
        c=b+an/c
        if(abs(c).lt.FPMIN)c=FPMIN
        d=1.d0/d
        del=d*c
        h=h*del
        if(abs(del-1.d0).lt.EPS)goto 1
11    continue
      STOP 'a too large, ITMAX too small in gcf'
1     gammcf=exp(-x+a*log(x)-gln)*h
      return
      END
      SUBROUTINE gser(gamser,a,x,gln)
      INTEGER ITMAX
      DOUBLE PRECISION a,gamser,gln,x,EPS
      PARAMETER (ITMAX=100,EPS=3.d-7)
CU    USES gammln
      INTEGER n
      DOUBLE PRECISION ap,del,sum,gammln
      gln=gammln(a)
      if(x.le.0.d0)then
        if(x.lt.0.d0)STOP 'x < 0 in gser'
        gamser=0.d0
        return
      endif
      ap=a
      sum=1.d0/a
      del=sum
      do 11 n=1,ITMAX
        ap=ap+1.d0
        del=del*x/ap
        sum=sum+del
        if(abs(del).lt.abs(sum)*EPS)goto 1
11    continue
      STOP 'a too large, ITMAX too small in gser'
1     gamser=sum*exp(-x+a*log(x)-gln)
      return
      END
      FUNCTION gammln(xx)
      DOUBLE PRECISION gammln,xx
      INTEGER j
      DOUBLE PRECISION ser,stp,tmp,x,y,cof(6)
      SAVE cof,stp
      DATA cof,stp/76.18009172947146d0,-86.50532032941677d0,
     *24.01409824083091d0,-1.231739572450155d0,.1208650973866179d-2,
     *-.5395239384953d-5,2.5066282746310005d0/
      x=xx
      y=x
      tmp=x+5.5d0
      tmp=(x+0.5d0)*log(tmp)-tmp
      ser=1.000000000190015d0
      do 11 j=1,6
        y=y+1.d0
        ser=ser+cof(j)/y
11    continue
      gammln=tmp+log(stp*ser/x)
      return
      END
      FUNCTION gammq(a,x)
      DOUBLE PRECISION a,gammq,x
CU    USES gcf,gser
      DOUBLE PRECISION gammcf,gamser,gln
      if(x.lt.0.d0.or.a.le.0.d0)STOP 'bad arguments in gammq'
      if(x.lt.a+1.d0)then
        call gser(gamser,a,x,gln)
        gammq=1.d0-gamser
      else
        call gcf(gammcf,a,x,gln)
        gammq=gammcf
      endif
      return
      END
