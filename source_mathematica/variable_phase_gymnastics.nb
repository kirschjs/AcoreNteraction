(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    137289,       2630]
NotebookOptionsPosition[    136346,       2607]
NotebookOutlinePosition[    136679,       2622]
CellTagsIndexPosition[    136636,       2619]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"LECs", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"\"\<~/kette_repo/AcoreNteraction/data/LECs0s.dat\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number", ",", "Number"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.79507055636353*^9, 3.7950705943228683`*^9}, {
   3.7950758860720577`*^9, 3.7950758880645514`*^9}, 3.795085925498419*^9, {
   3.795149678335662*^9, 3.7951497049338207`*^9}, {3.7951539030104322`*^9, 
   3.795153906755446*^9}, {3.795154403114245*^9, 3.7951545134646997`*^9}, {
   3.795157542290051*^9, 3.7951575518215733`*^9}, {3.795157606214325*^9, 
   3.795157615739657*^9}, {3.795157680963085*^9, 3.795157692493876*^9}, {
   3.795157726726815*^9, 3.795157763900837*^9}, {3.795157846989957*^9, 
   3.795157868628523*^9}, {3.795157914488151*^9, 3.795157923600602*^9}, {
   3.795158022903755*^9, 3.795158074894421*^9}, {3.795158242375169*^9, 
   3.795158242759336*^9}, {3.79515837684129*^9, 3.795158376948535*^9}, {
   3.7951584087590027`*^9, 3.795158410522027*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"8b100c26-8848-4236-b3dd-0b2c7ba4c5a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lamnumber", "=", "45"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Poti", "[", 
    RowBox[{"r_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"a", "  ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", 
      RowBox[{"r", "^", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mm", "=", "938"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lam", "=", 
   RowBox[{
    RowBox[{"LECs", "[", 
     RowBox[{"[", "lamnumber", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lec", "=", 
   RowBox[{
    RowBox[{"LECs", "[", 
     RowBox[{"[", "lamnumber", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(0\)]\) = \>\"", "<>", 
    RowBox[{"ToString", "[", "lec", "]"}], "<>", "   ", 
    "\"\< MeV      \[CapitalLambda] = \>\"", "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"lam", "^", "2"}], "/", "4"}], "]"}], "<>", 
    "\"\< \!\(\*SuperscriptBox[\(fm\), \(-2\)]\)\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hbarc", "=", "197.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r0", "=", "0.00001"}], ";", 
   RowBox[{"rMax", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delta0", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"d0", "'"}], "[", "r", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1."}], "/", "k"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mm", "/", 
            RowBox[{"hbarc", "^", "2"}]}], " ", 
           RowBox[{"Poti", "[", 
            RowBox[{"r", ",", "lec", ",", 
             RowBox[{
              RowBox[{"lam", "^", "2"}], "/", "4"}]}], "]"}]}], ")"}], " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"k", " ", "r"}], "+", 
            RowBox[{"d0", "[", "r", "]"}]}], "]"}], "^", "2"}]}]}], ",", 
       RowBox[{
        RowBox[{"d0", "[", "r0", "]"}], "==", "0.0"}]}], "}"}], ",", "d0", 
     ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r0", ",", "rMax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltal", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dl", "'"}], "[", "x", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"k", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}]}], " ", 
         RowBox[{"mm", "/", 
          RowBox[{"hbarc", "^", "2"}]}], " ", 
         RowBox[{"Poti", "[", 
          RowBox[{"x", ",", "lec", ",", 
           RowBox[{
            RowBox[{"lam", "^", "2"}], "/", "4"}]}], "]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", " ", "x"}], ")"}], " ", 
             RowBox[{"SphericalBesselJ", "[", 
              RowBox[{"l", ",", 
               RowBox[{"k", " ", "x"}]}], "]"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"dl", "[", "x", "]"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", " ", "x"}], ")"}], " ", 
             RowBox[{"SphericalBesselY", "[", 
              RowBox[{"l", ",", 
               RowBox[{"k", " ", "x"}]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"dl", "[", "x", "]"}], "]"}]}]}], ")"}], "^", "2"}]}]}],
        " ", ",", 
       RowBox[{
        RowBox[{"dl", "[", "r0", "]"}], "==", "0.0"}]}], "}"}], ",", "dl", 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "r0", ",", "rMax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ampll", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"fl", "'"}], "[", "x", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"k", "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}], " ", 
          RowBox[{"mm", "/", 
           RowBox[{"hbarc", "^", "2"}]}], " ", 
          RowBox[{"Poti", "[", 
           RowBox[{"x", ",", "lec", ",", 
            RowBox[{
             RowBox[{"lam", "^", "2"}], "/", "4"}]}], "]"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", " ", "x"}], ")"}], " ", 
              RowBox[{"SphericalBesselJ", "[", 
               RowBox[{"l", ",", 
                RowBox[{"k", " ", "x"}]}], "]"}]}], "+", 
             RowBox[{"I", " ", 
              RowBox[{"(", 
               RowBox[{"k", " ", "x"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"SphericalBesselJ", "[", 
                 RowBox[{"l", ",", 
                  RowBox[{"k", " ", "x"}]}], "]"}], " ", "+", 
                RowBox[{"I", " ", 
                 RowBox[{"SphericalBesselY", "[", 
                  RowBox[{"l", ",", 
                   RowBox[{"k", " ", "x"}]}], "]"}]}]}], ")"}], " ", 
              RowBox[{"fl", "[", "x", "]"}]}]}], ")"}], "^", "2"}]}]}], " ", 
        ",", 
        RowBox[{
         RowBox[{"fl", "[", "r0", "]"}], "==", "0.0"}]}], "}"}], ",", "fl", 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "r0", ",", "rMax"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Pi", ",", 
         RowBox[{"Pi", "/", "2"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"dl", "[", "r", "]"}], "/.", "deltal"}], "]"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"d0", "[", "r", "]"}], "/.", "delta0"}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "I", " ", 
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"fl", "[", "r", "]"}], "/.", "ampll"}], "]"}]}]}], 
            "]"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", "I"}], ")"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "r0", ",", "rMax"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Red", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dotted"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "\[Rule]", "0.2"}], ",", "Black"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", "Blue"}], "}"}], ",", 
          RowBox[{"{", "Magenta", "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\>\"", ",", "\"\<\>\"", ",", 
          "\"\<\!\(\*SubsuperscriptBox[\(\[Delta]\), \(0\), \((1)\)]\)\>\"", 
          ",", "\"\<\!\(\*SubsuperscriptBox[\(\[Delta]\), \(0\), \((2)\)]\)\>\
\"", ",", 
          "\"\<\!\(\*FractionBox[\(ln \((1 + 2 \*SubscriptBox[\(if\), \(l\)] \
\((r)\))\)\), \(2  i\)]\)\>\""}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"d0", "[", "r", "]"}], "/.", "delta0"}], "]"}], "/", 
          RowBox[{"Re", "[", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "I", " ", 
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"fl", "[", "r", "]"}], "/.", "ampll"}], "]"}]}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", "I"}], ")"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "r0", ",", "rMax"}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", "Dashed"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k\>\"", ",", 
          "\"\<\!\(\*FractionBox[SubsuperscriptBox[\(\[Delta]\), \(0\), \((2)\
\)], \(\(\\\ \)\(\*FractionBox[\(1\), \(2  i\)] ln \((1 + 2 \
\*SubscriptBox[\(if\), \(l\)] \((r)\))\)\)\)]\)\>\""}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.795000928643125*^9, 3.795000929630024*^9}, {
   3.79500106620017*^9, 3.795001150603356*^9}, {3.79500119111524*^9, 
   3.795001460864708*^9}, {3.7950015258234253`*^9, 3.79500155637573*^9}, {
   3.795001790857958*^9, 3.7950018665710363`*^9}, {3.795002042101562*^9, 
   3.795002078379125*^9}, {3.7950021799992323`*^9, 3.795002229037675*^9}, {
   3.7950024805694237`*^9, 3.795002480996776*^9}, {3.795002797002955*^9, 
   3.795002837006385*^9}, {3.795002941490871*^9, 3.795002975203794*^9}, {
   3.795003033796612*^9, 3.795003073691111*^9}, {3.795003237385954*^9, 
   3.795003264419834*^9}, {3.795003318336965*^9, 3.795003354246758*^9}, {
   3.795008958997992*^9, 3.795009051820177*^9}, {3.7950091030042553`*^9, 
   3.7950091391073933`*^9}, {3.7950657196531887`*^9, 3.79506576035879*^9}, {
   3.795066422816552*^9, 3.795066476023122*^9}, {3.795076363453452*^9, 
   3.795076459344068*^9}, {3.7950765352645493`*^9, 3.795076595845275*^9}, {
   3.7950768700006247`*^9, 3.795076947887886*^9}, {3.795084818636586*^9, 
   3.795084820094838*^9}, {3.7950849722837553`*^9, 3.7950849736452*^9}, {
   3.795085012495103*^9, 3.795085049748547*^9}, {3.795085087244322*^9, 
   3.7950853981034718`*^9}, {3.795085428791156*^9, 3.7950856962655163`*^9}, {
   3.795085897944354*^9, 3.795085898570691*^9}, {3.795085932564022*^9, 
   3.795085961228407*^9}, {3.795086068270617*^9, 3.795086187694771*^9}, {
   3.795086226897562*^9, 3.7950862326810904`*^9}, {3.79508626570179*^9, 
   3.795086338376411*^9}, {3.7950863827742043`*^9, 3.795086387429966*^9}, {
   3.7950864208511877`*^9, 3.795086450503297*^9}, {3.795086536024974*^9, 
   3.795086588809435*^9}, {3.795086735785413*^9, 3.795086860937203*^9}, {
   3.7950869348830338`*^9, 3.795086990035413*^9}, {3.795087058186048*^9, 
   3.795087063210647*^9}, {3.795087094222639*^9, 3.7950871072107153`*^9}, {
   3.795087374197015*^9, 3.7950876406400127`*^9}, {3.79508771970443*^9, 
   3.7950877245962067`*^9}, {3.795087937914197*^9, 3.795088023428203*^9}, 
   3.7950886705936728`*^9, {3.7950889155794897`*^9, 3.795088915719399*^9}, {
   3.795088964917851*^9, 3.795089042749732*^9}, {3.7950893661965027`*^9, 
   3.795089650404814*^9}, 3.795090266385057*^9, {3.795090381153061*^9, 
   3.795090392211731*^9}, {3.7951515537007723`*^9, 3.795151554181419*^9}, {
   3.795152462622052*^9, 3.795152462803421*^9}, {3.795157369451557*^9, 
   3.7951573764355173`*^9}, {3.7951582606875067`*^9, 3.79515826879819*^9}, {
   3.79515831008847*^9, 3.7951583667126007`*^9}, {3.795158431008116*^9, 
   3.79515847506497*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"a54c6ddc-9335-4292-97b5-602233672f54"],

Cell[BoxData["\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(0\\)]\\) = -147.191 MeV   \
   \[CapitalLambda] = 1.3225 \\!\\(\\*SuperscriptBox[\\(fm\\), \\(-2\\)]\\)\"\
\>"], "Print",
 CellChangeTimes->{
  3.795076596602326*^9, 3.795076872172409*^9, {3.795076903018134*^9, 
   3.7950769486552343`*^9}, {3.7950847997374763`*^9, 3.795084821083172*^9}, 
   3.795085013870575*^9, 3.795085054504795*^9, {3.795085107415428*^9, 
   3.795085303075585*^9}, {3.7950853622399387`*^9, 3.7950853891545763`*^9}, 
   3.795085508992998*^9, {3.7950855460530663`*^9, 3.795085631263041*^9}, {
   3.795085686938408*^9, 3.795085697123958*^9}, 3.795085899781047*^9, {
   3.795085936087542*^9, 3.795085962615803*^9}, 3.7950862486919003`*^9, 
   3.7950863168011293`*^9, 3.795086388932953*^9, {3.795086428001652*^9, 
   3.7950864413935623`*^9}, {3.795086550718504*^9, 3.795086589493452*^9}, {
   3.795086736732443*^9, 3.7950868487312803`*^9}, {3.795086941531508*^9, 
   3.7950869910811033`*^9}, 3.795087065000442*^9, {3.795087389881271*^9, 
   3.7950874059150867`*^9}, {3.795087470331956*^9, 3.795087635466071*^9}, {
   3.7950879683288593`*^9, 3.795088026674985*^9}, 3.795088678331238*^9, 
   3.795088916486401*^9, {3.795089004810254*^9, 3.7950890435409822`*^9}, {
   3.79508945227982*^9, 3.795089475623413*^9}, 3.795089528563175*^9, {
   3.795089571008626*^9, 3.7950896513833513`*^9}, 3.795090266990044*^9, {
   3.795090382710208*^9, 3.7950903933315897`*^9}, 3.7951497132374897`*^9, 
   3.795151555890677*^9, 3.7951516273197308`*^9, 3.795152463579948*^9, 
   3.79515728390075*^9, 3.795157382384837*^9, 3.795158270027087*^9, {
   3.795158310885393*^9, 3.795158414296685*^9}, {3.795158459425027*^9, 
   3.795158476434279*^9}},
 CellLabel->
  "During evaluation of \
In[426]:=",ExpressionUUID->"5e3aa47e-869e-4795-bc4a-1575a51a6c36"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHSL4QWmK5FM7CV2XkN+KnA4PywS8XmjMs4fxH7if
2zBNfR2c36Uh96Ezez+cz7aB1Z8l/DicL922jeXzxXNwvvIb/QfTyy/D+Z8U
Jzk/c7gO55+Z+mFldPRtOP+C2pr9K5Luw/nui6reBk16COfrBMz982T2Yzg/
90gb3/mmp3C+83G5HyoJz+F8+ZcmyXxpL+H8iIuCF/09X8P5027kHFAJfQvn
Z+aVtaeGv4fzfVIXa9TP/gDnP1/k5Td1/kc4f4NzaGn4pE9w/p/PcrHJMz/D
+ZNe7zdYOvsLnB/udoR1cs9XOH/+hvbZpyZ+g/NF69YZrWv9Dudfm7Rm6/GS
H3C+5PbMn1oVP+H8brsuO6usX3B+/dVMl8kFv+H8fZsVzJSK/sD52l+tNGOT
/iLiy03k7sO0f3C+1a+ASUJR/+H8S1WbZtqoMDjA+B4Mc05NWYrgh5qb/3GS
Y4Tzlb8Z8oktRPA70+4p2EszwflTqso0mScj+AlieUJvRJjh/CPJ4n+0+hD8
lxYKx/oEWeD8zRtF2nonIfgid3a5PeJihfPN+w48j+5F8D9+LO/UZmeD8wN+
SilOq0PwCztkZ6oysMP5micvCnJXIvjBgmdbWvcg+LWRJ77//4/gAwBfwjYB

              "]]}, Annotation[#, "Charting`Private`Tag$80758#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Dashing[{0, Small}]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHSL4QWmK5FM7CV2XkN+KP+0flgl4vdCYZw/jP3A/
t2Ga+jo4v0tD7kNn9n44n20Dqz9L+HE4X7ptG8vni+fgfOU3+g+ml1+G8z8p
TnJ+5nAdzj8z9cPK6OjbcP4FtTX7VyTdh/PdF1W9DZr0EM7XCZj758nsx3B+
7pE2vvNNT+F85+NyP1QSnsP58i9NkvnSXsL5ERcFL/p7vobzp93IOaAS+hbO
z8wra08Nfw/n+6Qu1qif/QHOf77Iy2/q/I9w/gbn0NLwSZ/g/D+f5WKTZ36G
8ye93m+wdPYXOD/c7Qjr5J6vcP78De2zT038BueL1q0zWtf6Hc6/NmnN1uMl
P+B8ye2ZP7UqfsL53XZddlZZv+D8+quZLpMLfsP5+zYrmCkV/YHztb9aacYm
/UXEl5vI3Ydp/+B8q18Bk4Si/sP5l6o2zbRRYXCA8T0Y5pyashTBDzU3/+Mk
xwjnK38z5BNbiOB3pt1TsJdmgvOnVJVpMk9G8BPE8oTeiDDD+UeSxf9o9SH4
Ly0UjvUJssD5mzeKtPVOQvBF7uxye8TFCueb9x14Ht2L4H/8WN6pzc4G5wf8
lFKcVofgF3bIzlRlYIfzNU9eFOSuRPCDBc+2tO5B8GsjT3z//x/BBwAkwGaN

              "]]}, Annotation[#, "Charting`Private`Tag$80758#2"]& ], 
           TagBox[{
             Directive[
              AbsoluteThickness[1.6], Opacity -> 0.2, 
              GrayLevel[0]], 
             LineBox[CompressedData["
1:eJwV13c8lV8YAPDrGvfqF2UkKyTJKpFI8T4nykpKCS0ZWZWRFZIQiihZkbJX
VlYoKpvskZU9ssne3N/bX/fz/bzn857nvM95zj3PQUOrK8ZEAoGgRE0g/PvV
YprjD+b4gxEIxdFtv9LOCHTtN0t11gCCvpbTPQ93ear1ZnC8rAeECB7dzpxi
+QJinXF9lgkQfGNMU/d3yc+RP6XqnbEEt8fRiqcPT8gHk36uPRqyAX31qdLf
vUvymb5fI1CSAwQ4mH+YJlPk6xjSMPoHzlCg+a3a35kWGwv4MNh83BUcbydB
59ndGJWvskL9hhsImFcwPfnDhL2+UBwk0esBa82wcIGaDUttyJLeiPGGsNAd
vWlRXkw2QOSFnucL4LFNP5rFwo9VacZ1lZr4wtIfmaBPGQLY8K9gl5eir8A3
2omG66gIdqqWbmyVLgAkh+RUfpOPYhTRsj0iawGQbWhn5L4gjvnPnDF49TsQ
SLvEqvfNSWIfrY/S6ESFwoN59Xv5Pacw6+YJMZ+At7BheHXBXv00JiOZeK3Q
PQwqxkTb63LOYBWLPEm8d9/BisCdiRADDPPT6m7UvBYBmr9/SEnEA3b189u1
Z0rvwUyD4nPzPsI42bQO5sl8gPY5sA8jnMUGHfaqjQtFQvHPQxH5385iyR11
NpycUfCC9XVheIoCJvO+/GIibTSEvb5fvlKmiL2r4zcE12jQXY+N86Y7j+1s
uTl0rkSD1F5eZSorJczwaL/vQ6sYeBf48z3PhjJWcVs+atd4DIxjfoGh8aqY
3/f1KrmuWFhjpGJzULuIzc3q9LRpxsHrT95PL8Il7Cpv3pxlTRz0fDGOFo+7
jHG62XDEFMaDdCZ3CfnHFSz57NQ92shEcG7kejbGpYPttlF9GsmWBH1v48Iv
SOhiVrFJQTKvk+DTVFZQmsJ1TJr6bpG5WzI4Z59kbLtyE3t3orSJuJ4MPcPB
Lloat7BtI74/EQ8/gtsBjRQEtzH9YNd1qcmPEH/+UUSusB5WXt7D0GCYApXN
NOG0J+5gQsun+U27U2Dz/fUPveL62MvD4dIErVQQM1T4bdquj13xvnZH8nwa
iIhdJFAuGmJ5eTm2td/S4MCjhwfouI0wjjGmF3el08GuP5VRYskIG1BuyAw9
kgGRwaZto0XGGC3BL0ErJQNs4iTiI76bYCIFqu+Yj34Ck6xtiY1yU+x08NBZ
ZY5MUGtaSSR0mmPPaPREy3iy4MnZySLlQQssdKDoML9+FhRan1W702KJJRdx
8bnHZMHL6/YBDN+tsK9hzpwDQ1mQJGz+dlPfGquz62IFgWwI+GaiZjVnjfVd
PrUn0jgbinuf+h/we4jNi72l307MBicKgaFU0gZj+6O181U4B55yW9j0RNhi
QiU5axz3c0CdOJ/586YdduYD86JjWg7Ef2fsjThoj+lfaxqTFs+Fideqn3q/
OGApFReas6U+Q5cpB6veuhMmn6gQnwL50CQ31O+0xw277BETSe+eD9cOhV1N
c3TDDPUI4Wal+WCbM6P5ZMQN82b77i94vgCeND2a3Shzx5q8ZR/Fqn2Bpm1S
0t3YZ9iQYdhDKr8vICBRaPWSzxNbxlbv69d/ATZGxrLLMZ4Y52quPs/lr1Be
Hkifn+KF3TU9rvbuWiHcOszOttDzHHNQfH1uPbQQPBKqTzBYv8B8eGcx3c5C
ONfI3lNJ64NldKSeYLtZBMG8YXX7ZH2xVeUjBwL1v4FlDvNR/h9+mK8Qz5zP
/R9A92vT3lngDWbW2zYZlPwDNCtP72l2eYMpB/r/+fDnB9Bzz1rltb/BiK6u
M53ixfDNOcBQ6nUg9n1sZmj6YzGcoS3fvc0cjEkX1tWzRpZAmMaoXYnxWywh
RKg2vKgE0gXKawU73mKs1p7VPN0l4Cn934kDamHYgoBcmRB7KTgytEl+kwrH
Ml6lFsgF4n6hs/qTOwITNPSNu+tdBt3Z+4PZTkVhIXKj0RPxZcB03mferzQK
o9mvEGlZVgae9NniakeisaHa9TBHQjnwZolIp36OxiJPmr/ycy4HxQc0n4e7
YzA2ehWnXMsKuDFoIGygHY95Dcc5yPpXgLX/kOWZlHhs6RvF9ntqBVx41cLI
TonHWmzyLavHK0DjFUGvMzUBe9UjeLfHsBJ8nwfL2jMlYXSZtJdodKrgl977
P7wMKZiebQ/9nF0VyMkMiByxSsHypHPKuwOrYE5IuUSwJQUz/aZ/OqehCs7q
ug4yRqRi1TWFhw2VqsF+9M1fj1Pp2Ms/D7d+nPwJg5E0m3SamdhIskp+6tWf
oF7DsTrgk4nJPeC1efvwJ9jse1CtUJaJTS/UjVmm/4SvWkd8Y2SyMA2CUOuB
wzXQ+jjoz4hgNraXq+/jY9ZaOBHA2XWRLxcz68u9aypZC7tvi7UzGeZiJTEv
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
m4S8At7n//OT69WrFAoJLdfptvzz/7n3bpM=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$80758#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              Dashing[{Small, Small}], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1: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
SpHbH6j5tNZ6zH4eyyjSf1Mb8wecD7M0Z2TOYy/U9huN//4DzXu7dBDPAsYn
A9Qhwv1w/mvS32raRazzZkpyW3w/3OZVus37dwljnemL00ntBz9j2vRpxmXs
iuv+6O7sftjpPZ/z5/gyVpPo8XroSz/EDVo/krFcxvKnbzss9vbDYFKzds78
MhbowqTGwjkAKnplX6e3VzDlBKeZa0ED0Hfs8x0rqXVsR7TwlGPUADxpuJR2
7fY6VlC4+Cw2YQCOH/fWuu+5jgk2PGKczh2AazURlvzt6xjNmp64V9sAPHv+
0XXBYQMrv6z4uJB1EBYqpKjZf2xisuu7l7nCB2H4S7FDavAOtvBcRV4hdhBe
juSaM1buYKmMXl6mHwZB0rt0b8bcDsYusLP/U+Eg7OP3x4LUKdiK+py0eucg
sAcvwQs6AuQl/XRw4xgCquKdY89/EED06rut4egh6G3TrJU0I8L28nCSW+IQ
yL4sybnlQYTGaNHL3OlD0Cxy2jgumghWYyXvNP8bAkZaKp9njUTId8F7pnMI
orS/yfueoga5zAPusfuHwWDpV+EGmQYu7Qqivfl6GKYuh3aPfaWFg9ldmcth
w0Bd8K23YJAWZq8f0n4TMwzeHGGvkii0EBifnVybOQyyn8J1e87Qwc/TTcoy
9cNwVasgpvojHdw22ePHSj8CxXWVv1LjSWBe7c3Y5DECKbZD5gkx9OAgIHb/
vN8IPLXtjpgvowdPz7bPxW9GQDbJPNfwDz1EneczT4obgcs0mGA63y6orS6u
cywbgaO9bxU6k3YB/9fpFwIbI3A6saqvNG83dH69Ru30eBT0Mna3PJtmgOEj
6zf/OoyCsAav2wUmRvjrFZt7z20Uloylkk5KMwKd0rTBldejAPmXep67McLJ
Gq9ygcxR6MiLIq6x7YVXNUXPmsZHoUTfzPzDkX2g+I1nTUB/DNxDbIRvmjHB
D966d3KmY6BtbDK4z40Jrjk8UdSyGoNa8vPJ/jAm0BdufvXcbQwOO5adb6hm
ApeX7kcG48bAp5sntesQM/x3Zfha7MAYxHpesmrvZwaJztRMDqNxqNujdoXP
hhWKTmhrSjwch/uUv4unAlgB+RLXVWzGIZ3mTr7pB1ZQl7113uH5OLjwZm8f
6WGFR2/3dHckjsOi26lRovJ+SNG3JIcMjwO/ckjWXX424J2QMmK8PwGr7re5
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
YHibhLwD3xb+87MbtasUCgmt1Ou2/vP/ox512Q==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$80758#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 1]], 
             LineBox[CompressedData["
1:eJwV13c8Ve8fAPDrWtU3ysgKSQiRSEZxPieyS/ZKZoMyy65kt4gQoWvvlT0y
jpUoyc7OHtl7u7/7++u83uc89/N8ns/nOc/r3LMW9lr38TgcTpEch/v/VYdu
mTucdRLB4Wriu7uyr/H0MVtleagDzkzH/ZGPtyzZTju4aZgALobToLewRrYM
33L/V/4D8Hqb8DCLuU92+ciXLJNrdoA+i5e/yjsrG07dvO069gTMbs7V9Q+t
y+a9/RqDprmAl4s1Yf4IUbaFJhs5auMB6ZpVTUEelMh0CGG0/ZInWN1Ng97r
xxGyt0pyv3a9gN36G92LSTokWK0mTHTIBybaYVWNnAnJas2X2E0IAP+IQ5P5
C2cQ6RDB1yZ+r4HuaY5wPgM38l0zqa/uwVsYn5QM+5LLg4x3hT9/d+E9OMe7
U5wWFkSkflJNb1GFAOuYjHL/EWGEeKH+hOB2CERaOFl6r4ogQQvXzN/3h8L6
UaGmU8tiSIaDMIV+XARor9x8VDoohTi0zwq9CYmEvxbaq843ryKSYqm6Fd6f
IG36Qk9L4TXk2xpn2pl70dDJYzr70RxBAnUGfmvqxsCFfkxcNBkQ7eLIbV/F
z6CjTnxz5zGKsDHpnC2RJED9Mjh/wl1HRl1Oqs7wx8KX5nMxpVXXkfQ/LU/Y
2OLgGWNwRVSmHCL5ueFWKmU8BAU/btisl0eiW7gtwDMeNHYSkwKoFJDDfS+X
3s14uHjyjBKZvSJiIfz3raN9AoSFNn/m3FVCvt2VjTs2kwDjSGBoRLIKEli9
812mLxE2aMmYXFRvIcuL+oPdmkkQ9CXg5S24jWifKVm2+5EE/eX340WSNBA2
ryesCRXJcCWPvfYIpoWkX597RBmbCu6/T/tOn9ZHjj9ReRnLlAaDkUlRaqIG
iH1iWphkcBrkzOWHZcsZIhLk9yqtvdLBpeAKbbfWHST6cl0bficdesfDn+uo
GyMHllyTMY4Z4MGhnonCXcQs3HNH/F8GxCq4xhQJmCANDYM0rRaZUNdOEUV5
2RTh37jK/XAgE3Y+GxKGRMyQd7xREjidLLhgIdf/sMcM0QrQNRVTyAYBoVs4
4i0LpKSk8OnPqmxgd3XkoGK3RFin6V7fk8iBJ3+zaEXXLZERpda8iPO58Dn8
YfdU5X2EEheYopOZC45Joskx1Q8QwTKVaHrhL2CZfyC62/AQuRo+dl2JNQ+U
2jZTcb3WiC+FyYV6znxwuf6vUmnUFokYqeTlNsuHQofrqqYddkh65Wku74R8
8DV0DqGptke+fvJgGxnLhxQB68g9MwekxamPEXgKIKjqgar9sgMyrCF1IvZ+
AVQNvQziCHREVoQijx6kFoALEUdTJ/YEYZrUOfwqUAjP2G2fDMY8RfhrC7dZ
HxeCCn4lr/mOE3KNQL/mll0I8dW0QzFnnREz3bZpCZEimAxW+TJU7oJkflNr
LxAvhq6HrIwmO+6IbKpcciaUwk+Zsb/uJ7wQDZ+E2KPepaBx7pN2tpsXYmGC
i7KqKwXbwgXNFxNeSABTdRCfQhk4t7ku7tZ7I20B0q6JquVQc0Cddi/RFxmz
+ORIFlgO9KIV9u+4/JANZOux2a9ywNPS1msk+CFsW0VmnBpfIbch9Ghppj9y
7+El1WjdCkB4WZhWB18hLvLBN3YiKsAipekyjcNr5M2ZRcSgtwJ4frMMNlK+
QXL/ZF1mulMJT898ajkl/RbZUjrPEWpWBWqF9MLcWCDylp9z+c1jDLY795w9
eD4gVkPd/8LSMZBvvHqi/fkHRCk0aJIwicHe6UX7kp4PCN7Tc6FXpAayPUIs
xINDkerphbH5jBrgomw4fkAfjkhUtPxijK2FO+pTTrX3I5GUj/w/oypr4TFP
w0++P5EIo4NfE+dALYDEf5c5VD8hqzwy9fwsdSBA0y1WJR6F5L7PKpMJrYPT
r/W3mtljED6Lt0n3AurBroA5nEkqDvkoMxU/m1wPyTferATWxSEUzHKxdvX1
oH60QET1fDwy9nPnkxuuAWbzBCWyiuOR2CvW7wM9GoDOhqJ4fCABYTqq7F5k
9w2OjZoLmOslI/7jSS7SQd+ALWjM7lpmMrJeRXxanfUNFoI6aFmIyUjHk1K7
pplvMBKEM+nNSkHeD/LdG7RohO2AcGlnujSEKo/yNoX+d8CbfJ48Q5OJmDwd
PLrs9B3uSYwInrfPREokChsGQr8DI79SLV9HJvKwyuxqYet3uKPvOUobk4U0
/ajgtVBsgleTH5Z8pHKQd5OO+9iVZjCPpdij0sxDJtKVS7O0myGrmXVr5E0e
ImNz5kmkYzPEMdo0ydXnIfOrLdN2Oc2grX3+bYJkPqKO4+/k4P0Br93CJif4
CpCTp4cznjH+hOIAtr5bXEWI1XDRvYdiPyFSS6iHzqIIqU14d0Zb4yfo39/m
tUkuQp7wS38UDPwJ4hmcd6cFi5HOK+FefeQtQMxF/OmgBInQUNWXXGuBN3+S
o4h+ZcjpgBKKtfZW0K77UR4VVIXcu5Cy9XC1FWYmWmTl5qqQ7Lawf4P0v8E1
y6q7SqUaQU47tjVq/4aYkPN/xY5iiFnehc/R3b8h6Y/tXTaVGkTbto01waYN
0hxWr/+aqkW2MaWwgedtkLyZ/fwlex3ymR47zhTUBiV8GV7JWnXIRGkO8W1O
G1yqkBdXqalDXPDvJp0W2yBThNadJqEe+RSpkK/s0A4cLMYrePdviMy/SkFf
r3bwCudgP1/yDRmVEU+uCmmH02Efb39f+4YIjnFHiuW3w8bNAC5Ph0akQgj3
gn21HQYDejx67L8jw7VflZefdgCXXDPPn4Bm5Ny8yEikayf4mDtHmbG1IrtO
VaxVAZ3A/fSP0n+WrUjHgar22MdOyPl8WeNydivideJBo1BRJwht65gfwG9k
UOxzdu1yJ2i9Uwurl2hDItyPuM9Zd8HV4J1z9g7tyDHqUTow7obuEdtYMqYu
ZDTYTu3e425IZ91TT5HrQspY9v3eeHRDkrmDS7B9F/JQkHm781M3eL3UOCf1
owtpuHVr2Kq7G4I/hn8b9elGPMPLM0PVeyD+elR+C9kfZPVsqPwU+gem5yPP
l0r2I3UxF1g1NP/ADWkXZZEn/ciHU98Wy83/gOeMrTx1Tj9y6eh2VJDPH2hT
pzfvPTeA2C7fXRZv+APyujS2x5gGkZlqAYKvUi/oclTpUdMMI3/v1G5yqfcB
H4eCEwvPKJLbbdTy1qQPwr3ybhUrjSKet9cT1u36QIe+xf3141GEXf78rabg
PtC61BTRUTiKGAkGJdm390G+Zf3zPcUxpGfbQKNapx+AHqlpcR1HWj4uZ9y5
MwD1o9TmnRRTyEk/pWG3xwOw4Ll8v/viFKLzJJY+4tkAab3uy3SGU8ig+s1n
bTEDcPE5l8G13Clknjr9psLgAHSmfK3SuTON0HiYLl28Owi+Pxqut9TMIOom
reJ40yFgXqj3P14xh4Te5LU+Yz8EdHqORePzc0jP1ecEmZdDMOdGV3nIOY+Y
MAtSucYNwc6dIWMyv3nErs3/z9zfIYhNeceAai4gwXKyHt1mw2BR5tMyuL2I
tPFlY+kWf8FK3D5MBFYQJTXWojzHv8Dm1cVPMFpBqu0D0su8/sKSx1bHBZcV
JLvM7ENT7F+I+0PXlp2zgrxWPWU50/8Xbsf/0Uc5VxEuSSAPFxiBkSNJSw2U
a0ivUXpqZ8IIrKI3jM8srSOMC8Px+hkjoB1InjVPu4HcfnkqZiBvBF4dlc//
e3EDaUzyCR7HRuA2k6ONpP0GUjRv7LY2NAKK4616+SsbSIgnnSoD2yi8i678
Nn+wiSgleixohY6CAPHrXQfxHeRQqPSKe/QoEMJVM7WMd5CS0rUXcYmj4D/j
q/PAbwfh+2VDO18wChz3I+y5u3cQim0TEf/OUTAfz3656raL1NySdyxlHIN5
P1Fylh97yNWd/zZOR47BP6pit4ywQ2TVV1lWLm4MXNBcW9q6QySD1t/fKm0M
6NdLT2QvHyIsPIenikvHYLrgFRKqTkQ21Zcl1HvHQMttFV5T4aAwucvNi3Uc
6Kv2L/j+wIGQBmF/ImYcTGM1m8Ss8XCwMZHslTQOIrfK8+/44KE1RugWe9Y4
JIxfuR8fgweH6QqC9tdx6Mk4DHjRiociT9I70zsOCi0Nsm+ukINMDrN33KkJ
KF7qKt09QgE3j4VSGgVPgOtUyMD0N0rgyOvL2YiYgPTL9UMlY5SwqHtW70Ps
BFQ++/A+mUgJIQl5qU05E7A8HGowKE0FXVK/lSRbJuCjb35swxcqMH54/C3j
0UlQ5qj+k5FADbYNAbS/fSbhpMqwbWLsUXDjEX5w4+0kaEv1fFqpPgp+fp1V
5R8mwU3PqsDi71GIvsFlmxw/CeIhUnxZXMegqaH8p3v1JAyciJTrTT4G3N/m
X/PsTgLlauVwZeF/0PtNi9zDcQoQGvL2F/M0MMG7Y7TkNgUiP5m8FOhoYck/
ruCe1xSkbV1IvixBC1SK8+a3g6cg1uHGoK8XLVxu9K/hyZmCuPxQ/DbTCXjf
WPbi98wUBDrdt03jPQny3zm3ecymoRNvL2BkTQc/zvwkyFhNg1OVxdhJLzpS
31zldRymQUbF899IBB2YCbS99/Wahh7/8hu/GujA850371j8NLTbsWb0naWH
r7cntOJGp4F1UMGhe4QeRHszclgtZ0CGSf4211NGKLukpy36eAbIGGfXrgQx
AvoGv6P8dAaecesVWaUxgvrVOzfcfGfgi0rGAe8gI9h8Pj7QkzQDIZkXp/BK
pyDdzP5I+MQMMOODck25meDMrLgl7YNZiPXQOv1kmRlqjOetYmxnocT74q75
cRYwa0uy43eehRNNbKZ2/CyQWErvIec3CzMdt9iGzFiAL2A5xCVxFozOyS0z
drLAxXPZ1cPDs9Dhwlh5pIoVZO6eY/ui/w9cuV6oc6WfhqG2/jMypv8Arz5i
Pvr9NHjeCOVtfvAP6DPdueqnT0PNBTLRced/oKFmxzp7nh3kd4eVmMP/wZ3a
q5p1GeygGhnt/LLtHyCbMsENhRxg0E7XfltlDkyvPbKaGT0DzrK/eV5qzgGZ
3K96XwouCM0IdMs1nAOfD/kSAixc0OJNzUXzaA7OTaXzlAAXoGIHdj/ezsGz
DsPi/mAu4A+bOa7QMgcrnDhVS/GzsKWDKV+9PQ+V49JyzMHcwFj7/LO1/jwc
FihPh6RwwyXhq8ufTOdB9PaG+blKbnhEWRy5ZT8PPdxPJMJmuWG4OHOqKGQe
3lXdu56ocA4amSL8RDrm4QGPbXQKngciem1qeHQXwFNIgYLuAy8sHL6uF767
ABW5pTm2mbxwgzelUeL+Agxz95+equeFNcehFmXnBcBpTRcKbvGCxn/qfTYf
F2BkXLiT0pQP/kNEVou6FyA6uqH1tPh58EpaOaegtwg7yWd+d63zw59mmvPq
JotgPyW59o9OAC4uCwjqP1iEnB9dcFZEAIZkLC5ZuyxCleG1/kVrAbja0yET
FLEI11IZmulGBWD9SJFud88isMflS4d3C4K1ncur+/pLwG8gbPK8Vwj6vxD+
jZssgUUlx0j0lhCorjTcsniwBMc2v6T3MQmDkBMDo6nzEgDrg8gyXWFYdM+L
NwhbgiM2rbnELmFw8v9XrvZ7CSKLpMfb+i4Cqi6y+encMhAdp8+XeV6C7cW6
8wbnl6EyPE/QNuQS5AfrGTJfWAYt6T1v8cRLwN3+ovKj2DI4JqCHu98uAblO
i0/o9WUYned8Y00rCo2G1icCTZdBBr+eNpwoCjfvJ/G/jFmGYC7dI6X9YiCH
v+odHLcMqQtKClHLYiAd19YXl7QMt0avK4RTXQa+voO3NVnL4B/bvtEldhlw
twwWyCqXQf1TTKpf4GUoFKcp8BtcBia/qUv1N8SBjcL12luOFRB+RYiMbr4C
JxNowqPPrsAtAXnlP2NXgBpJns/kXYE/ne/+XNq/Auuu7YSfwivwvvYXzTUR
Cfg1dwFHg6yA+/PX175ESIBX50hDsMkKqLmK6qCPJWE6UVX9Y9wK3DVTajkn
JA2Pfk3pmSWtQI7SuK6+kjQsbvmYXkhbAe9jLArpFtKwfrPCoTZ3BbC1078S
o6QBt3UhbKFqBf7RyLQfHLkKbGo0vQqDK8CwuONotXAVbq79Nt9kWYXgx2Tu
wq0y8JvD5lEt+yoUdYsa6yzIgJbykaeBXKvgZjvmSDguCwYE1I+bfxUo99z+
RKjJwn2l/FR1yVUYvGd7KPhTFjxjQudSdVfh4BZee78NgTx5XWf90FVQR5+n
XH6OguOj9eSnEasgO1RKHxqMgtiHsK7g6FWQLlLqpE5CoXi4/XJT4ioIwvov
6R8ofHVXX5UqXIVUhid8FazXof6Lkj1b1ypky7xTu111HXpOX7UeOrUGmQ4d
TgRmeYiU6/u0w7oG1nFR8TwX5cHA2q3pFOca6VywufX9hjwMlJScV+dbA/Ka
S99Nn8jDiOblqWqJNdCqog8YbZWH2VdClvH6a/BlWvq1atAN2F/jvGsZtQZG
CuR637gUod/V9p4NYQ1Mx8l2gq4qQvlexWPnhDVISK4cdtZRBBdyQ49XGWtg
tf9UPfm1IizRh0Vmla+B4k35Ca9VRRgTpe5Y61uDnhZ02rxFCb7bLyn6sa3D
yO9E6f+iVSB1TVY9iHMdwrr+6rOUqYCfa6BuBPc6fE7SjlPtUQH0pcC9dMF1
wMXL3z/DoApf31t6t1xdB1sGsoX371UhO+dPBeOddZiIqbtREqgGoXPYpZQY
0vh7Lbea0m7BwT7DjFXcOjQ4yi6+aboFVrRWcUJJ63DCyvzck9lbgIiepC3K
XIelndbjpRfU4Z+L2Vxd+Tq4isScYylQB3k8WerIn3WwsH722bzxNqyzyJ1m
Z9yA5zGMYjepNcFUMKLjL/MGnBIjZc+mCT+u/XuTdHoD9Pp6T5gIa0K8Sei2
4LkNUNxiyfuprQm3kse6pcU2oLlZhbE6QRNSRXxD9DU2wF6Q1ZFNTgv0FRso
wwI3oEqnxyboozbgdE5PpIVswGa3Z8vLHG3INH9SVxm+AZSlLBsfvmnD/nOu
l1OfN4B7V8uaaVMb4gufb0vnbICZmpx+ioEOzHJdmRv5tQG9EwyM1Dy68Gwv
pe3iiU2QVxbYk+3WA56jB7nyDJvA+VAhIHBFD1qZdIIMmDdB0LsphIxWH7jE
8Ko+ZzahJ3ac1UxJHxqsTOq7RTah3TmoeKNCH2h6mEqea2zCZGn+QFm2AcTl
vYr58WETbrQvtxrlGkGX2oRA9EfSfGz098t+GcGxabTMOmoTDKcYB5AFI3Dh
2O06krAJSzPbpt+F7oD6WxtapbxNkNz6TfiVcwf2LTW961s34cotK7vJUmMw
Yj79sPK/LRD5ZiFBvWgCIQWuG+9ObMHbi1YCh/Sm0Hiry/cOwxa4plgF8UmZ
gphfUPwu2xaEdKUMHfc1haMrxD4pwS24EHvi2GcaMyj7MXGzWHkLBnJr0dRM
MzjlmSuW678F3J8+Ct7dMQcrl6+fHr3ZgsDI7vU2WguotGs85AvagnsUlXnm
PBZgYTr8Iy58CxwdzHP7b1tALkpr+SFpC4a7tCNF0i1AkdwuzKl2Cz4a/hwI
NLEEl9fC61cPtgALNvrhP34Pmr2kjbZw25C2coN3a/8esLsr1BRSbMOrLt7h
d0z3oc76bqDQ8W1w4maT51K9D7RqQTycp7eB/hPas1twH1JpFnTIpLeh6In0
vS/vHkBPaHbxd6dt0Fm7aLhoZAUPX1XIdbttg7fVcxh8ZgXbz378Hnu+Dfw5
MnYHn62A7f7M7IHfNhjli90c+GsFJpI8nOIft+Hjq2sCdFbWMD0QExBfvA3X
a/ol63wewTbPO333zW0YErhUd2nCBt6wRk8E7G6DI2987J3jtsBGm+EYfrgN
HvtV1E3itiCz1fjuC9UOyPlVPH8YYAtezfiaSaYdOD7S3N8qZAdH7Dz4tSR3
oJn87YuiAHtgLbXeEXTbgYwUoqaPtCNISHtKrD3bgcR/7xtDNRxBpyL0acXL
HXhQzXGk6aEjhGAVC2qvdmDF7DdvYoQjHGmiGbOJ2IETsVHiHJuOsNmb/yO3
aAcYagkzjpVPoGN3J0ZsZQcsXYMmf1s5wfJz2r7d9R2w6Q6XZPJ3AloiN1P9
Nil+7vjmuwQnUCG/GaKN24UV63vi1ANOUPNfrJ/TiV0IP3RhVtZwhlx2OdsS
4V14dHl+R+eGC7xD3iJXH+0CW6m2UI2uG0xVJiRq2+1C0OHc2dpnbiB3rZzK
9sku/Hkkb/ZfohvsSs60xnnsghefg7nnkhs8ElU0pXy3C0diBihXg9xBmQfv
1Za1C28VdbXq+jwgOZF1YvbLLviwMG/lUzwD3FlRZfKiXVDW0dfeEnkGpRxm
JyUqd0FeO9s24NUz4GOujo9p2YWrWbtBrVefA+Uxj9oHC7twmWq8fKTgBZi9
/sDrtbILw713L0ePv4BKqow3URu7sMhjFlzG6AlO5L2aLQe7gL9n8ZrfzRMm
9q+MidLuwUX5ka8b8i+hbmkFf3BxD1rajTrOuXnBy27rG2EOe0DG/4fjkZYP
bOdd8opy2gMrGtnqIkcfcAjcqohz2wO1+786bnzwAQt5/8vZXntwxTLXVard
BxTz47m/hewBZ73rF18dX6AN+oPbytsDQ3zrf47WfvDKKlbmoGgPGLJ+nXQP
8gPcjftu5OV7gK9MbOzK94PV3dWlE7V7cPuKRPq7PT/osaL9y9++B9db3BZP
hflD7A2FKqOVPVgVPPciojMAmLmO75ht7EFMGYOq2UEAhOx1iD/c2YPPPhHv
Q86/Ap8Cs+ynZPuQ6paYK/DiFTzgeh4TSLcPhsV/CZbCr+HifoF7teg+XLOn
l1BOegPVhVwS3E/2oao8uDN7ORAa2BfOjjvvQ2WK3JorXxD88C+nSXbfB4ak
Cf9fxkHQra81yeu9D/H6j6W4fgbB/J5vuEDIPvSzZbMTct8D643p1Uu5+xAl
W3vlkUoIcOYUDq/k75Puizmdsw4BHiavHwXF+yDVst5y+U0IXJphSRSv2odf
AS47Jj9CQDFQVVOqZR8OXah1qDU/gFNXzhf4tw8x/5yZ5hxCwUPWIwa3uA+B
e0cjGiJCwStV8VXtyj4E/7hYSFMVCu/c/prI7+xDO4+V7+axMEhkp6NVOnIA
/l0Bvwyyw6DtnpONOt8ByDqZsIlQf4SeX6jBCcEDeC0inrwl/hEGJWhutAkf
gIy2aJiW5UeYPpJ6WuvKAZSkD+n+qP0Ih9l/fujeOID2Bd07NAERcGHjqsBd
iwMwrEl58eriJ7AzOiZj/4AUP/lmUfzjT1CA9al7PzqAV0SjiISMT3D1rZtT
ypMDoHi0E2jHHwUqZ0qwBZ8DaEUGgn+KRkOgn38HMeAAkAsBmiUu0dA2qzNJ
9+4ADH593SuqjAaDorVjEmEHYAWsJ6lvxsBDFVE9z6QDmAtFbpe5fYbMXJx1
SNoBGF/uD95r/AyLDG3PErMO4K2x37m3TARwGbZLaCwkjd844Z9ZTgD/p9nz
tA0HEDg4/2DqZBwkEc77xk0cAN8b9iuzlAkwhd/6mD9zAJ/vC/NHSSeAoFVj
ev38AXRHl/+8bpcABWL3W6fXD2DC+5r+p/4EqP2eyHqJ8hAyqoxqhGoSgUL4
iZDc0UPw6C0kc9xPBOXQ66BDcwjveTOD5qWToM145J7bqUMQVxNbyy1Lgr8r
HHk1vIcwaGiq7dmYDNz6C3UdAofQ2xekGUmTAg8qK7snhA+h2YJIJ6uXAosB
d/aOSByCZ5xJt+V8ChycjlLUVDwE04hfqxnCaYB6Wxlaqh5CkLAbR5FPGvhN
Sdo4qx/CvNT7ivq+NDie3/MhSu8Qri+OKsm8T4fTioxDow8O4ZBVmPw3fSZp
3Gxc7qND6BG71Xv9aSZUXqi2eGZ3CFzTLx1oejLBmM5qhtHlEGJ9/wlSJ2VB
7GDFmpL/IUjXcSxfvJsDdr9DShjfHMKZoK7j/3XmANTddx8NPISIy7zRJ2/m
wkjaCaJH+CH4RpAtsCl/Ae6nlsdyk0jxHQfnWEryYPW+1C+PtEN4bqcynE7M
g3oDmhClrENIPjCeeayWD/eQ0lOjBYcwaz+zvjKbD+Kigb05JYeQ8ERNdl6m
ACh5zGM8vh6CzpXkotehBZB69L+zjHWH8IUl45GgYiG47P8dH/l2CLxiGk9d
kgtBaakoNaeZVP/E8thVyiKY6TIRUmo/hG3/rGs8nUUgGF8g6TFyCJMmZ5er
YkpgN/TVruLEIShvnHP5yVIKP/2NqxhmDmF69u/lkuhSsHlMJZ+zdAiXn1+z
up1bBjImA5Qea4fwQWkqNREtBxrNvCbFrUOIv7J0i7OvHHIljNRHDg9B9Zqv
tSBnBXgKiNDl4IlwtsvxMPZnBdxmp+hypyLCPtDuU3lXwjJZriEDLRFM7xYX
r1NWQ826D/sIHRHKWLjHsZ5q+DCt/zf7FBFUho5ZHC/AQOwX2X1FDiKk9ky4
VXyrAXxNz3mGs0RY1Fg9/VWhFjoLsv795SHCJjHxw0BLLSSneOVk8xPh/Yao
TsWdOnD6pOvgLkQEGqynlGqtDm68E7yseIkI5ntWhS/D6knfY8QNenEiUD/Q
2ifKNkCJZcaz7GukfJ5VrBwr/gYBep6IOxBhrvvM7wnfRtBX0SZTlCcCr2LI
or35d+CX4W+gVyKCi4TxNYXbTbB98SDgryoRfJ05OK7eboamsx0q2epE0NvJ
K3hs+QOiGNOOu2sRgZL3wPnW+59wdVcjlN6ICGPddPVHxFuBX7VbqOUuEYL6
fGYlcn/DqWjD7/7mRGBZZpUSSG0D/L8hc7hPBL/6s2eb37TDsrTF/rYVEcRD
GSnZ/Dtg+M1URIENEZZ+SlEMx3RCS98jURsHIgQ8wmPJHV3wVWDpJ68TqR6B
G2fwIj2Q5v70wV9XIty9pXKhu/QPhDdv4aKeEaGvXPJZqnMf+LA+j9F6SQQ1
tbUT554OgIM1TuK4LxE4cRRXq6qGwKTcr+1bABGYXnm7yV4egZtHjz5++ZYI
69w0/M9qR0HaMIhS+j0RnqvH9FyPHAe+DLr41Q9EwJ68aEv+NgmMOx+vZn8k
woaE87yR+QzgVdi670cRwdAyBtn3noPlT7H2ZwhEODiV4LmJLMHwDPexvngi
1OTaMAt3rcBPqbTk0GQirG6V+svcXYey1xfgZjqp3lYMCuT8W5Da+6WPMpsI
nexfZWvFt7FwfnEn7AsRXP+1d3GYbWA+bmW07oVEoLfSXA9rXMUcmmQyxEqJ
wG/n9n3fcxm7y1IrP/+VVP8oLddI9gVM1UphOKWaCAkxs5Zkg7OYVFmzm2kd
ETInfGoieacxviPqDKyNRPgmb/zbZnQCYzToyOloJsKXBFv88d0xDJ+upxz4
iwiRJfr8n+6OYktb/WMK7UTopU2Ptd77iw0qmb4gdhEh7UydOFXsEPYjcpy5
vJdI+h9p3cn6YQArm35Y8GSQtF+2IgRfNvZhqZLzN4VGSPvVKHHsUKwXC3/l
MD05TgQqCw2dlF89mPefde+4aVL9yjbp0OBuzO68O7vhHBESTa492HXswoxd
D0rol4jwxCD7GZ1jJ6b63VuzZZUI6AOn9OjXHZgUM9W8/yYRbk5erNErbsf4
Hr4NgF0ipDSR6YWst2EMpbRndw6IEGVVFom70YZ5+Tbf7cPh0Kz2I1+d5X9j
rln/XSjB41DxUS9DKZZW7P5e8Dd7Khz64bv32158C2Z8riP05hEc+svgHpk0
409MS43RTOAYDj3C0zfXeuUHpvJUT5jqOA4dzWAboHrQjKExn3bHaHDo1ptF
p5dJTZhkff937AQORT1SiGQL37GLc+wfP9Ph0GGh4ivPr3/H2K8liOidwqH1
xp6lqdSNGIPl+L4YMw61cfAOqHb9hh17x/vjBCsOZS4VexCx1IBt9Wfca2bH
oZ9wt5wurNdji/h50VROHOrSz6gx8rIemxC8SPThwqFYscHJ63T1WIdHQZQM
Dw497MogOMnXYTNcLrvX+XCo2vdjc3EDtdhho/QdJX4ceqO/P+GnWy0myFDL
riWEQ9nP6j34VlODoeV+L/Qv4tCK0adi249qMD1T5WHjSzjUgHsQXWWpwbyz
fsc9FMehP5mfKIcfVmMRmmE4WwkcelbKINnZrhrL3tIzfyKFQy+tBotemqjC
euWHuV/I4NDUC2vrXX8rsUuD8ymhN3Aoj469V9WJCkzRJ4/qkyIO3XlTFEeb
+hUz5nd6SFDGoXfds98wol+xV057/Ok3cajxa/bol57l2Gc27E2OOg51cPsp
EMRdjhXU+Pwr0MChZ4y5iHHNZdjw8WPZVTo4VEaMGyfPVYatF/w6Xq+HQ/H0
5NPBv0uxY4YfbJsMcGhY2YLYHe9STCKFRaTTGIf6agZ17c6VYEGy5wtm7uHQ
x/yPjOP6i7HE8X/0iw9waGCR5amTMcVY2Zvcp2tWOPS94o9PcneLsYnuK1cO
bXCoUEKsb/JUESZjd6OMwRmHkgcWbsf8V4RpMR5hZXXFoaGf2ak1egsxq68/
3TndcWhAS0LizdRCLIxK+5rACxy6/ICseUmhEPsXa16N+OPQefEp5oLQAgyn
wHvmxiscqhn+ktndqgBjmpt5qfKG1A+uy2SSpK9DOUmH6zpBOPTdZTy121I+
FvXbs8H6Iw79ltBChxjlY8q4zz/CU3Coq5kUr5p2HsZja+HrmkaqR+1UmrZk
Hobr55cxysChUb4jtH9P52HlhcU5Z3JI+5dSeXC05Qsm+PB3SGYRaT1h0mO3
8F8wqq6PKkElOFQ3C6fX256LjaHGeIcyUn7Ohp6SiblYNNvs0yuVpP3U3Jhj
qpCL/deK16+px6EKv8fbWsJzsJmrzSeSvuFQkSq71KePcrCGtOAm/+849Gvm
44ZmNAd77s1+Ve0nDhWQkuJ7upSNzYtLcPR04FBGfJiflk421hpjPT43Svr9
3N98NeksLPPIpc+t46T+OP1WkWXJwgKcN3XyJ3Goj1rwWMZWJga3fRtdZnFo
jyNVzmxpJpaHJ2SQreDQf5P2M7WymViodZs9M44MpTrf0rxsnIHZ9UTw75KR
oZxTbRZ+chmYqvzd0UFyMvRE/3y8I38GRs7xTyuRmgzd++Orq7WRjjm1kUsI
nyBD0eeBMsTQdExXUnJfjpMMLRlMy/g+mIZpcL9UVuciQ7G2K5rO39KwmzTf
ww25ydBq9ZsTjrlpmNy4nrADHxlqsjndoumdhl0MdjEhXCRD/cQFvwYIpmFH
potrthAyVN1tWzfnTSpG3nFwnPw6Gfoj+5VrjksqdlipYEgrT4aGLVHtzFim
Yhuh3Ss8SmSohoO4Hi2kYmPIBrfWbTLUk95dbHsrBauMEPfPNiVD6Q21R3yf
pmCl3s/bS83JUIPKw55WyxSswKaBo96SDOWaTs1T0knBMuR0SvoekqFHB5+r
11xJwSIWn05TOZDijRjivu4mYw6KhSrmXmRonPKL79cDk7Fzm6K0TAlkqEzT
fGRvcxI2kfa84DCRDF1Nkox1w5KwVMPvetPJZGhK0bkx0eIkTLDKOK4snWSH
iI7F+CTskt+rS3fyyNAIN4WBN+5JmAz9kFY8Rob221Z2UIokYYf157de15Kh
NoJ3PzLxJWGY85MYx3oy1GhQ/qwMRxIm10c9IfedDM1goohv+C8JU4kXc55s
JUOVHjm9aphNxPQuvo4UHCZDaauPjtzKSMRYRjquMYyQoZkn9UeDExKxvg8c
I3ujZOiXjpsC41GJmPFGAf+vSTL0re5MfeXbRMyycqjcfoEMjTw1JC9pm4g5
qF4eLNon5dNel8B9JRF782CYC07jUf7Dx5RFvxOw/kacKCcHHhVKTj7yrzkB
Ezx/7voBJx4tqjafvNCQgP2YfmhewY1HXb3kyjrKErBj1isJkoJ4dM85hJCR
mIAFPqY4d0kaj66EBb2zdEvABn/yXT5xDY/q3s6bVXmagAkJqcgvyuDRGRdX
+6t2CVjLfJBlNopHXagufJC+l4DR2DEn8yvjUcunea9yNBKw9w6CvGf18ais
4dtW/QsJ2HDbzSs4Qzx6ZS3sSzdfAnZR1F7hrxEezSVkahpzJ2C/VwrvE0xI
85+jfeXLmoCdfCqbyvoAj+66X3CXPJKAfXDWOE/vjEc1sy8180zHY+EeLgLk
YXiU/YYwzefMeIzckO3XsY94NEtFYbk2NR57IlntQB+JR+f6UiKXEuMxzXXK
srMxeLSZJ2LKPCYeo7X7qIgm4dGA2Rn/+MB47JV5keWLQjz6/eNKsqtDPLYJ
BtT+xXi02/5vFZ1tPPaAcz8zsBSPYu1tIQXW8diNAfnVmAo86s6B8RyxjMdw
up1eX+vx6KaGniqZXjzmobxK2OrEoxHHnB+dkY3HZvkirhO78aj/lXYVzqvx
mAHl1UmqXjy6KuRKfk4yHpOs8xZiGsSjA42M7bKi8dj6NboK8Qk8KjPacL+U
Nx6zFbnU67iOR8tm9gq+nIjHzJjs6OcZydHCWQvJttY4LKKCkbadiRzVz231
efgjDvtpVnG0hIUcTZuuj6FqjMMkso6QebGToy9enN+7UxWHHUeTlhh4yNG6
1sF28+w4rNy6t+XaZXJU/Wbqesu7OIy+Su7VO01yVOaNzkLd7ThM2WLWx0Gb
HG044TwtdTMOe0Ed4qmrS44ynIgiL1aOw2Y0h5zPGJKjwsk0Ltj1OKx6yvVe
oRk5emommp1dPA57fDLn+oA9OfrwzhPJOdY4rMGSeV/wPSk/1nb5T7OxGMsr
eCcVQo7e8Y8M856KxWwzH7IphpKjWZQFcQ7jsRjTSqmUeQQ5qkUnjJkOxWJW
ngbOkbHkaAo1OuDVHovRREUtkn8hR58SEmYavsZieq2nRwd/k6MPNJ8NnfwQ
i2WuyDv8aydH4wf6MwjvYzEiow1xq5McHQzIWbsYGIul36nkYOglR9+75Q+Z
vIrF9maMjVRGyFHNi2fE117EYvHksZ3Fy+RoKo37lenHsdisFFfjezoKVDOL
f7tRNRZrOcZVG8pAgcaawsch5Vgsb/BMZcQpCrRrzyl+SzEWc/E6UxDLSoHe
Vv0we0U+FsM3ccbmnqUgne+D8f3XYjF2fQ6XVlEKlL9C3AUTjsXUndn4aLUo
0IaiQOZWhlhMVIntLL0OBSonl4Iq0cdijKxs7Ex6FOiTlmi++pOxWH8lKz2n
EQU6sJRzqp4mFntIwXoobEGB4nlstseoYzGvMOaeW08o0KY1ypDYfQJWmM8Y
EBRKgT5NzDOenCZgxqrMfXbhFGjKMzrGuikCRjXOKqQRQcpffqcgfpKAGTGe
6aCPpkAvvTOMthwnYDhXAc5PCRSo9F20iDhMwG7KICWJeRRogcwX5fc9BGyi
8eFUaSsFmkp2WWmlkYC9N30kHdVGgSbL1fFQkiy5bRPo0UGBXj/N9p7tGwF7
K/BETLaHAtVdM9pRqSdglwKfe9YNUaA9mqVTXzEC9lzzA9OveQo0u9loe6yM
gDEOflUcO0aJvo1+LSWTTcAGVxHh+eOUqNbMx16bLAKWcrSeYZOWEk3uhNXY
TAImIflz5CgDJZpbnB1AnUHADEIHPERPU6JT8TWTsykEjKC8n+t1gRK9L/TZ
dSWOgPEVyzKfuUmJThzqLu2FE7DFn7UH/OqUaLO99yl9kkvHFCbENCjRQcET
jwrDCJjySfV8RR1KtGNK5KN9KAF79NhEzc6YEiVXiSncCCZguWdfvqyyoUSL
DJakJN+R1v++ZvpOECVa1WLT7+NDwBofK/HJB1OiOoqeiUdI1lFpvSf4gRKd
PftdNtibgD2hGBzdDqdEN37Lz8R6keJ5bA18/Eyar+rHxHdPUr4PL7b9zqJE
T/69fA2ekeqDfi6T/0GJ7nUx23x1ImBJHOe2BFsoUeq3TdQGJIvtZVyhb6VE
FZqa1TefEjCNktKCkXZKNElGo1+c5HdCndkv+ijRI+9sm8odCRie9VhC6Qwl
GrO8cGTMjoCtrLi+uUBNhZaFXH2WbE3AaD17Lh89SoWy2cus65EsdOzK8NQx
KnQ+/vbqUZIfcK+KJdJSof/EHTwcrUj90rIZZGGiQjs+USYrPiRgTYVmIlS8
VGgqz1DakfsELN5ZpXtEjgr12uH4NWlGwKrJ0l9W36BCzweZGqSRPBBEJfhZ
kQodR/lvW5PMlFrvqa9Kha4ctD1fNCVggT2y/K2aVGiuL833AxMC5iYp9qzC
jAq9ahX/TuQuab07bGcjPKlQwcVotwFD0njyPZPPXqR8nCOJySQ30wx8TvSh
QpO4YhfsSJbjjmH5EkCFVlHH7JGTLK52+mTTeyo08fJ/zWIGBIyFcJq4E0t6
Xn76daIeqX9pezK4BCq03o79/BOSP+QPeFAlUaF4ChZuOZKPNcZs0qdRoQ0M
7wTGdQnY/uLpxQtfqNCH6SK2AiSPoOxDdzEqVCptVrZRm4Cxq+2z3aulQp9Z
/9OKIdlQd9DgUT0VqsPJ8NWB5A7rz10u36lQi+SHz9lJbghlbwn+TYVy4+cx
Vy0Clj7BXlH7lzT/qYvlMpoEzPE1RxQvjhrV+vLw6746AXMyxIkcxVOjlNy9
MkMkuwiON8yTU6PkmtzbVSQ/b0lfLqSmRh96f2X2Ivn1SXFluRPUaISH1DIV
yXGfVLdMOKnRfzfu5nHeImC/0l11P8lQo17FvN+eqhGwNnejuWcINWrPr59u
RHKHqqy3KUqN8r1mK79Ocu88PofvBjXa1idtcZLkiUvvKYrVqNE0Q9qfX1QJ
2F5ZcmG7ETUa8jCrbFOFgAk0t9P9506N5sZGn0xSJr1vSdaTfM+oUXoR7pZA
krNfkJXLvaBGn9rdKnYh+aKYqJmHNzX6FcGfUCNZPCYkd/YNNXqS8nj3hhIB
Q2xvqzVFU6OuFb90tUl+qTTNOfGZGhWi4qoGkmvOvlwlxlKjyKGTuhDJ8j25
UZJJ1GiMBPMUJcnKQDuTmkWNSr1pnf2qSMC06X75+VdSo51VEdRCJIfP3TNI
qKZGX1lca2Mjuefb/oWqGmqUvzip8ijJBh5CnesN1Khu8hfitAIBMxl/d/be
L1J/HiueTyXZqli1Wm6YGh1KOqjhJzkjeOyDyQg1GptFkcpK8j9rj/seY6Tn
5iGZx0i25cw8XjBFje6y8tEt3CCdH6+O3jm7RI2Wug/eLCS5yDzhouwKNWpT
Es2XQvLGNWm84Ro16byp5ogk2W3ZKiNkixo1/cZj+Yzk8h+4F9k71OhjjpE8
W5J3kz9pNO1Ro/cmltnMSJZ5eYln4oAa1RZkSNAi+YVh0xaRSI2iRLy8Asn/
A0aeZcg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$80758#5"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{Automatic, Automatic}, {
           Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"\"", "\"\"", 
           "\"\\!\\(\\*SubsuperscriptBox[\\(\[Delta]\\), \\(0\\), \
\\((1)\\)]\\)\"", 
           "\"\\!\\(\\*SubsuperscriptBox[\\(\[Delta]\\), \\(0\\), \
\\((2)\\)]\\)\"", 
           "\"\\!\\(\\*FractionBox[\\(ln \\((1 + 2 \\*SubscriptBox[\\(if\\), \
\\(l\\)] \\((r)\\))\\)\\), \\(2  i\\)]\\)\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Opacity -> 0.2, 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Opacity -> 0.2, 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Opacity", "\[Rule]", "0.2`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              GrayLevel[0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHSL4QWmK5FM7XWeZ14/MpOwflgl4vdCYZw/jP3A/
t2Ga+jo4v0tD7kNn9n44n20Dqz9L+HE4X7ptG8vni+fgfOU3+g+ml1+G8z8p
TnJ+5nAdzj8z9cPK6OjbcP4FtTX7VyTdh/PdF1W9DZr0EM7XCZj758nsx3B+
7pE2vvNNT+F85+NyP1QSnsP58i9NkvnSXsL5ERcFL/p7vobzp93IOaAS+hbO
z8wra08Nfw/n+6Qu1qif/QHOf77Iy2/q/I9w/gbn0NLwSZ/g/D+f5WKTZ36G
8ye93m+wdPYXOD/c7Qjr5J6vcP78De2zT038BueL1q0zWtf6Hc6/NmnN1uMl
P+B8ye2ZP7UqfsL53XZddlZZv+D8+quZLpMLfsP5+zYrmCkV/YHztb9aacYm
/UXEl5vI3Ydp/+B8q18Bk4Si/sP5l6o2zbRRYXCA8T0Y5pyashTBDzU3/+Mk
xwjnK38z5BNbiOB3pt1TsJdmgvOnVJVpMk9G8BPE8oTeiDDD+UeSxf9o9SH4
Ly0UjvUJssD5mzeKtPVOQvBF7uxye8TFCueb9x14Ht2L4H/8WN6pzc4G5wf8
lFKcVofgF3bIzlRlYIfzNU9eFOSuRPCDBc+2tO5B8GsjT3z//x/BBwDJYFe5

              "]]}, Annotation[#, "Charting`Private`Tag$80831#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0], 
              Dashing[{0, Small}]], 
             LineBox[CompressedData["
1:eJwt1Xk4VN8bAPDZJyqyZMkWlT0h0YJzomxJCGNmJEuSUnwVhSwVpVJJUqKN
shQqFNqcSmm1JKWQEUql7GSZub97r9/95z6f5z3Pufd937Oo+4W4BtAoFMpd
KoVCvN2k+jXSFLstMfLpAx0Rcxx6tC8BKQrx9AOBbe3tdK1iQP2/LXKtrt0A
5YD+fx/TVu0/uqMKzPy/Nf2O5Ww5/AyY/d+s28wNDE4NOPB/z1H6WhAt+wYk
s6etdPgeY6ihFlgoTPv8ubV37EIbgFBs2gt6lwjO7W0EUt3T/yfO7pACXk1A
oDwdH1RPtf4OP4HLnGm385+Mznf6DCJXTfvt2f4CPr8FvI6YtpN3rQltcxuY
c3ra9ZqFVfl+7aBOlkq6mZef23hVAPJ3Tts2O+qPa2oH2Oo77ZXjM0eUzn0D
V/bRSOs7X5zqyuwE//2ejjuKpzJ5p7rAIXM66Z3VhyXqDnaDrJXTbn7uSo/6
7ztQz2KQtq5R/bfQ5wdoMZ62UXNBkaJ/D7gdxiSt9tPEX2LrT/CzlEXafNOC
ebc4v0BeNZu0Z4NUwwb73+AKWbB+MOZWZbdyQy/gLZhFOr05GC10/wN6z087
PmdgwVqPv+DObEnSQbsijgRw+oDWv7mkodOS0fML+sGF0/Om8wnI0Y7L7Adn
OSqk5zH2rjqmMgBU4jRI/8h2cDp7eQAseqk9PX6ozndUYRC80jAlfdvaPZyT
OggeBZuTnhpS3eSfMQR4HBfSNSF9NgnzhoH+EId06u8qw+uZw8BOEEh6WMFK
SVl2BPDGj5Hm2FQzzySPANsXVaSjJ6/XG0iOgj8zu0hfvn0k8/XpUTDPQplK
mCevFPhw5hjwKd1Fem5ssXFx4hioLEghHZG0eHilcAyUxfwh/TG18G7Nnn8g
QKuCRvjfwuOcyNF/4MkXTzphxfKgcd1942Bz7iCD8PuJ8UzjgXEQHZ7FJHzc
8pjlyu0ToDPvA4uw3UJafP3NCUC9gdiEmeJRT7b+mQA94flihJ/2DdCEBpNA
r7JkJuG4pqA1Z0InweudR2YRtrlzReN5yiQw/HRNgrDEiU+UsduToDq3mvTH
bRLt2g2TwGntaknCl9asfcQbmASvnL7PIbx1/v7MZKkpsNdlqQxhg6mSyMdG
U+CN3DtZwqOffnL6XabA1lC2HOHHpfNNNcKmQES/jzzh3slDaTopU4A+zFMg
81/zY9CweAqcdKtTJGzYo5Bt8mgK6OhsVyH/N9nBZfnbKeCzvUmZ8CbD/RTz
limQlKKrRnjPh6Jb4NcUuFO3iPTxfe3e1uNTICPdTJ1wtrKUhO0MIZCVStYg
XPy3oPulpBC0+UQuJFyJrB45yAtBwAzvBYSrU1vS3qoKQVHZctL1W/YEO2kK
weuyJk1yfc7IVXJdJgT3V6eRFhV+eu2+Rgju2oXrEJZ1EYvibhSCM1qf9Qjr
jazU2eQnBGKd60mXVH12OrBdCHSWWCwh9/+xfXuuhwlBkr0d6dg+2yPlEUIQ
4uppQPbTTf7CqyghwFx2kWbd/17YEisEbsvyDAnbq92r+nNQCGov8ZaS+7ds
SNz0jBCsSsVMCAfaG3nE5uD5xmDLCP+VqY/OvikE60ferSDX69ddV1+UCoH1
4rXLCd+3tixrLheC8JkhK8n88mfX/HogBMzNjywIW0m0fZ6qEoJquJ504u7C
XolqIags+rWK8MvmaGz+SyGY3aphTniW5TrppW+FIHm7NSTsnDNv0dp6IaCE
OVoRTpvxy4zzQQgs9PvJePPOSoegZiH42XgcEFZuTNoU3SoEut5zVxP2We4Z
ekIgBOPr3WwI51zUOnS5Swh4Q/dI6257kf+sVwiooQLSJcYBtT+GheDIzEJ7
st5C+vBMoRD0+mDrCD+pyVY0ZIrAM80t6wkzFofpW4mJgMUsNdJ2qauB22wR
eHN8uyvh5LE5rlulRICzfd9Gcn14CbbsmysCup2+LmT/n97ae0xRBHZvCyLH
e2rFHctSEYEpuTZPwlnJTheL1UVgTFuPdPuAym20SARcvLrdCWtw/jx9ryMC
GsiWS+63hw+buhaLQIfiiDfhG+rJPaNGIhDmkb6J7Odh/uQMUxHgBTWTceNe
XQmllSKg0OTtT/bXZWL+YksRGEw/40v2996rpcBKBJjVHmRcqJRh42IjAnV3
mrYRTvhuFhzuJALRwQmkZ935eDrDQwTyZ8wJJvsnl3vtJk8EgiwMdpH9iw4v
f+QtAl1Gx8LJ/gnWvK7zEwFHulQYeR/byLZ1bBWBkfDde8j9v/zn5eLtIjBn
a+B+wg/1HvtF7xKBeuVtUWR9Vc8ssgsTgbfnHeIIe0lt65GNEIHcnbMPkPcj
w+JmR6QIKH58SMaFo1K7imNEoDjbPYlw7c/vhtEHRCCzg3aYPL9aHwzZJuL9
iR0k47vqUu7JHhUBtl3cKcLgaUBkR7IIaDu8P054zt2V5sUpIiD70S6dsCBP
EotKE4Fae++z5P1zoeuJ7Xk8vvpeGuEDJyoTZLNEwK/Z+Aph1/iTth2XRSDq
ffFFsp+7/cWLc0Qg4tDXXMKDAcvfReWJwJ3OyhzCzzxnp9jeFAEjR79isp7r
vrnK3hIBt2fBNwlvsSyf21EiAonFuXcJmxglNxfdE4GqMMsy8vxf6JsZdV8E
hly+PiDPbzlTb9vHIkBP83tMOFdsprrsUxFY2HnwCbkepto7Bc9F4KH1y1eE
bfvKcote4eup5nw9YYVvR4Oi3onA7BEK6Z4P3vq2DSJwfplGG+GKmqV9Mk0i
oGN/v5nw0fszSgTNInBAL/8HeT8Wte0pahUBS2/lbnI/XikxixKIgM25on7C
E6lHJmy6RCD9A/8f4TeJXo9kekTgpGzMJLk/9hnFC36LwBp4fgYVd/AOlnVR
nwjQNNslCZt7tzCjhkSgfOMy0rNdbr+0GROBHpUONcJfrROPy0yKwN2nmXqE
i015TgKRCKh3Ay3CsTpLpIpoGPi27OdKwhuUGR8iWRjQzupZR3i+5Od0G3EM
tDRvcSbcTy3mykhgQIl3y50wGj6oLJDCwFCBwJfw6R+c9sK5GBhVzNlN2O+L
fnakIgZ0Tp9OImz8jhpgo4IByV2PMwnT0EctGXUMuN0yvEa4seTmr/aFGJjI
NC8nfO16fFGhNgaq21JeE95z3j00Uh8DDmlH2gmvOa671MYQAwpfmKOE58Zi
I9ImGChZpCBBw/099ENFuxkGLpVoLSJ8z78gunAVBnb++raU8GGPWMtIgIHN
wRvtCHPsN1JtrDHwfNbhMMLa5trV0rYY2C8cyiD8z0B4uN0BA/MvyZcQfqn+
3r7QCcPzpncSzpDNmxXpioHg4xMiwisnnFOleRhIcH3DpRPzOTTpv92EAcdZ
zrsJz73ArUn0xUBbx9tywrRfbb4gAANXQkrHCfev8Jv6tw0DSQ/mGjCIfh79
nl4SjIF4+plswm8/bzcKDsXA3AdhVCZxnun0vVm0BwOde7P8COdF7t7avhcD
clHMdsJpr8YoGdEY2LFKJY6F+6Di/kzXOAy8CggbJxwaRDGddQgDT6qXNLNx
e1cm1D8/jH//qtjZGbgdxcR2xB3DQPinwANiuFdwTzBXnMRAgXVJijhuzQKp
K4OnMdB7aOLkTOL8Hz+7svAsBtT/1ZydReRnP68pIAMD0M2BP5vI7/ylELWL
GFhEibtC+GuPhvjnKxjYTtnhQvjN8rxrqdfw+hb5/iLmq0jSA475GCiKv5BP
fD+3+dZnZiEGxrXSTuWsGKhK0zbZU3ULA18ujWROXB6pOrivQiKyFAPDfw8H
5TVNVIW+NC8wLseAvOHxpQk+FLRJ4Yl1730MPAxT7Xa/QkfLK17t2/wUA/41
gkufHoujvrEv39Y2YMCS87UrfdFc1Gq7OQb7gK+nTxknMrTk0etznfKVzRhg
vE3oK9RXRLlmvY76AgwEKt+SZZurIK+9wnvSfRhwzU4Zp9zSQAGTp56HsCjw
stN/e03u6aL3USUZ5gsp8OhHM92zjGWoZ37ExGpNCtz8fO7bjIRlSPRiBd9W
mwLL/q7VH6ebIl2ZJ8qu+hTYExL4+RXFDB24WXc50IQC/ZS+qFQMLkeGrb3X
U9dQIFVv0QGNCnN0wkKrpGcLBWZvCTyW+H01yu78Jf13KwUePHC+P1fZClUc
Ld49tI0Ckw0bF8S6WqGupmXLRMEUeOdpk6bzIytkvmtNhUw4BQ6XtRw6dsoa
/brk+9gykQJtNkYrXddci+woWa/TrlOgzMKU80jdDi3c6Xdobx4F9s9m31jl
aIcoX7TNeQX492JrA+Ii7FBl6d0itSIKlFPreeT72g7pBtal3CijwDXXJeUv
hNijmbU0DnpGgSfg0gtzbjug2sygzt8dFLjI/6bic/H16MYMw6zaTgrUW+3S
WWewHh0OH3W7002BM7qCqTdd1yOw4dCLiJ8U6PTf18TGjPXoNu1iAXWAAqsE
K5sHFzmh1KD6EHkKFSLzmOGsZRuQu5nZlJUqFXLj0lVnX3BGzhpxdk7zqXA9
oy3l7A1n5Di7Jo2rQYU11MdTzAfOyKrTY3GoJhUeKNMOudzijAxORXhfNKDC
1YcChsqVXNCMH3fRmCUV/iv8qX3hnAt6mG6SWLiZCtNdW2XGYl1R+YH9DeW+
VJgkv1HuQbIrKgmuVnnmT4Wmr/Pqtl9wRQVWbvc+B1Ih84hCzYm7rij97+4f
rFAqhL5PZnb/ckWhNqX2vvFUONy4N2HAZSNaMGokIXeVCtOehu1fJu2GuvL2
l4iy8Tg3/MQ3ZTeUy63x+HGNClkuavfjtdyQ7iOvyxX5VLhHcW51irkbMkw4
Ysi/jefj8aqUutUNmUu3uV6posJ6x6F1pvfckIdB0jndr1R4MS9YfrujO1IQ
vF8lI6BC29iRUG93d/T5tIpgsoMKvUSJujbe7shrpET7XTc+/8BSdn+IO/J/
2FYZ8gevd7P+p+JUdxTqsLS1bIoKjQt1zL83uaOjW7/OB0o0OCm2UqZwowf6
8oJipKpCg875a0YZfA+kq7VgtVCVBiO6Nx7b6OeBXv8I9H2ggcfrDow2hHog
8aCBq2a6NKgid9/R/YQHSt7BWGC4gga7078YH6z2QCdDdRepc2hQEFvFeavH
QV/rHZdRuDT47p/kxmEjDjIwClnbzqNB/qDsSZnlHFQ3UBpw0ZsGYw3/DZqt
4aA5uy1yFbfS4OX1kx8UvTjodLizlnQ4Dd5fYYqtO8ZBaVEROvQzNMgbLzpa
JuAgOnfeO/GzNHgv98Q2++8cFGb2OFT6HA1uemST1vSbg1yGmRXqmTQ4S3VU
/MMoB0nsOmsDc2jwyv1vv7bP8kRHfMv8Y0ppMEBWUVfc1BNF2Q1eHGukwTO/
JT/6HvJEPzXTV2NNNOiW3XNq7Ign8mSu7GY10+DFVmexw8meyOzpAX25Vhp8
P3wh8MRZTzS8SuqBSRcNLn8yJWOb54l2LjFs/m+YBrdMvEkNeeWJfOR2SffK
0iHbvja/eQYXpT+QlWiQo8PSYeTNm8VFb3weiN1ToEP5gsSPHyW5yPTmDGq8
Mh3yLBq1kBwXzYI5fTIL6dD/+jEl94VcVBnU/HbVUjrMfF7z5qQlF0k/sjpy
3IUO1+vd2PBfCBfZ+f08GLqRDpO+/Wj1DOOiGHZKrLs7HUZvMJthHs5FPS5t
4WpcOqQv2e08EsVFj7/v3VLqg8+3u9va5DAX7ZhTtLolhA4PTlZW9WRyUbW/
/JTuSTr8ujSE417NRQpHwPHlKXRY+WBYqu8FF+28ETjPJpUOHQ90RSe84iK5
gfLlvul0uJ9SGpldy0XbYj3Dz12iw74a546bzVw0OyPjL/0WHe4RY7pP/OYi
j1qljtY6Ogw5s9znliQP3RiwDv3VQIfqX0Z2vpHiIUw2GBtrpMMov5yhThke
yuc/VJFppsMBKBcjrsBDkz1ePHsBHTb6+EsbzOehK/RLjXf76dDM6mpu4xIe
+rl8/ouTUgzY67c766EjD70Vn/8kVYYBZZ+kXgty4qHbrWoP0+cy4Fq9/QIZ
Zx6KiFcruaTIgJ6J6gyfjTxEe6l6qVidASP+vtr1ictDyhyViFoj3IxLMTZb
ecgpfJ6mhCsDPlKyGrGK4SEj23nq0m4M2LKFF3MplodkFecpy3kwYGza4sqx
OB768lBRWpXHgLyxSF7OQR4KZCiKFvsx4O/1MQXtR3go/oz8x/VhDJiTXHmr
7zQPld6RPXwilQE/X7kVlXiNh7wc5D/vSmPAnU9Ze45f5yFWp6K+czoDFqZe
e30ql4d4smrvpS8woN7lnowz+TxE2aujev4qA/7Rd5mRVMhDjuaW97JvM+D8
H+58zTIe6noR+L28lgHTCnV97J7y0MnN21dk1DNg/WjCWdVnPGT2Lzg56j0D
PtSfCB3CfUwnzNjiIwOusZnUyHjOQ4bJ+2OftjGgRtGP2x9e8tB+l9Ny73oZ
cFX7SWOJOjz/1vs238SZ0CDrQ/a5LzzUOmi5uHcWE3p5fZNxb+Gh62LPZEYl
mHC9s4mpVCsPmZq9EYjJMOG1svjziW085JnaEmWkxIQqn1znbhbw0EW7qeJ4
PSZUvL/h4sduHtK8ayGv5siEkmt913X38dDfN0+E2k5MGPqNXr+/n4fKv63t
MnZmwhVHLdfKDPCQ3RynOzZuTGgk7ipmMchD23d4r9vlxYRlVX8MEoZ5qFg9
Lu5RMBMWpAwnfvuH538S/eCfYMJnPDXNXxQ+erHDVtP6FBPWj1Ww+VQ+crOv
3aJ7mgk7ulp03uAOY7R2/Etjwjr/xyYFND4qjhprOZvFhN9/iyd5MfhIM9Cg
vu4mE+6otrC8yuYjWZhVYf2aCU3dTz27MZuPclQWjOm+ZULrE8H/mBJ8ZDxZ
sEy6lgmrlZtTfHA73ysvETQwoV+Ndb+MJB8d128sjPnMhKngS8LuOXxEUxS/
Wt7DhPOSqB1yMnw0MLD3qB6bBR/s3Ws4Is9HErEfl4qJsaBS0ZC1hQIf6Ysv
+/pdnAXFLYzbEnBv1Rg0zpZgwYVnP+dIK/JRq2twq4IcCyZtmp2uPY+PXpb6
LGEtYsGsUOPblsp8dCXcvklgxYJv84W1CvP56DE1P+7xGhZ0LZSjbcTdcoKl
m2XDglei+hqSccvlPovlOLBgba+aA4Y7+aOFdq0LC3qvNS9sV+ejfWbG0Q98
WJD/KOvuyQV4vuPz1NNj8fHpeu8LNPHx9EnvrHgWPNymWNSK+9Xslqzsg3h+
Manaklp8ZKWRqXDrMAv61YkzduM2Wac05+VJFpyxaoevqTYfKVxUwsYvsWD/
Zn/7Qh28f3mT5pSrLLhppC7mM+7Td1qiWDks+Pl2mxdLl4/EX2SOSuexYDBL
SWUz7qm/Sn/1brGgjWzT3Vl6fCSAym2bqljwU5XhC099PlJeNzVvyxMWBJlK
PfG4ue6tntufsWCFft6jfNzvg7I+RNSwIIX+LXEMd3Wq8ttTdSz4daj0wunF
fJTfpfzgSTv+v31ibhUGfPRfkkrGIgob3pU029NoyEd7uJQlYjQ2fMLR6+/H
HaHbWd1LZ8PIpQvNJIz4aP/b/P5SNhuq+p/UssOdNMfEzkqSDd9MGmZV4r58
3mHMW5UNVTo0Fp4x5qN3+Xvdz5uz4cHqvAULTPioPpL3O9qSDe9lRBSuxP3e
weLAZsiGJaEV4q64m3tpRZpr2PBY3kW7eNxdhicZd9fh8yXpNnzBPVlxrbSB
h88XarwhaRkf6bxqkJoZyYZDmdnvXpjy0facoG7NaDZUODh4qwV3YQy10ioG
z6f6TGA/bgNjI5+oA2zotWCVp6IZ3r/MlOKfR9lQZ+dS+yDcljs3rHt5gQ2P
11ytpC7nozjbH6pdWWz4YNJBSRY3Uo8bxC6xYV3iQY4mbuuPxRlmOWxYM5Xh
44DbDkj05N5kw/hoz4cpuDdKvUtIfMiGNnBng9wKPkr7vcXz6mM2bBDPG9fE
/fH5lN4jxIYJh/wpZrg9o/Qbh6vZUPmq7w0P3N6dx9W3vMPr/8d7bxrubXcd
Hlt9ZUOtzTX64iv5qODUt9PeAjbMNPjCU8D9KygqIOobG9YrBuzQxL1T9cas
ku9s6CwQmFjhDjsixlfvY8P1zZtD9+Eu871qYDHAhq0LFlQm4h5ZtYLGHWJD
tQHu91Tc+/q3FaSMseH8TrW+QtyVrykxheNsODK8+E0l7olr551fTrJhsV9R
8gvc5nGGC7uEuHPbljbijuG+HMMwNuwxF6F23P8DrWIu7w==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$80831#2"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0.00001, 0}, FrameTicks -> {{Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
            Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0.00001, 3}, {-108.91990685298845`, 
           1.0000129956606625`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"k\"", 
           "\"\\!\\(\\*FractionBox[SubsuperscriptBox[\\(\[Delta]\\), \\(0\\), \
\\((2)\\)], \\(\\(\\\\ \\)\\(\\*FractionBox[\\(1\\), \\(2  i\\)] ln \\((1 + 2 \
\\*SubscriptBox[\\(if\\), \\(l\\)] \\((r)\\))\\)\\)\\)]\\)\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7950013463928556`*^9, {3.795001387951041*^9, 3.795001464376752*^9}, {
   3.795001531748805*^9, 3.795001557016724*^9}, 3.7950018187829313`*^9, 
   3.7950018676470957`*^9, {3.795002048985406*^9, 3.795002079831566*^9}, {
   3.7950021938972197`*^9, 3.795002229888139*^9}, {3.795002799224118*^9, 
   3.795002838074942*^9}, {3.795002969018911*^9, 3.7950029760403233`*^9}, {
   3.795003045741383*^9, 3.79500306676898*^9}, 3.7950032854126577`*^9, {
   3.795003327527792*^9, 3.7950033551907454`*^9}, {3.795008981196389*^9, 
   3.795009052659438*^9}, 3.7950091521501102`*^9, 3.795065460342504*^9, 
   3.7950657613704967`*^9, {3.79506640439117*^9, 3.795066476855781*^9}, 
   3.795076596969632*^9, 3.7950768722152987`*^9, {3.795076903083005*^9, 
   3.7950769487028503`*^9}, {3.795084799858582*^9, 3.795084821130715*^9}, 
   3.795085013950941*^9, 3.7950850545412703`*^9, {3.7950851074506702`*^9, 
   3.795085303171769*^9}, {3.795085362340411*^9, 3.795085389218298*^9}, 
   3.7950855090659924`*^9, {3.795085546127654*^9, 3.7950856313526697`*^9}, {
   3.795085687016275*^9, 3.795085697233573*^9}, 3.7950858998883543`*^9, {
   3.795085936186784*^9, 3.795085962718361*^9}, 3.795086248797868*^9, 
   3.795086316928397*^9, 3.795086389055345*^9, {3.795086428121498*^9, 
   3.795086441519402*^9}, {3.7950865508422413`*^9, 3.795086589601555*^9}, {
   3.795086736857193*^9, 3.795086848861762*^9}, {3.79508694164959*^9, 
   3.795086991199792*^9}, 3.795087065119318*^9, {3.7950873899833097`*^9, 
   3.795087406029355*^9}, {3.7950874704375772`*^9, 3.795087635557097*^9}, {
   3.7950879684158583`*^9, 3.795088026771104*^9}, 3.795088678420512*^9, 
   3.7950889166032476`*^9, {3.795089004923061*^9, 3.7950890436555233`*^9}, {
   3.795089452475478*^9, 3.7950894758262672`*^9}, 3.795089528758402*^9, {
   3.795089571215811*^9, 3.795089651579701*^9}, 3.7950902671805353`*^9, {
   3.795090382900198*^9, 3.795090393540493*^9}, 3.795149713453453*^9, 
   3.795151556025137*^9, 3.795151627441717*^9, 3.7951524637049294`*^9, 
   3.795157284397588*^9, 3.795157382851561*^9, 3.7951582701738567`*^9, {
   3.79515831098311*^9, 3.795158414429173*^9}, {3.795158459562636*^9, 
   3.795158476575201*^9}},
 CellLabel->
  "Out[440]=",ExpressionUUID->"e4e64031-518a-4a43-8821-b7f0b30fce36"]
}, Open  ]],

Cell["purely imaginary momentum \[Kappa]", "Item",
 CellChangeTimes->{{3.795090671363083*^9, 
  3.795090719751287*^9}},ExpressionUUID->"7182c979-d35b-4b4c-ba35-\
033427387787"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k0", "=", "0.01"}], ";", 
  RowBox[{"kMax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"gl", "[", 
           RowBox[{"x", ",", "kk"}], "]"}], ",", "x"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "/", "kk"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mm", "/", 
            RowBox[{"hbarc", "^", "2"}]}], " ", 
           RowBox[{"Poti", "[", 
            RowBox[{"x", ",", "lec", ",", 
             RowBox[{
              RowBox[{"lam", "^", "2"}], "/", "4"}]}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"I", " ", "kk", " ", "x"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"I", "^", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"SphericalBesselJ", "[", 
               RowBox[{"l", ",", 
                RowBox[{"I", " ", "kk", " ", "x"}]}], "]"}], " ", "+", 
              RowBox[{"I", " ", 
               RowBox[{"SphericalBesselY", "[", 
                RowBox[{"l", ",", 
                 RowBox[{"I", " ", "kk", " ", "x"}]}], "]"}]}]}], ")"}], " ", 
            
            RowBox[{"Sin", "[", 
             RowBox[{"gl", "[", 
              RowBox[{"x", ",", "kk"}], "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"I", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "l"}], "-", "1"}], ")"}]}], " ", 
            RowBox[{"SphericalBesselJ", "[", 
             RowBox[{"l", ",", 
              RowBox[{"I", " ", "kk", " ", "x"}]}], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"gl", "[", 
              RowBox[{"x", ",", "kk"}], "]"}], "]"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"gl", "[", 
         RowBox[{"r0", ",", "kk"}], "]"}], "==", "0.0"}]}], "}"}], ",", "gl", 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "r0", ",", "rMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kk", ",", "k0", ",", "kMax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "[", 
    RowBox[{"r_", ",", "\[Kappa]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gl", "[", 
       RowBox[{"x", ",", "kk"}], "]"}], "/.", "tmp"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "r"}], ",", 
      RowBox[{"kk", "\[Rule]", "\[Kappa]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"\[Gamma]", "[", 
     RowBox[{"0.1", ",", "kap"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"kap", ",", "0.1", ",", "2"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Blue"}], "}"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<\>\"", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQbfvBaVm/2xtHu5Z760A0G5PeZhDd9/LddhB9Lrnv
IojuehTxBESv2+r5cQ2QLt51EkzvdVn7A0Tz2a79CaId8u3+g2glzQ2sa4F0
/EU7LhBdtNeaB0Sr+zBqguhl/rXaIHoCU4cpiBYSZ7IB0TnVhq4gOunH/yAQ
fWIZazSI3nP2ZiKIdpOSSQfRc4tdckD0D8PHhSD6lIxnKYhWKcyvBtHXJBa3
geh7opN7QHRclvAkEO2SfWMqiH6Vqj4LRFcu4lwDoiNzrmwF0X6zj+0C0dWt
6w6D6K6dF46D6LKpv0+A6Gyd9WfB7mDTuwa2p3D7XbB7fVgeguiMuNPrNwDp
C45XwDQASWi1+Q==
  "],
 CellLabel->
  "In[391]:=",ExpressionUUID->"c41bfc30-25c0-465f-89aa-b7b712dfc67b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVlnk4FF4XxwktJFJpt1RKtpCtqK9fSdlCJVqkRKEiCRUVCqUke5ayZJmF
FCWSLlGRQrIvGTNIY9+Sdd55/7rP5zn33PM999zn3CNt63LIfh4PD485Lw/P
/1eX/I26sTH54DxdmNJ4gwOfCumPX0k+AuhD7sGnOXjcJqk33ZWP7X3uq831
OcjmXXfgpOo7pPRrFvOLcfDXYLmZRMU7lNp1zV9Pm4N3M//p5JkCTPc1LBBu
m0XQdNdtms0H+B5aPPzFZAY1ErU2bWHFeKZjdyvi2CQuC/7MzyOfEbErqy2T
OgoyMmRUFlGBZ0s3W/y1HMCjvPjrBekVcEldN/1CcwCnbh1If/GOa/81EHdz
5QDmFiXOi2RUoFg2gn6yoR+7pU3zzyh8w8CKHUulrfrx3jRz83TJN9ALKZcK
rPuQl+HIqzT6HTMGxtenrrFhtd21pVy2GgmbKOZf+rsRHuK1cOn2apiPilNc
q7tR2euvbrWrGocP8Z7antMNvZTYkG7zajSuWP9h5lo3lFeU7uXzqoZD9BvZ
NIFuLJgQz9D5Xo3xY3evGW7sQu67995Zrj9gkxA2FeLCwrI9CyUi39WgjQzv
/G7AwIFWvxyF0hpUyB7rCN/OgLfH7IHS7zU4ORuednE9A520EbdRRg2+lfc0
UZjtyF3WVm6+4CdUBeKE/m1vh1XXK/clR37Cd0A66UBbG+Lvnfge2P8T7np2
Zf8ZtqB6Q72t5MRPnNTP9dLc0AL+QrN/uTy1cEmpdzSdasal4X0bu5fVYn3a
XG4XrRm7jytf19tZiwkO/zGacDM65AVkeANrsaIQv/2bGrG56oX3Dak6yKQX
blsVVI9MpjWlXa4OHoKhMppn66H2d3Gtnnod7p6s4njp1GPv+gvyIoZ1sHcq
EfMcrMPpC1uan7vVoS6F80DZsg5xCxI1v3+uw/c389MSFGshqhs6InmpHn9T
ulW7x3/gyWFdCX/Peqjf38OI+/kDkucHDdi+9djyQ5nf/dUPKD0ySXodVY9L
tqpnQy/9gFHrIjODonqsffzx3OXf1Qi45pd5ZVkDVpr/fH2ppArTL90cPuU3
wHr/WomP7RWIvVArNFXSAIdvNOmmlApobVbPUqpsgLKk1t9tThXwiPs7Hs1s
QK5lmH/8+FcM+V+/4yTUCHfzWftLIl/Refz2MxHrRpAMt0dVB8tQyf+g9hhP
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
/v7Qka5UZaMg0+TdTfU0dK+uWDxfnw05a1F9UXYaPlN/s9wvsnGkcdL2hDkF
H7Urfu11ZeOzrYL5ilsUfPj+ommpBxu/im2VS2kU5A67V2XeZsNjW4EMDz8V
aTv4C7rC2BB725XR94aKwHKpMIt8NpxSHe55rKRD4YmEVdAHNmi31rmu3k9H
zbl1EqSEjeBHeUEZHnRI8K+iyVayMTZ5NCy5jo7SmhWXrX+y0WFzX1pAIAOO
Scs0whrZUFnKv8lSLQOvd4t8nGayYTz27nNZWAaOCwvfU+5h4wVdb1FPcQY4
LYIH7fvZSMx/xfd3KAMptIXLY0fYcF/pFzgimQnD6/ObKyfYeMAz9v6MdiaG
9vMn8s2yESKU6VWslYlI8XnntOb1opffuG6DRiYYObPDSYt7sVlf+ChbORMB
ftNv65f24kjZEy8zpUzIm0/eFFrZC8/MVq08+Ux4DIwtcpfuxYcttp4PN2dC
eGuf9AGNXgiu3T2wf10mdj5rNh+w6UWEKk1McCH3/IuNKzfa9wLhCyzuC2TC
X7u+zdKpF4Mm/hsE+TJR3fjDsfhqLzae/3hCdC4D55aV+0bc74VopavKtrEM
hN97+2pnTi8mG/IK3jAy0HclYmng/D6UKp3vZrzLwPoVF8KfC/Vx5/DNdbF5
GTj49r8VRaJ9cPwktPVobgZeTQ+smlzThwRzp9nqVxnwuGsgdWFbH7bJueo1
UDLAEzWnZGrVB6NKgQyZ6Awsy3cwXknrQ4qQV3/p1Qzs5OgEppv0w2VCUql7
O7c+hv2CdbcGEOSoIJjzhY6QIgWLN+WDUFU9+1flLB1fp/KPmt8egt/EhOI/
MTo+zv93k4gPo0df4vG2KhrY6TcXLigYhhVfpl1rCA0U2QVrLI6MYOpoMS/t
JA3RuxsfeU+NYL3zbc0lCjRMfSq5Ffd0FN9Ov1mTx0tD1J2E5TMJo1i9crnt
Bi6r/udFO5k8CgVP9/aHPDQ4vVetX58+ioFmRS9bDhVN2UmKiS9H4bFsRkl0
loq8hNutKSWjmLuSY+z+jwqP69o7X/wZxWTMk4d2g1SIaa6sXtI3CssG5tK6
ASpejI3YuwyMoqSztXQfl7tdaKHKo6M43/ore0s/FRbnVv/JnhnF72BxSj+b
CrXDE9FvRcaQHphKfLupGFXIGS9SH4PT9PU6pVYqOheuGz6iNYYYqcX6p1qo
qO2829ezcwyrKoung5upyI0/yhLVHUO/v5rGQCMV1xZPVZ82HMNAh2/nqzoq
5np1M3hsxvC0SmqpfhUVC+mVtrr3xuBxKWEu8SMV67ayq0jzGM6ltrSupVHR
yi+j8unqOBTjglYP3aJC9NAN4Y9CfyFfuM4w05KKq2orTZ5k/cUxgccmqspU
OP99u8z9wATWn7fVFVhCRYxJ4i75gQmYtXvIR/VScPzuw4Hf9/5h5TVdn5Tv
FIQohK+Jl5rEQUsn403ZFIw7dlC3fpqExt2C13JRFAwHbC8qPDUFsc4LBnE3
KVi/4/sOeYFp8PGlMfnsKCg86av0mDINl2VPZC4bUTBqs4M2rTsD+RreQqLO
jfdP675u9wxOFeUb3ZSkwPKyzuADn1kkNLuvrRKioOzY8erKlXMw0Upsuz6Z
DqdGsry3YI77Hh8MRHanI1ljK0PYggP+FI5fbV06dAdvUfItOWgujPR7wOW2
9NrL9sc5oK3KCd3D5VWrfXgLbThYPer862VtOh5N12+46MRBuOYJlUc/03Gj
6K7919scbL8XlGf0Ix2HDBnsABoHB4azZWu+pWNonkaOaiYHdUdMRR5wObjg
gdevLA6SCqr59bhcpqC5WOMNB+tpzutyK9KxW+SRYhfhwGnmwWzs13TI1Wpf
3lvHwQT1n9/5Mu7+h6Fagw1c/T1hFtJctt/3myeumYMLciUaLV/SkZgbFjrS
zoGMUs0mUy6Lx/zJTmJzkPxUOkvzczpem8PLpJ+DsdOs8eFP6TAXjNw7OciB
kspyowwuP/TSrTUb5+BhdJaUNJfl1KLiZya4+n1Ek1pKufH7eu0oUxwYr/++
LYrL51L/Uzwyy4FoLOObGZf5TkWPczgcpMvoXxPi8v8A0gv06Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79086#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.10000003877551021`, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.795152409142465*^9, {3.7951524679222603`*^9, 3.79515256356984*^9}, {
   3.7951526237007017`*^9, 3.795152649682622*^9}, 3.7951582978596992`*^9, {
   3.795158394749411*^9, 3.795158400522807*^9}},
 CellLabel->
  "Out[394]=",ExpressionUUID->"5bc286c1-bf0c-4c76-b3a2-65573cdb10f2"]
}, Open  ]]
},
WindowSize->{960, 1033},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1132, 20, 31, "Input",ExpressionUUID->"8b100c26-8848-4236-b3dd-0b2c7ba4c5a6"],
Cell[CellGroupData[{
Cell[1715, 44, 12102, 302, 637, "Input",ExpressionUUID->"a54c6ddc-9335-4292-97b5-602233672f54"],
Cell[13820, 348, 1796, 27, 27, "Print",ExpressionUUID->"5e3aa47e-869e-4795-bc4a-1575a51a6c36"],
Cell[15619, 377, 101117, 1814, 406, "Output",ExpressionUUID->"e4e64031-518a-4a43-8821-b7f0b30fce36"]
}, Open  ]],
Cell[116751, 2194, 176, 3, 33, "Item",ExpressionUUID->"7182c979-d35b-4b4c-ba35-033427387787"],
Cell[CellGroupData[{
Cell[116952, 2201, 3807, 106, 124, "Input",ExpressionUUID->"c41bfc30-25c0-465f-89aa-b7b712dfc67b"],
Cell[120762, 2309, 15568, 295, 376, "Output",ExpressionUUID->"5bc286c1-bf0c-4c76-b3a2-65573cdb10f2"]
}, Open  ]]
}
]
*)

